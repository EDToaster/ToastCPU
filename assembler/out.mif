DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2041; -- imov    r0  .start
0001 : 4080; -- jnz     r0
0002 : C000; -- 0xC000
0003 : 3FFF; -- 0x3FFF
0004 : 0100; -- 0x0100
0005 : 0000; -- 0b0000000000000000
0006 : 5757; -- 0b0101011101010111
0007 : 7571; -- 0b0111010101110001
0008 : 7117; -- 0b0111000100010111
0009 : 7553; -- 0b0111010101010011
000A : 7317; -- 0b0111001100010111
000B : 1137; -- 0b0001000100110111
000C : 3516; -- 0b0011010100010110
000D : 5575; -- 0b0101010101110101
000E : 2222; -- 0b0010001000100010
000F : 6547; -- 0b0110010101000111
0010 : 5351; -- 0b0101001101010001
0011 : 7111; -- 0b0111000100010001
0012 : 5575; -- 0b0101010101110101
0013 : 5700; -- 0b0101011100000000
0014 : 7557; -- 0b0111010101010111
0015 : 1757; -- 0b0001011101010111
0016 : F557; -- 0b1111010101010111
0017 : 5357; -- 0b0101001101010111
0018 : 3226; -- 0b0011001000100110
0019 : 2227; -- 0b0010001000100111
001A : 7555; -- 0b0111010101010101
001B : 2555; -- 0b0010010101010101
001C : 5755; -- 0b0101011101010101
001D : 5225; -- 0b0101001000100101
001E : 2225; -- 0b0010001000100101
001F : 6223; -- 0b0110001000100011
0020 : 0000; -- 0b0000000000000000
0021 : 0014; -- 0x0014
0022 : 0008; -- 0x0008
0023 : 0005; -- 0x0005
0024 : 001B; -- 0x001B
0025 : 0011; -- 0x0011
0026 : 0015; -- 0x0015
0027 : 0009; -- 0x0009
0028 : 0003; -- 0x0003
0029 : 000B; -- 0x000B
002A : 001B; -- 0x001B
002B : 0002; -- 0x0002
002C : 0012; -- 0x0012
002D : 000F; -- 0x000F
002E : 0017; -- 0x0017
002F : 000E; -- 0x000E
0030 : 001B; -- 0x001B
0031 : 0006; -- 0x0006
0032 : 000F; -- 0x000F
0033 : 0018; -- 0x0018
0034 : 001B; -- 0x001B
0035 : 000A; -- 0x000A
0036 : 0015; -- 0x0015
0037 : 000D; -- 0x000D
0038 : 0010; -- 0x0010
0039 : 0005; -- 0x0005
003A : 0004; -- 0x0004
003B : 001B; -- 0x001B
003C : 000F; -- 0x000F
003D : 0016; -- 0x0016
003E : 0005; -- 0x0005
003F : 0012; -- 0x0012
0040 : 0000; -- 0x0000
0041 : 2002; -- imov    r0  .vga_addr
0042 : 0000; -- load    r0  [r0]    // vga address
0043 : 2504; -- imov    r5  .text_start_offset
0044 : 0550; -- load    r5  [r5]
0045 : 2B05; -- imov    r11 .bitmap
0046 : 2121; -- imov    r1  .text
0047 : 0910; -- load    r9  [r1]    // r9 contains offset into bitmap
0048 : 2A67; -- imov    r10 .halt
0049 : 8996; -- mov     r9  r9
004A : 4A00; -- jz      r10         // if r9 is null terminator, halt
004B : 89B4; -- add     r9  r11     // r9 contains bitmap address
004C : 0990; -- load    r9  [r9]    // r9 contains the bitmap info of first letter
004D : 220F; -- imov    r2  0xF     // r2 contains the offset into the bit
004E : 2A5D; -- imov    r10 .skip
004F : 2301; -- imov    r3  0x01    // r3 = mask
0050 : 832A; -- shl     r3  r2
0051 : 8391; -- and     r3  r9      // r3 = draw?
0052 : 4A00; -- jz      r10
0053 : 8726; -- mov     r7  r2
0054 : 9731; -- iand    r7  0x3
0055 : 8826; -- mov     r8  r2
0056 : 98C1; -- iand    r8  0xC     // r7/8 contains the x,y offsets, r7 contains raw offset
0057 : 985A; -- ishl    r8  5
0058 : 8782; -- or      r7  r8
0059 : 8704; -- add     r7  r0
005A : 8754; -- add     r7  r5      // r7 is the address to draw at
005B : 28FF; -- imov    r8  0xFF
005C : 1780; -- str     [r7] r8
005D : 2A63; -- imov    r10 .next_char
005E : 8226; -- mov     r2  r2
005F : 4A00; -- jz      r10
0060 : 9215; -- isub    r2  1
0061 : 2A4E; -- imov    r10 .loop
0062 : 4A80; -- jnz     r10
0063 : 9114; -- iadd    r1  1
0064 : 9544; -- iadd    r5  4
0065 : 2A47; -- imov    r10 .reset
0066 : 4A80; -- jnz     r10
0067 : 7000; -- halt
END;