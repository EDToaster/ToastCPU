DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C05; -- imov r12 .isr
0001 : 2006; -- call! .main
0002 : 3000; -- ║
0003 : A010; -- ╝
0004 : 7000; -- halt
0005 : C000; -- rti
0006 : 2100; -- imov  r1 0
0007 : 2000; -- str!  .counter_ptr r1
0008 : 30A0; -- ║
0009 : 1010; -- ╝ str
000A : 2158; -- imov r1 .welcome_message        # load message
000B : 5D10; -- push r1                         # push argument to stack
000C : 2026; -- call! .print_string
000D : 3000; -- ║
000E : A010; -- ╝
000F : 2026; -- call! .print_string
0010 : 3000; -- ║
0011 : A010; -- ╝
0012 : 2026; -- call! .print_string
0013 : 3000; -- ║
0014 : A010; -- ╝
0015 : 2026; -- call! .print_string
0016 : 3000; -- ║
0017 : A010; -- ╝
0018 : 2026; -- call! .print_string
0019 : 3000; -- ║
001A : A010; -- ╝
001B : 2026; -- call! .print_string
001C : 3000; -- ║
001D : A010; -- ╝
001E : 2026; -- call! .print_string
001F : 3000; -- ║
0020 : A010; -- ╝
0021 : 2026; -- call! .print_string
0022 : 3000; -- ║
0023 : A010; -- ╝
0024 : 61D0; -- pop  r1
0025 : A020; -- jmpr
0026 : 5D20; -- push! r2 r3 r4 r5
0027 : 5D30; -- ║
0028 : 5D40; -- ║
0029 : 5D50; -- ╝
002A : 2400; -- load! r4 .counter_ptr
002B : 34A0; -- ║
002C : 0440; -- ╝
002D : 82D6; -- mov  r2 r13
002E : 9265; -- isub r2 6
002F : 0220; -- load r2 r2 # r2 is now the argument/pointer
0030 : 253F; -- imov r5 .print_string_exit
0031 : 0320; -- load r3 r2
0032 : 9304; -- iadd r3 0 # load doesn't do arith
0033 : A501; -- jz   r5
0034 : 5D30; -- push! r3 r4
0035 : 5D40; -- ╝
0036 : 2047; -- call! .print_char
0037 : 3000; -- ║
0038 : A010; -- ╝
0039 : 64D0; -- pop! r4 r3
003A : 63D0; -- ╝
003B : 9214; -- iadd r2 1
003C : 9414; -- iadd r4 1
003D : 2530; -- imov r5 .print_string_loop
003E : A500; -- jmp  r5
003F : 2000; -- str! .counter_ptr r4
0040 : 30A0; -- ║
0041 : 1040; -- ╝ str
0042 : 65D0; -- pop! r5 r4 r3 r2
0043 : 64D0; -- ║
0044 : 63D0; -- ║
0045 : 62D0; -- ╝
0046 : A020; -- jmpr
0047 : 5D20; -- push! r2 r3 r4
0048 : 5D30; -- ║
0049 : 5D40; -- ╝
004A : 82D6; -- mov  r2 r13
004B : 9265; -- isub r2 6
004C : 0220; -- load r2 r2 # r2 is now char
004D : 84D6; -- mov  r4 r13
004E : 9455; -- isub r4 5
004F : 0440; -- load r4 r4 # r4 is now word *
0050 : 2338; -- imov r3 0b00111000
0051 : 938A; -- ishl r3 8
0052 : 8232; -- or  r2 r3
0053 : 1420; -- str  r4 r2
0054 : 64D0; -- pop! r4 r3 r2
0055 : 63D0; -- ║
0056 : 62D0; -- ╝
0057 : A020; -- jmpr
0058 : 0048; -- H
0059 : 0065; -- e
005A : 006C; -- l
005B : 006C; -- l
005C : 006F; -- o
005D : 0020; --  
005E : 0066; -- f
005F : 0072; -- r
0060 : 006F; -- o
0061 : 006D; -- m
0062 : 0020; --  
0063 : 0054; -- T
0064 : 006F; -- o
0065 : 0061; -- a
0066 : 0073; -- s
0067 : 0074; -- t
0068 : 004F; -- O
0069 : 0053; -- S
006A : 0021; -- !
006B : 0020; --  
006C : 0020; --  
006D : 0020; --  
006E : 0020; --  
006F : 0020; --  
0070 : 0020; --  
0071 : 0020; --  
0072 : 0020; --  
0073 : 0020; --  
0074 : 0020; --  
0075 : 0020; --  
0076 : 0020; --  
0077 : 0020; --  
0078 : 0020; --  
0079 : 0020; --  
007A : 0020; --  
007B : 0020; --  
007C : 0020; --  
007D : 0020; --  
007E : 0020; --  
007F : 0020; --  
0080 : 0020; --  
0081 : 0020; --  
0082 : 0020; --  
0083 : 0020; --  
0084 : 0020; --  
0085 : 0020; --  
0086 : 0020; --  
0087 : 0020; --  
0088 : 0020; --  
0089 : 0020; --  
008A : 0020; --  
008B : 0020; --  
008C : 0020; --  
008D : 0020; --  
008E : 0020; --  
008F : 0020; --  
0090 : 0020; --  
0091 : 0020; --  
0092 : 0020; --  
0093 : 0020; --  
0094 : 0020; --  
0095 : 0020; --  
0096 : 0020; --  
0097 : 0020; --  
0098 : 0020; --  
0099 : 0020; --  
009A : 0020; --  
009B : 0020; --  
009C : 0020; --  
009D : 0020; --  
009E : 0020; --  
009F : 0020; --  
00A0 : 0020; --  
00A1 : 0020; --  
00A2 : 0020; --  
00A3 : 0020; --  
00A4 : 0020; --  
00A5 : 0020; --  
00A6 : 0020; --  
00A7 : 0020; --  
00A8 : 0020; --  
00A9 : 0020; --  
00AA : 0020; --  
00AB : 0020; --  
00AC : 0020; --  
00AD : 0020; --  
00AE : 0020; --  
00AF : 0020; --  
00B0 : 0020; --  
00B1 : 0020; --  
00B2 : 0020; --  
00B3 : 0020; --  
00B4 : 0020; --  
00B5 : 0020; --  
00B6 : 0020; --  
00B7 : 0020; --  
00B8 : 0020; --  
00B9 : 0020; --  
00BA : 0020; --  
00BB : 0020; --  
00BC : 0000; -- 0
END;