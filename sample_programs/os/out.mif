DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C08; -- imov r12 .isr
0001 : 2000; -- call! .main
0002 : 904A; -- ║
0003 : 9002; -- ║
0004 : 904A; -- ║
0005 : 9092; -- ║
0006 : A010; -- ╝
0007 : 7000; -- halt
0008 : C000; -- rti
0009 : 2100; -- imov  r1 0
000A : 20A0; -- str!  .counter_ptr r1
000B : 904A; -- ║ ishl
000C : 9002; -- ║ ior
000D : 904A; -- ║ ishl
000E : 9002; -- ║ ior
000F : 1010; -- ╝ str
0010 : 217F; -- imov r1 .welcome_message        # load message
0011 : 5D10; -- push r1                         # push argument to stack
0012 : 2000; -- call! .print_string
0013 : 904A; -- ║
0014 : 9042; -- ║
0015 : 904A; -- ║
0016 : 9042; -- ║
0017 : A010; -- ╝
0018 : 2000; -- call! .print_string
0019 : 904A; -- ║
001A : 9042; -- ║
001B : 904A; -- ║
001C : 9042; -- ║
001D : A010; -- ╝
001E : 2000; -- call! .print_string
001F : 904A; -- ║
0020 : 9042; -- ║
0021 : 904A; -- ║
0022 : 9042; -- ║
0023 : A010; -- ╝
0024 : 2000; -- call! .print_string
0025 : 904A; -- ║
0026 : 9042; -- ║
0027 : 904A; -- ║
0028 : 9042; -- ║
0029 : A010; -- ╝
002A : 2000; -- call! .print_string
002B : 904A; -- ║
002C : 9042; -- ║
002D : 904A; -- ║
002E : 9042; -- ║
002F : A010; -- ╝
0030 : 2000; -- call! .print_string
0031 : 904A; -- ║
0032 : 9042; -- ║
0033 : 904A; -- ║
0034 : 9042; -- ║
0035 : A010; -- ╝
0036 : 2000; -- call! .print_string
0037 : 904A; -- ║
0038 : 9042; -- ║
0039 : 904A; -- ║
003A : 9042; -- ║
003B : A010; -- ╝
003C : 2000; -- call! .print_string
003D : 904A; -- ║
003E : 9042; -- ║
003F : 904A; -- ║
0040 : 9042; -- ║
0041 : A010; -- ╝
0042 : 61D0; -- pop  r1
0043 : A020; -- jmpr
0044 : 5D20; -- push! r2 r3 r4 r5
0045 : 5D30; -- ║
0046 : 5D40; -- ║
0047 : 5D50; -- ╝
0048 : 24A0; -- load! r4 .counter_ptr
0049 : 944A; -- ║
004A : 9402; -- ║
004B : 944A; -- ║
004C : 9402; -- ║
004D : 0440; -- ╝
004E : 82D6; -- mov  r2 r13
004F : 9265; -- isub r2 6
0050 : 0220; -- load r2 r2 # r2 is now the argument/pointer
0051 : 2563; -- imov r5 .print_string_exit
0052 : 0320; -- load r3 r2
0053 : 9304; -- iadd r3 0 # load doesn't do arith
0054 : A501; -- jz   r5
0055 : 5D30; -- push! r3 r4
0056 : 5D40; -- ╝
0057 : 2000; -- call! .print_char
0058 : 904A; -- ║
0059 : 9062; -- ║
005A : 904A; -- ║
005B : 90E2; -- ║
005C : A010; -- ╝
005D : 64D0; -- pop! r4 r3
005E : 63D0; -- ╝
005F : 9214; -- iadd r2 1
0060 : 9414; -- iadd r4 1
0061 : 2551; -- imov r5 .print_string_loop
0062 : A500; -- jmp  r5
0063 : 20A0; -- str! .counter_ptr r4
0064 : 904A; -- ║ ishl
0065 : 9002; -- ║ ior
0066 : 904A; -- ║ ishl
0067 : 9002; -- ║ ior
0068 : 1040; -- ╝ str
0069 : 65D0; -- pop! r5 r4 r3 r2
006A : 64D0; -- ║
006B : 63D0; -- ║
006C : 62D0; -- ╝
006D : A020; -- jmpr
006E : 5D20; -- push! r2 r3 r4
006F : 5D30; -- ║
0070 : 5D40; -- ╝
0071 : 82D6; -- mov  r2 r13
0072 : 9265; -- isub r2 6
0073 : 0220; -- load r2 r2 # r2 is now char
0074 : 84D6; -- mov  r4 r13
0075 : 9455; -- isub r4 5
0076 : 0440; -- load r4 r4 # r4 is now word *
0077 : 2338; -- imov r3 0b00111000
0078 : 938A; -- ishl r3 8
0079 : 8232; -- or  r2 r3
007A : 1420; -- str  r4 r2
007B : 64D0; -- pop! r4 r3 r2
007C : 63D0; -- ║
007D : 62D0; -- ╝
007E : A020; -- jmpr
007F : 0048; -- H
0080 : 0065; -- e
0081 : 006C; -- l
0082 : 006C; -- l
0083 : 006F; -- o
0084 : 0020; --  
0085 : 0066; -- f
0086 : 0072; -- r
0087 : 006F; -- o
0088 : 006D; -- m
0089 : 0020; --  
008A : 0054; -- T
008B : 006F; -- o
008C : 0061; -- a
008D : 0073; -- s
008E : 0074; -- t
008F : 004F; -- O
0090 : 0053; -- S
0091 : 0021; -- !
0092 : 0020; --  
0093 : 0020; --  
0094 : 0020; --  
0095 : 0020; --  
0096 : 0020; --  
0097 : 0020; --  
0098 : 0020; --  
0099 : 0020; --  
009A : 0020; --  
009B : 0020; --  
009C : 0020; --  
009D : 0020; --  
009E : 0020; --  
009F : 0020; --  
00A0 : 0020; --  
00A1 : 0020; --  
00A2 : 0020; --  
00A3 : 0020; --  
00A4 : 0020; --  
00A5 : 0020; --  
00A6 : 0020; --  
00A7 : 0020; --  
00A8 : 0020; --  
00A9 : 0020; --  
00AA : 0020; --  
00AB : 0020; --  
00AC : 0020; --  
00AD : 0020; --  
00AE : 0020; --  
00AF : 0020; --  
00B0 : 0020; --  
00B1 : 0020; --  
00B2 : 0020; --  
00B3 : 0020; --  
00B4 : 0020; --  
00B5 : 0020; --  
00B6 : 0020; --  
00B7 : 0020; --  
00B8 : 0020; --  
00B9 : 0020; --  
00BA : 0020; --  
00BB : 0020; --  
00BC : 0020; --  
00BD : 0020; --  
00BE : 0020; --  
00BF : 0020; --  
00C0 : 0020; --  
00C1 : 0020; --  
00C2 : 0020; --  
00C3 : 0020; --  
00C4 : 0020; --  
00C5 : 0020; --  
00C6 : 0020; --  
00C7 : 0020; --  
00C8 : 0020; --  
00C9 : 0020; --  
00CA : 0020; --  
00CB : 0020; --  
00CC : 0020; --  
00CD : 0020; --  
00CE : 0020; --  
00CF : 0020; --  
00D0 : 0020; --  
00D1 : 0020; --  
00D2 : 0020; --  
00D3 : 0020; --  
00D4 : 0020; --  
00D5 : 0020; --  
00D6 : 0020; --  
00D7 : 0020; --  
00D8 : 0020; --  
00D9 : 0020; --  
00DA : 0020; --  
00DB : 0020; --  
00DC : 0020; --  
00DD : 0020; --  
00DE : 0020; --  
00DF : 0020; --  
00E0 : 0020; --  
00E1 : 0020; --  
00E2 : 0020; --  
00E3 : 0000; -- 0
END;