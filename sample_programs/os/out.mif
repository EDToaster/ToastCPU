DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C08; -- imov r12 .isr
0001 : 2000; -- call .main
0002 : 904A; -- 
0003 : 9002; -- 
0004 : 904A; -- 
0005 : 9092; -- 
0006 : A010; -- 
0007 : 7000; -- halt
0008 : C000; -- rti
0009 : 2143; -- imov r1 .welcome_message        # load message
000A : 5D10; -- push r1                         # push argument to stack
000B : 2000; -- call .print_string
000C : 904A; -- 
000D : 9012; -- 
000E : 904A; -- 
000F : 9032; -- 
0010 : A010; -- 
0011 : 61D0; -- pop  r1
0012 : A020; -- jmpr
0013 : 5D20; -- push r2 # message pointer
0014 : 5D30; -- push r3 # char to print
0015 : 5D40; -- push r4 # VGA pointer
0016 : 5D50; -- push r5 # jmp loc
0017 : 2400; -- imov r4 0
0018 : 82D6; -- mov  r2 r13
0019 : 9265; -- isub r2 6
001A : 0220; -- load r2 r2 # r2 is now the argument/pointer
001B : 252D; -- imov r5 .print_string_exit
001C : 0320; -- load r3 r2
001D : 9304; -- iadd r3 0 # load doesn't do arith
001E : A501; -- jz   r5
001F : 5D30; -- push r3
0020 : 5D40; -- push r4
0021 : 2000; -- call .print_char
0022 : 904A; -- 
0023 : 9032; -- 
0024 : 904A; -- 
0025 : 9022; -- 
0026 : A010; -- 
0027 : 64D0; -- pop  r4
0028 : 63D0; -- pop  r3
0029 : 9214; -- iadd r2 1
002A : 9414; -- iadd r4 1
002B : 251B; -- imov r5 .print_string_loop
002C : A500; -- jmp  r5
002D : 65D0; -- pop  r5
002E : 64D0; -- pop  r4
002F : 63D0; -- pop  r3
0030 : 62D0; -- pop  r2
0031 : A020; -- jmpr
0032 : 5D20; -- push r2
0033 : 5D30; -- push r3
0034 : 5D40; -- push r4
0035 : 82D6; -- mov  r2 r13
0036 : 9265; -- isub r2 6
0037 : 0220; -- load r2 r2 # r2 is now char
0038 : 84D6; -- mov  r4 r13
0039 : 9455; -- isub r4 5
003A : 0440; -- load r4 r4 # r4 is now word *
003B : 2338; -- imov r3 0b00111000
003C : 938A; -- ishl r3 8
003D : 8232; -- or  r2 r3
003E : 1420; -- str  r4 r2
003F : 64D0; -- pop  r4
0040 : 63D0; -- pop  r3
0041 : 62D0; -- pop  r2
0042 : A020; -- jmpr
0043 : 0048; -- 0x48
0044 : 0065; -- 0x65
0045 : 006C; -- 0x6C
0046 : 006C; -- 0x6C
0047 : 006F; -- 0x6F
0048 : 0020; -- 0x20
0049 : 0066; -- 0x66
004A : 0072; -- 0x72
004B : 006F; -- 0x6f
004C : 006D; -- 0x6d
004D : 0020; -- 0x20
004E : 0054; -- 0x54
004F : 006F; -- 0x6f
0050 : 0061; -- 0x61
0051 : 0073; -- 0x73
0052 : 0074; -- 0x74
0053 : 004F; -- 0x4f
0054 : 0053; -- 0x53
0055 : 0021; -- 0x21
0056 : 0000; -- 0x00
END;