DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C32; -- . imov [imov! isr .isr]
0001 : 3C00; -- ' imoh
0002 : 2135; -- . imov [imov! p0 .arr]
0003 : 3100; -- ' imoh
0004 : 22CD; -- . imov [imov! p1 0xABCD]
0005 : 32AB; -- ' imoh
0006 : 2304; -- . imov [imov! p2 4]
0007 : 3300; -- ' imoh
0008 : 2019; -- . imov r0 .arr_find  [call! .arr_find]
0009 : 3000; -- | imoh r0 .arr_find
000A : A010; -- ' jmpl
000B : 2002; -- . imov [icmp! v0 2]
000C : 3000; -- | imoh
000D : 8507; -- ' cmp
000E : 2015; -- . imov [jz!   .correct]
000F : 3000; -- | imoh
0010 : A001; -- ' j_op
0011 : 7000; --   halt
0012 : 7000; --   halt
0013 : 7000; --   halt
0014 : 7000; --   halt
0015 : 7000; --   halt
0016 : 7000; --   halt
0017 : 7000; --   halt
0018 : 7000; --   halt
0019 : 5D60; -- . push [push! t0 t1 t2]
001A : 5D70; -- | push
001B : 5D80; -- ' push
001C : 2500; --   imov  v0 0
001D : 8537; --   cmp   v0 p2
001E : 202C; -- . imov [jz!   .arr_find_set_not_found]
001F : 3000; -- | imoh
0020 : A001; -- ' j_op
0021 : 8716; --   mov   t1 p0
0022 : 8754; --   add   t1 v0
0023 : 0770; --   load  t1 t1
0024 : 8727; --   cmp   t1 p1
0025 : 202E; -- . imov [jz!   .arr_find_exit]
0026 : 3000; -- | imoh
0027 : A001; -- ' j_op
0028 : 9514; --   iadd  v0 1
0029 : 201D; -- . imov [jmp!  .arr_find_next]
002A : 3000; -- | imoh
002B : A000; -- ' j_op
002C : 25FF; -- . imov [imov! v0 0xFFFF]
002D : 35FF; -- ' imoh
002E : 68D0; -- . pop [pop!  t2 t1 t0]
002F : 67D0; -- | pop
0030 : 66D0; -- ' pop
0031 : A020; --   jmpr
0032 : 5D00; -- Â· push r0 [isr!]
0033 : 60D0; -- . pop r0 [rti!]
0034 : C000; -- ' rti
0035 : DEAD; -- 0xDEAD
0036 : BEEF; -- 0xBEEF
0037 : ABCD; -- 0xABCD
0038 : DCBA; -- 0xDCBA
END;