DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C05; -- . imov [imov! isr .isr]
0001 : 3C00; -- ' imoh
0002 : 20CD; -- . imov r0 .main  [call! .main]
0003 : 3001; -- | imoh r0 .main
0004 : A010; -- ' jmpl
0005 : 5D00; -- Â· push r0 [isr!]
0006 : 60D0; -- . pop r0 [rti!]
0007 : C000; -- ' rti
0008 : 5D60; -- . push [push! t0 t1 t2]
0009 : 5D70; -- | push
000A : 5D80; -- ' push
000B : 2500; --   imov  v0 0
000C : 8537; --   cmp   v0 p2
000D : 201B; -- . imov [jz!   .arr_find_set_not_found]
000E : 3000; -- | imoh
000F : A001; -- ' j_op
0010 : 8716; --   mov   t1 p0
0011 : 8754; --   add   t1 v0
0012 : 0770; --   load  t1 t1
0013 : 8727; --   cmp   t1 p1
0014 : 201D; -- . imov [jz!   .arr_find_exit]
0015 : 3000; -- | imoh
0016 : A001; -- ' j_op
0017 : 9514; --   iadd  v0 1
0018 : 200C; -- . imov [jmp!  .arr_find_next]
0019 : 3000; -- | imoh
001A : A000; -- ' j_op
001B : 25FF; -- . imov [imov! v0 0xFFFF]
001C : 35FF; -- ' imoh
001D : 68D0; -- . pop [pop!  t2 t1 t0]
001E : 67D0; -- | pop
001F : 66D0; -- ' pop
0020 : A020; --   jmpr
0021 : 5D60; -- . push [push! t0 t1]
0022 : 5D70; -- ' push
0023 : 2600; --   imov  t0 0
0024 : 8637; --   cmp   t0 p2
0025 : 202F; -- . imov [jz!   .arr_memset_exit]
0026 : 3000; -- | imoh
0027 : A001; -- ' j_op
0028 : 8766; --   mov   t1 t0
0029 : 8714; --   add   t1 p0
002A : 1720; --   str   t1 p1
002B : 9614; --   iadd  t0 1
002C : 2024; -- . imov [jmp!  .arr_memset_loop]
002D : 3000; -- | imoh
002E : A000; -- ' j_op
002F : 67D0; -- . pop [pop!  t1 t0]
0030 : 66D0; -- ' pop
0031 : A020; --   jmpr
0032 : 2600; --   imov    t0 0
0033 : 20FF; -- . imov [str!    .ptr_counter t0]
0034 : 30BF; -- | imoh
0035 : 1060; -- ' str
0036 : 2664; -- . imov [imov!   t0 100]
0037 : 3600; -- ' imoh
0038 : 20FE; -- . imov [str!    .ptr_line_counter t0]
0039 : 30BF; -- | imoh
003A : 1060; -- ' str
003B : A020; --   jmpr
003C : 5D60; -- . push [push!   t0 t1 p0]
003D : 5D70; -- | push
003E : 5D10; -- ' push
003F : 8616; --   mov     t0 p0   # t0 = str
0040 : 0760; --   load    t1 t0
0041 : 9704; --   iadd    t1 0    # if (t0 == '\0')
0042 : 204D; -- . imov [jz!     .print_string_exit]
0043 : 3000; -- | imoh
0044 : A001; -- ' j_op
0045 : 8176; --   mov     p0 t1
0046 : 2051; -- . imov r0 .print_char  [call!   .print_char]
0047 : 3000; -- | imoh r0 .print_char
0048 : A010; -- ' jmpl
0049 : 9614; --   iadd    t0 1    # t0++
004A : 2040; -- . imov [jmp!    .print_string_loop]
004B : 3000; -- | imoh
004C : A000; -- ' j_op
004D : 61D0; -- . pop [pop!    p0 t1 t0]
004E : 67D0; -- | pop
004F : 66D0; -- ' pop
0050 : A020; --   jmpr
0051 : 5D60; -- . push [push!   t0 t1 t2]
0052 : 5D70; -- | push
0053 : 5D80; -- ' push
0054 : 8616; --   mov     t0 p0                   # t0 = c
0055 : 96A7; --   icmp    t0 0x0A                 # if (t0 == '\n')
0056 : 2068; -- . imov [jnz!    .print_char_keep_going]
0057 : 3000; -- | imoh
0058 : A002; -- ' j_op
0059 : 27FF; -- . imov [load!   t1 .ptr_counter]
005A : 37BF; -- | imoh
005B : 0770; -- ' load
005C : 28FE; -- . imov [load!   t2 .ptr_line_counter]
005D : 38BF; -- | imoh
005E : 0880; -- ' load
005F : 8784; --   add     t1 t2
0060 : 20FF; -- . imov [str!    .ptr_counter t1]
0061 : 30BF; -- | imoh
0062 : 1070; -- ' str
0063 : 2864; -- . imov [imov!   t2 100]
0064 : 3800; -- ' imoh
0065 : 207C; -- . imov [jmp!    .print_char_store_and_exit]
0066 : 3000; -- | imoh
0067 : A000; -- ' j_op
0068 : 28FF; -- . imov [load!   t2 .ptr_counter]
0069 : 38BF; -- | imoh
006A : 0880; -- ' load
006B : 2738; --   imov    t1 0b00111000
006C : 978A; --   ishl    t1 8
006D : 8672; --   or      t0 t1
006E : 1860; --   str     t2 t0
006F : 9814; --   iadd    t2 1
0070 : 20FF; -- . imov [str!    .ptr_counter t2]
0071 : 30BF; -- | imoh
0072 : 1080; -- ' str
0073 : 28FE; -- . imov [load!   t2 .ptr_line_counter]
0074 : 38BF; -- | imoh
0075 : 0880; -- ' load
0076 : 9815; --   isub    t2 1
0077 : 207C; -- . imov [jnz!    .print_char_store_and_exit]
0078 : 3000; -- | imoh
0079 : A002; -- ' j_op
007A : 2864; -- . imov [imov!   t2 100]
007B : 3800; -- ' imoh
007C : 27FF; -- . imov [load!   t1 .ptr_counter]
007D : 37BF; -- | imoh
007E : 0770; -- ' load
007F : 2070; -- . imov [icmp!   t1 6000]
0080 : 3017; -- | imoh
0081 : 8707; -- ' cmp
0082 : 2089; -- . imov [jn!     .print_char_skip_reset]
0083 : 3000; -- | imoh
0084 : A003; -- ' j_op
0085 : 2700; --   imov    t1 0
0086 : 20FF; -- . imov [str!    .ptr_counter t1]
0087 : 30BF; -- | imoh
0088 : 1070; -- ' str
0089 : 20FE; -- . imov [str!    .ptr_line_counter t2]
008A : 30BF; -- | imoh
008B : 1080; -- ' str
008C : 68D0; -- . pop [pop!    t2 t1 t0]
008D : 67D0; -- | pop
008E : 66D0; -- ' pop
008F : A020; --   jmpr
0090 : 5D60; -- . push [push! t0]
0091 : 2600; --   imov t0 0
0092 : 20EC; -- . imov [str!  .key_buffer_write_offset t0]
0093 : 30BF; -- | imoh
0094 : 1060; -- ' str
0095 : 20ED; -- . imov [str!  .key_buffer_read_offset t0]
0096 : 30BF; -- | imoh
0097 : 1060; -- ' str
0098 : 66D0; -- . pop [pop! t0]
0099 : A020; --   jmpr
009A : 5D60; -- . push [push! t0 t1]
009B : 5D70; -- ' push
009C : 27EE; -- . imov [imov! t1 .key_buffer]
009D : 37BF; -- ' imoh
009E : 26EC; -- . imov [load! t0 .key_buffer_write_offset]
009F : 36BF; -- | imoh
00A0 : 0660; -- ' load
00A1 : 8764; --   add   t1 t0
00A2 : 1710; --   str   t1 p0
00A3 : 9614; --   iadd  t0 1
00A4 : 96F1; --   iand  t0 0b1111
00A5 : 20EC; -- . imov [str!  .key_buffer_write_offset t0]
00A6 : 30BF; -- | imoh
00A7 : 1060; -- ' str
00A8 : 67D0; -- . pop [pop!  t1 t0]
00A9 : 66D0; -- ' pop
00AA : A020; --   jmpr
00AB : 5D60; -- . push [push! t0 t1]
00AC : 5D70; -- ' push
00AD : 26ED; -- . imov [load! t0 .key_buffer_read_offset]
00AE : 36BF; -- | imoh
00AF : 0660; -- ' load
00B0 : 27EC; -- . imov [load! t1 .key_buffer_write_offset]
00B1 : 37BF; -- | imoh
00B2 : 0770; -- ' load
00B3 : 8677; --   cmp t0 t1
00B4 : 20AD; -- . imov [jz! .key_buffer_read_loop]
00B5 : 3000; -- | imoh
00B6 : A001; -- ' j_op
00B7 : 27EE; -- . imov [imov! t1 .key_buffer]
00B8 : 37BF; -- ' imoh
00B9 : 8764; --   add   t1 t0
00BA : 0570; --   load  v0 t1
00BB : 9614; --   iadd t0 1
00BC : 96F1; --   iand t0 0b1111
00BD : 20ED; -- . imov [str! .key_buffer_read_offset t0]
00BE : 30BF; -- | imoh
00BF : 1060; -- ' str
00C0 : 67D0; -- . pop [pop!  t1 t0]
00C1 : 66D0; -- ' pop
00C2 : A020; --   jmpr
00C3 : 0020; --  
00C4 : 0020; --  
00C5 : 0020; --  
00C6 : 0020; --  
00C7 : 0020; --  
00C8 : 0020; --  
00C9 : 0020; --  
00CA : 0020; --  
00CB : 0020; --  
00CC : 0020; --  
00CD : 0020; --  
00CE : 0020; --  
00CF : 0020; --  
00D0 : 0020; --  
00D1 : 0060; -- `
00D2 : 0020; --  
00D3 : 0020; --  
00D4 : 0020; --  
00D5 : 0020; --  
00D6 : 0020; --  
00D7 : 0020; --  
00D8 : 0071; -- q
00D9 : 0031; -- 1
00DA : 0020; --  
00DB : 0020; --  
00DC : 0020; --  
00DD : 007A; -- z
00DE : 0073; -- s
00DF : 0061; -- a
00E0 : 0077; -- w
00E1 : 0032; -- 2
00E2 : 0020; --  
00E3 : 0020; --  
00E4 : 0063; -- c
00E5 : 0078; -- x
00E6 : 0064; -- d
00E7 : 0065; -- e
00E8 : 0034; -- 4
00E9 : 0033; -- 3
00EA : 0020; --  
00EB : 0020; --  
00EC : 0020; --  
00ED : 0076; -- v
00EE : 0066; -- f
00EF : 0074; -- t
00F0 : 0072; -- r
00F1 : 0035; -- 5
00F2 : 0020; --  
00F3 : 0020; --  
00F4 : 006E; -- n
00F5 : 0062; -- b
00F6 : 0068; -- h
00F7 : 0067; -- g
00F8 : 0079; -- y
00F9 : 0036; -- 6
00FA : 0020; --  
00FB : 0020; --  
00FC : 0020; --  
00FD : 006D; -- m
00FE : 006A; -- j
00FF : 0075; -- u
0100 : 0037; -- 7
0101 : 0038; -- 8
0102 : 0020; --  
0103 : 0020; --  
0104 : 002C; -- ,
0105 : 006B; -- k
0106 : 0069; -- i
0107 : 006F; -- o
0108 : 0030; -- 0
0109 : 0039; -- 9
010A : 0020; --  
010B : 0020; --  
010C : 002E; -- .
010D : 002F; -- /
010E : 006C; -- l
010F : 003B; -- ;
0110 : 0070; -- p
0111 : 002D; -- -
0112 : 0020; --  
0113 : 0020; --  
0114 : 0020; --  
0115 : 0020; --  
0116 : 0020; --  
0117 : 005B; -- [
0118 : 003D; -- =
0119 : 0020; --  
011A : 0020; --  
011B : 0020; --  
011C : 0020; --  
011D : 000A; -- \n
011E : 005D; -- ]
011F : 0020; --  
0120 : 005C; -- \\
0121 : 0020; --  
0122 : 0020; --  
0123 : 0020; --  
0124 : 0020; --  
0125 : 0020; --  
0126 : 0020; --  
0127 : 0020; --  
0128 : 0020; --  
0129 : 0020; --  
012A : 0020; --  
012B : 0020; --  
012C : 0020; --  
012D : 0020; --  
012E : 0020; --  
012F : 0020; --  
0130 : 0020; --  
0131 : 0020; --  
0132 : 0020; --  
0133 : 0020; --  
0134 : 0020; --  
0135 : 0020; --  
0136 : 0020; --  
0137 : 0020; --  
0138 : 0020; --  
0139 : 0020; --  
013A : 0020; --  
013B : 0020; --  
013C : 0020; --  
013D : 0020; --  
013E : 0020; --  
013F : 0020; --  
0140 : 0020; --  
0141 : 0020; --  
0142 : 0020; --  
0143 : 0020; --  
0144 : 0020; --  
0145 : 0020; --  
0146 : 0020; --  
0147 : 0020; --  
0148 : 0020; --  
0149 : 0020; --  
014A : 0020; --  
014B : 0020; --  
014C : 0020; --  
014D : 0020; --  
014E : 0020; --  
014F : 0020; --  
0150 : 0020; --  
0151 : 0020; --  
0152 : 0020; --  
0153 : 0020; --  
0154 : 0020; --  
0155 : 0020; --  
0156 : 0020; --  
0157 : 0020; --  
0158 : 0020; --  
0159 : 0020; --  
015A : 0020; --  
015B : 0020; --  
015C : 0020; --  
015D : 0020; --  
015E : 0020; --  
015F : 0020; --  
0160 : 0020; --  
0161 : 0020; --  
0162 : 0020; --  
0163 : 0020; --  
0164 : 0020; --  
0165 : 0020; --  
0166 : 0020; --  
0167 : 0020; --  
0168 : 0020; --  
0169 : 0020; --  
016A : 0020; --  
016B : 0020; --  
016C : 0020; --  
016D : 0020; --  
016E : 0020; --  
016F : 0020; --  
0170 : 0020; --  
0171 : 0020; --  
0172 : 0020; --  
0173 : 0020; --  
0174 : 0020; --  
0175 : 0020; --  
0176 : 0020; --  
0177 : 0020; --  
0178 : 0020; --  
0179 : 0020; --  
017A : 0020; --  
017B : 0020; --  
017C : 0020; --  
017D : 0020; --  
017E : 0020; --  
017F : 0020; --  
0180 : 0020; --  
0181 : 0020; --  
0182 : 0020; --  
0183 : 0020; --  
0184 : 0020; --  
0185 : 0020; --  
0186 : 0020; --  
0187 : 0020; --  
0188 : 0020; --  
0189 : 0020; --  
018A : 0020; --  
018B : 0020; --  
018C : 0020; --  
018D : 0020; --  
018E : 0020; --  
018F : 0020; --  
0190 : 0020; --  
0191 : 0020; --  
0192 : 0020; --  
0193 : 0020; --  
0194 : 0020; --  
0195 : 0020; --  
0196 : 0020; --  
0197 : 0020; --  
0198 : 0020; --  
0199 : 0020; --  
019A : 0020; --  
019B : 0020; --  
019C : 0020; --  
019D : 0020; --  
019E : 0020; --  
019F : 0020; --  
01A0 : 0020; --  
01A1 : 0020; --  
01A2 : 0020; --  
01A3 : 0020; --  
01A4 : 0020; --  
01A5 : 0020; --  
01A6 : 0020; --  
01A7 : 0020; --  
01A8 : 0020; --  
01A9 : 0020; --  
01AA : 0020; --  
01AB : 0020; --  
01AC : 0020; --  
01AD : 0020; --  
01AE : 0020; --  
01AF : 0020; --  
01B0 : 0020; --  
01B1 : 0020; --  
01B2 : 0020; --  
01B3 : 0020; --  
01B4 : 0020; --  
01B5 : 0020; --  
01B6 : 0020; --  
01B7 : 0020; --  
01B8 : 0020; --  
01B9 : 0020; --  
01BA : 0020; --  
01BB : 0020; --  
01BC : 0020; --  
01BD : 0020; --  
01BE : 0020; --  
01BF : 0020; --  
01C0 : 0020; --  
01C1 : 0020; --  
01C2 : 0020; --  
01C3 : 5D60; -- . push [push!   t0]
01C4 : 25C3; -- . imov [imov!   v0 .ps2_lut]
01C5 : 3500; -- ' imoh
01C6 : 26FF; -- . imov [load!   t0 .ps2_scancode_ptr]
01C7 : 36FF; -- | imoh
01C8 : 0660; -- ' load
01C9 : 8564; --   add     v0 t0
01CA : 0550; --   load    v0 v0
01CB : 66D0; -- . pop [pop!    t0]
01CC : A020; --   jmpr
01CD : A020; --   jmpr
01CE : 5D60; -- . push [push! t0 t1 t2 t3 t4 t5]
01CF : 5D70; -- | push
01D0 : 5D80; -- | push
01D1 : 5D90; -- | push
01D2 : 5DA0; -- | push
01D3 : 5DB0; -- ' push
01D4 : 8616; --   mov t0 p0
01D5 : 8726; --   mov t1 p1
01D6 : 6BD0; -- . pop [pop!  t5 t4 t3 t2 t1 t0]
01D7 : 6AD0; -- | pop
01D8 : 69D0; -- | pop
01D9 : 68D0; -- | pop
01DA : 67D0; -- | pop
01DB : 66D0; -- ' pop
END;