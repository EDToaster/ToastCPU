DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C2A; -- . imov [imov!   isr .isr]			{[Label(name='reset')]}
0001 : 3C02; -- ' imoh			{}
0002 : 2034; -- . imov r0 .main  [call!   .main]			{}
0003 : 3002; -- | imoh r0 .main			{}
0004 : A010; -- ' jmpl			{}
0005 : 7000; --   halt			{}
0006 : 2600; --   imov    t0 0			{[Label(name='print_init')]}
0007 : 2000; -- . imov [str!    .ptr_counter t0]			{}
0008 : 3080; -- | imoh			{}
0009 : 1060; -- ' str			{}
000A : 2664; -- . imov [imov!   t0 100]			{}
000B : 3600; -- ' imoh			{}
000C : 2001; -- . imov [str!    .ptr_line_counter t0]			{}
000D : 3080; -- | imoh			{}
000E : 1060; -- ' str			{}
000F : A020; --   jmpr			{}
0010 : 5D60; -- . push [push!   t0 t1 p0]			{[Label(name='print_string')]}
0011 : 5D70; -- | push			{}
0012 : 5D10; -- ' push			{}
0013 : 8616; --   mov     t0 p0   # t0 = str			{}
0014 : 0760; --   load    t1 t0			{[Label(name='print_string_loop')]}
0015 : 9704; --   iadd    t1 0    # if (t0 == '\0')			{}
0016 : 2021; -- . imov [jz!     .print_string_exit]			{}
0017 : 3000; -- | imoh			{}
0018 : A001; -- ' j_op			{}
0019 : 8176; --   mov     p0 t1			{}
001A : 206E; -- . imov r0 .print_char  [call!   .print_char]			{}
001B : 3000; -- | imoh r0 .print_char			{}
001C : A010; -- ' jmpl			{}
001D : 9614; --   iadd    t0 1    # t0++			{}
001E : 2014; -- . imov [jmp!    .print_string_loop]			{}
001F : 3000; -- | imoh			{}
0020 : A000; -- ' j_op			{}
0021 : 61D0; -- . pop [pop!    p0 t1 t0]			{[Label(name='print_string_exit')]}
0022 : 67D0; -- | pop			{}
0023 : 66D0; -- ' pop			{}
0024 : A020; --   jmpr			{}
0025 : 5D60; -- . push [push!  t0 t1]			{[Label(name='print_set_color')]}
0026 : 5D70; -- ' push			{}
0027 : 2602; -- . imov [load!  t0 .print_color]			{}
0028 : 3680; -- | imoh			{}
0029 : 0660; -- ' load			{}
002A : 27FF; -- . imov [imov!  t1 0b0000000011111111]			{}
002B : 3700; -- ' imoh			{}
002C : 8671; --   and    t0 t1			{}
002D : 8716; --   mov    t1 p0			{}
002E : 978A; --   ishl   t1 8			{}
002F : 8672; --   or     t0 t1			{}
0030 : 2002; -- . imov [str!   .print_color t0]			{}
0031 : 3080; -- | imoh			{}
0032 : 1060; -- ' str			{}
0033 : 67D0; -- . pop [pop!   t1 t0]			{}
0034 : 66D0; -- ' pop			{}
0035 : A020; --   jmpr			{}
0036 : 5D60; -- . push [push!  t0 p0]			{[Label(name='print_word')]}
0037 : 5D10; -- ' push			{}
0038 : 8616; --   mov    t0 p0			{}
0039 : 91C8; --   ishr   p0 12			{}
003A : 91F1; --   iand   p0 0xF			{}
003B : 2062; -- . imov r0 .print_nibble  [call!  .print_nibble]			{}
003C : 3000; -- | imoh r0 .print_nibble			{}
003D : A010; -- ' jmpl			{}
003E : 8166; --   mov    p0 t0			{}
003F : 9188; --   ishr   p0 8			{}
0040 : 91F1; --   iand   p0 0xF			{}
0041 : 2062; -- . imov r0 .print_nibble  [call!  .print_nibble]			{}
0042 : 3000; -- | imoh r0 .print_nibble			{}
0043 : A010; -- ' jmpl			{}
0044 : 8166; --   mov    p0 t0			{}
0045 : 9148; --   ishr   p0 4			{}
0046 : 91F1; --   iand   p0 0xF			{}
0047 : 2062; -- . imov r0 .print_nibble  [call!  .print_nibble]			{}
0048 : 3000; -- | imoh r0 .print_nibble			{}
0049 : A010; -- ' jmpl			{}
004A : 8166; --   mov    p0 t0			{}
004B : 91F1; --   iand   p0 0xF			{}
004C : 2062; -- . imov r0 .print_nibble  [call!  .print_nibble]			{}
004D : 3000; -- | imoh r0 .print_nibble			{}
004E : A010; -- ' jmpl			{}
004F : 61D0; -- . pop [pop!   p0 t0]			{}
0050 : 66D0; -- ' pop			{}
0051 : A020; --   jmpr			{}
0052 : 0030; -- 0			{[Label(name='print_hex_char')]}
0053 : 0031; -- 1			{}
0054 : 0032; -- 2			{}
0055 : 0033; -- 3			{}
0056 : 0034; -- 4			{}
0057 : 0035; -- 5			{}
0058 : 0036; -- 6			{}
0059 : 0037; -- 7			{}
005A : 0038; -- 8			{}
005B : 0039; -- 9			{}
005C : 0041; -- A			{}
005D : 0042; -- B			{}
005E : 0043; -- C			{}
005F : 0044; -- D			{}
0060 : 0045; -- E			{}
0061 : 0046; -- F			{}
0062 : 5D60; -- . push [push!   t0 p0]			{[Label(name='print_nibble')]}
0063 : 5D10; -- ' push			{}
0064 : 2652; -- . imov [imov!   t0 .print_hex_char]			{}
0065 : 3600; -- ' imoh			{}
0066 : 8164; --   add     p0 t0			{}
0067 : 0110; --   load    p0 p0			{}
0068 : 206E; -- . imov r0 .print_char  [call!   .print_char]			{}
0069 : 3000; -- | imoh r0 .print_char			{}
006A : A010; -- ' jmpl			{}
006B : 61D0; -- . pop [pop!    p0 t0]			{}
006C : 66D0; -- ' pop			{}
006D : A020; --   jmpr			{}
006E : 5D60; -- . push [push!   t0 t1 t2]			{[Label(name='print_char')]}
006F : 5D70; -- | push			{}
0070 : 5D80; -- ' push			{}
0071 : 8616; --   mov     t0 p0                   # t0 = c			{}
0072 : 96A7; --   icmp    t0 0x0A                 # if (t0 == '\n')			{}
0073 : 2085; -- . imov [jnz!    .print_char_keep_going]			{}
0074 : 3000; -- | imoh			{}
0075 : A002; -- ' j_op			{}
0076 : 2700; -- . imov [load!   t1 .ptr_counter]			{}
0077 : 3780; -- | imoh			{}
0078 : 0770; -- ' load			{}
0079 : 2801; -- . imov [load!   t2 .ptr_line_counter]			{}
007A : 3880; -- | imoh			{}
007B : 0880; -- ' load			{}
007C : 8784; --   add     t1 t2			{}
007D : 2000; -- . imov [str!    .ptr_counter t1]			{}
007E : 3080; -- | imoh			{}
007F : 1070; -- ' str			{}
0080 : 2864; -- . imov [imov!   t2 100]			{}
0081 : 3800; -- ' imoh			{}
0082 : 2099; -- . imov [jmp!    .print_char_store_and_exit]			{}
0083 : 3000; -- | imoh			{}
0084 : A000; -- ' j_op			{}
0085 : 2800; -- . imov [load!   t2 .ptr_counter]			{[Label(name='print_char_keep_going')]}
0086 : 3880; -- | imoh			{}
0087 : 0880; -- ' load			{}
0088 : 2738; --   imov    t1 0b00111000			{}
0089 : 978A; --   ishl    t1 8			{}
008A : 8672; --   or      t0 t1			{}
008B : 1860; --   str     t2 t0			{}
008C : 9814; --   iadd    t2 1			{}
008D : 2000; -- . imov [str!    .ptr_counter t2]			{}
008E : 3080; -- | imoh			{}
008F : 1080; -- ' str			{}
0090 : 2801; -- . imov [load!   t2 .ptr_line_counter]			{}
0091 : 3880; -- | imoh			{}
0092 : 0880; -- ' load			{}
0093 : 9815; --   isub    t2 1			{}
0094 : 2099; -- . imov [jnz!    .print_char_store_and_exit]			{}
0095 : 3000; -- | imoh			{}
0096 : A002; -- ' j_op			{}
0097 : 2864; -- . imov [imov!   t2 100]			{}
0098 : 3800; -- ' imoh			{}
0099 : 2700; -- . imov [load!   t1 .ptr_counter]			{[Label(name='print_char_store_and_exit')]}
009A : 3780; -- | imoh			{}
009B : 0770; -- ' load			{}
009C : 2070; -- . imov [icmp!   t1 6000]			{}
009D : 3017; -- | imoh			{}
009E : 8707; -- ' cmp			{}
009F : 20A6; -- . imov [jn!     .print_char_skip_reset]			{}
00A0 : 3000; -- | imoh			{}
00A1 : A003; -- ' j_op			{}
00A2 : 2700; --   imov    t1 0			{}
00A3 : 2000; -- . imov [str!    .ptr_counter t1]			{}
00A4 : 3080; -- | imoh			{}
00A5 : 1070; -- ' str			{}
00A6 : 2001; -- . imov [str!    .ptr_line_counter t2]			{[Label(name='print_char_skip_reset')]}
00A7 : 3080; -- | imoh			{}
00A8 : 1080; -- ' str			{}
00A9 : 68D0; -- . pop [pop!    t2 t1 t0]			{}
00AA : 67D0; -- | pop			{}
00AB : 66D0; -- ' pop			{}
00AC : A020; --   jmpr			{}
00AD : 5D60; -- . push [push! t0]			{[Label(name='key_buffer_init')]}
00AE : 2600; --   imov t0 0			{}
00AF : 2014; -- . imov [str!  .key_buffer_write_offset t0]			{}
00B0 : 3080; -- | imoh			{}
00B1 : 1060; -- ' str			{}
00B2 : 2013; -- . imov [str!  .key_buffer_read_offset t0]			{}
00B3 : 3080; -- | imoh			{}
00B4 : 1060; -- ' str			{}
00B5 : 66D0; -- . pop [pop! t0]			{}
00B6 : A020; --   jmpr			{}
00B7 : 5D60; -- . push [push! t0 t1]			{[Label(name='key_buffer_push')]}
00B8 : 5D70; -- ' push			{}
00B9 : 2703; -- . imov [imov! t1 .key_buffer]			{}
00BA : 3780; -- ' imoh			{}
00BB : 2614; -- . imov [load! t0 .key_buffer_write_offset]			{}
00BC : 3680; -- | imoh			{}
00BD : 0660; -- ' load			{}
00BE : 8764; --   add   t1 t0			{}
00BF : 1710; --   str   t1 p0			{}
00C0 : 9614; --   iadd  t0 1			{}
00C1 : 96F1; --   iand  t0 0b1111			{}
00C2 : 2014; -- . imov [str!  .key_buffer_write_offset t0]			{}
00C3 : 3080; -- | imoh			{}
00C4 : 1060; -- ' str			{}
00C5 : 67D0; -- . pop [pop!  t1 t0]			{}
00C6 : 66D0; -- ' pop			{}
00C7 : A020; --   jmpr			{}
00C8 : 5D60; -- . push [push! t0 t1]			{[Label(name='key_buffer_read')]}
00C9 : 5D70; -- ' push			{}
00CA : 2613; -- . imov [load! t0 .key_buffer_read_offset]			{[Label(name='key_buffer_read_loop')]}
00CB : 3680; -- | imoh			{}
00CC : 0660; -- ' load			{}
00CD : 2714; -- . imov [load! t1 .key_buffer_write_offset]			{}
00CE : 3780; -- | imoh			{}
00CF : 0770; -- ' load			{}
00D0 : 8677; --   cmp t0 t1			{}
00D1 : 20CA; -- . imov [jz! .key_buffer_read_loop]			{}
00D2 : 3000; -- | imoh			{}
00D3 : A001; -- ' j_op			{}
00D4 : 2703; -- . imov [imov! t1 .key_buffer]			{}
00D5 : 3780; -- ' imoh			{}
00D6 : 8764; --   add   t1 t0			{}
00D7 : 0570; --   load  v0 t1			{}
00D8 : 9614; --   iadd t0 1			{}
00D9 : 96F1; --   iand t0 0b1111			{}
00DA : 2013; -- . imov [str! .key_buffer_read_offset t0]			{}
00DB : 3080; -- | imoh			{}
00DC : 1060; -- ' str			{}
00DD : 67D0; -- . pop [pop!  t1 t0]			{}
00DE : 66D0; -- ' pop			{}
00DF : A020; --   jmpr			{}
00E0 : 0020; --  			{[Label(name='ps2_lut')]}
00E1 : 0020; --  			{}
00E2 : 0020; --  			{}
00E3 : 0020; --  			{}
00E4 : 0020; --  			{}
00E5 : 0020; --  			{}
00E6 : 0020; --  			{}
00E7 : 0020; --  			{}
00E8 : 0020; --  			{}
00E9 : 0020; --  			{}
00EA : 0020; --  			{}
00EB : 0020; --  			{}
00EC : 0020; --  			{}
00ED : 0020; --  			{}
00EE : 0060; -- `			{}
00EF : 0020; --  			{}
00F0 : 0020; --  			{}
00F1 : 0020; --  			{}
00F2 : 0020; --  			{}
00F3 : 0020; --  			{}
00F4 : 0020; --  			{}
00F5 : 0071; -- q			{}
00F6 : 0031; -- 1			{}
00F7 : 0020; --  			{}
00F8 : 0020; --  			{}
00F9 : 0020; --  			{}
00FA : 007A; -- z			{}
00FB : 0073; -- s			{}
00FC : 0061; -- a			{}
00FD : 0077; -- w			{}
00FE : 0032; -- 2			{}
00FF : 0020; --  			{}
0100 : 0020; --  			{}
0101 : 0063; -- c			{}
0102 : 0078; -- x			{}
0103 : 0064; -- d			{}
0104 : 0065; -- e			{}
0105 : 0034; -- 4			{}
0106 : 0033; -- 3			{}
0107 : 0020; --  			{}
0108 : 0020; --  			{}
0109 : 0020; --  			{}
010A : 0076; -- v			{}
010B : 0066; -- f			{}
010C : 0074; -- t			{}
010D : 0072; -- r			{}
010E : 0035; -- 5			{}
010F : 0020; --  			{}
0110 : 0020; --  			{}
0111 : 006E; -- n			{}
0112 : 0062; -- b			{}
0113 : 0068; -- h			{}
0114 : 0067; -- g			{}
0115 : 0079; -- y			{}
0116 : 0036; -- 6			{}
0117 : 0020; --  			{}
0118 : 0020; --  			{}
0119 : 0020; --  			{}
011A : 006D; -- m			{}
011B : 006A; -- j			{}
011C : 0075; -- u			{}
011D : 0037; -- 7			{}
011E : 0038; -- 8			{}
011F : 0020; --  			{}
0120 : 0020; --  			{}
0121 : 002C; -- ,			{}
0122 : 006B; -- k			{}
0123 : 0069; -- i			{}
0124 : 006F; -- o			{}
0125 : 0030; -- 0			{}
0126 : 0039; -- 9			{}
0127 : 0020; --  			{}
0128 : 0020; --  			{}
0129 : 002E; -- .			{}
012A : 002F; -- /			{}
012B : 006C; -- l			{}
012C : 003B; -- ;			{}
012D : 0070; -- p			{}
012E : 002D; -- -			{}
012F : 0020; --  			{}
0130 : 0020; --  			{}
0131 : 0020; --  			{}
0132 : 0020; --  			{}
0133 : 0020; --  			{}
0134 : 005B; -- [			{}
0135 : 003D; -- =			{}
0136 : 0020; --  			{}
0137 : 0020; --  			{}
0138 : 0020; --  			{}
0139 : 0020; --  			{}
013A : 000A; -- \n			{}
013B : 005D; -- ]			{}
013C : 0020; --  			{}
013D : 005C; -- \\			{}
013E : 0020; --  			{}
013F : 0020; --  			{}
0140 : 0020; --  			{}
0141 : 0020; --  			{}
0142 : 0020; --  			{}
0143 : 0020; --  			{}
0144 : 0020; --  			{}
0145 : 0020; --  			{}
0146 : 0020; --  			{}
0147 : 0020; --  			{}
0148 : 0020; --  			{}
0149 : 0020; --  			{}
014A : 0020; --  			{}
014B : 0020; --  			{}
014C : 0020; --  			{}
014D : 0020; --  			{}
014E : 0020; --  			{}
014F : 0020; --  			{}
0150 : 0020; --  			{}
0151 : 0020; --  			{}
0152 : 0020; --  			{}
0153 : 0020; --  			{}
0154 : 0020; --  			{}
0155 : 0020; --  			{}
0156 : 0020; --  			{}
0157 : 0020; --  			{}
0158 : 0020; --  			{}
0159 : 0020; --  			{}
015A : 0020; --  			{}
015B : 0020; --  			{}
015C : 0020; --  			{}
015D : 0020; --  			{}
015E : 0020; --  			{}
015F : 0020; --  			{}
0160 : 0020; --  			{}
0161 : 0020; --  			{}
0162 : 0020; --  			{}
0163 : 0020; --  			{}
0164 : 0020; --  			{}
0165 : 0020; --  			{}
0166 : 0020; --  			{}
0167 : 0020; --  			{}
0168 : 0020; --  			{}
0169 : 0020; --  			{}
016A : 0020; --  			{}
016B : 0020; --  			{}
016C : 0020; --  			{}
016D : 0020; --  			{}
016E : 0020; --  			{}
016F : 0020; --  			{}
0170 : 0020; --  			{}
0171 : 0020; --  			{}
0172 : 0020; --  			{}
0173 : 0020; --  			{}
0174 : 0020; --  			{}
0175 : 0020; --  			{}
0176 : 0020; --  			{}
0177 : 0020; --  			{}
0178 : 0020; --  			{}
0179 : 0020; --  			{}
017A : 0020; --  			{}
017B : 0020; --  			{}
017C : 0020; --  			{}
017D : 0020; --  			{}
017E : 0020; --  			{}
017F : 0020; --  			{}
0180 : 0020; --  			{}
0181 : 0020; --  			{}
0182 : 0020; --  			{}
0183 : 0020; --  			{}
0184 : 0020; --  			{}
0185 : 0020; --  			{}
0186 : 0020; --  			{}
0187 : 0020; --  			{}
0188 : 0020; --  			{}
0189 : 0020; --  			{}
018A : 0020; --  			{}
018B : 0020; --  			{}
018C : 0020; --  			{}
018D : 0020; --  			{}
018E : 0020; --  			{}
018F : 0020; --  			{}
0190 : 0020; --  			{}
0191 : 0020; --  			{}
0192 : 0020; --  			{}
0193 : 0020; --  			{}
0194 : 0020; --  			{}
0195 : 0020; --  			{}
0196 : 0020; --  			{}
0197 : 0020; --  			{}
0198 : 0020; --  			{}
0199 : 0020; --  			{}
019A : 0020; --  			{}
019B : 0020; --  			{}
019C : 0020; --  			{}
019D : 0020; --  			{}
019E : 0020; --  			{}
019F : 0020; --  			{}
01A0 : 0020; --  			{}
01A1 : 0020; --  			{}
01A2 : 0020; --  			{}
01A3 : 0020; --  			{}
01A4 : 0020; --  			{}
01A5 : 0020; --  			{}
01A6 : 0020; --  			{}
01A7 : 0020; --  			{}
01A8 : 0020; --  			{}
01A9 : 0020; --  			{}
01AA : 0020; --  			{}
01AB : 0020; --  			{}
01AC : 0020; --  			{}
01AD : 0020; --  			{}
01AE : 0020; --  			{}
01AF : 0020; --  			{}
01B0 : 0020; --  			{}
01B1 : 0020; --  			{}
01B2 : 0020; --  			{}
01B3 : 0020; --  			{}
01B4 : 0020; --  			{}
01B5 : 0020; --  			{}
01B6 : 0020; --  			{}
01B7 : 0020; --  			{}
01B8 : 0020; --  			{}
01B9 : 0020; --  			{}
01BA : 0020; --  			{}
01BB : 0020; --  			{}
01BC : 0020; --  			{}
01BD : 0020; --  			{}
01BE : 0020; --  			{}
01BF : 0020; --  			{}
01C0 : 0020; --  			{}
01C1 : 0020; --  			{}
01C2 : 0020; --  			{}
01C3 : 0020; --  			{}
01C4 : 0020; --  			{}
01C5 : 0020; --  			{}
01C6 : 0020; --  			{}
01C7 : 0020; --  			{}
01C8 : 0020; --  			{}
01C9 : 0020; --  			{}
01CA : 0020; --  			{}
01CB : 0020; --  			{}
01CC : 0020; --  			{}
01CD : 0020; --  			{}
01CE : 0020; --  			{}
01CF : 0020; --  			{}
01D0 : 0020; --  			{}
01D1 : 0020; --  			{}
01D2 : 0020; --  			{}
01D3 : 0020; --  			{}
01D4 : 0020; --  			{}
01D5 : 0020; --  			{}
01D6 : 0020; --  			{}
01D7 : 0020; --  			{}
01D8 : 0020; --  			{}
01D9 : 0020; --  			{}
01DA : 0020; --  			{}
01DB : 0020; --  			{}
01DC : 0020; --  			{}
01DD : 0020; --  			{}
01DE : 0020; --  			{}
01DF : 0020; --  			{}
01E0 : 5D60; -- . push [push!   t0]			{[Label(name='get_keyboard_ascii')]}
01E1 : 25E0; -- . imov [imov!   v0 .ps2_lut]			{}
01E2 : 3500; -- ' imoh			{}
01E3 : 26FF; -- . imov [load!   t0 .ps2_scancode_ptr]			{}
01E4 : 36FF; -- | imoh			{}
01E5 : 0660; -- ' load			{}
01E6 : 8564; --   add     v0 t0			{}
01E7 : 0550; --   load    v0 v0			{}
01E8 : 66D0; -- . pop [pop!    t0]			{}
01E9 : A020; --   jmpr			{}
01EA : 0048; -- H			{[Label(name='welcome_message')]}
01EB : 0065; -- e			{}
01EC : 006C; -- l			{}
01ED : 006C; -- l			{}
01EE : 006F; -- o			{}
01EF : 0020; --  			{}
01F0 : 0066; -- f			{}
01F1 : 0072; -- r			{}
01F2 : 006F; -- o			{}
01F3 : 006D; -- m			{}
01F4 : 0020; --  			{}
01F5 : 0054; -- T			{}
01F6 : 006F; -- o			{}
01F7 : 0061; -- a			{}
01F8 : 0073; -- s			{}
01F9 : 0074; -- t			{}
01FA : 004F; -- O			{}
01FB : 0053; -- S			{}
01FC : 000A; -- \n			{}
01FD : 004D; -- M			{}
01FE : 0065; -- e			{}
01FF : 006D; -- m			{}
0200 : 006F; -- o			{}
0201 : 0072; -- r			{}
0202 : 0079; -- y			{}
0203 : 0020; --  			{}
0204 : 004C; -- L			{}
0205 : 0061; -- a			{}
0206 : 0079; -- y			{}
0207 : 006F; -- o			{}
0208 : 0075; -- u			{}
0209 : 0074; -- t			{}
020A : 003A; -- :			{}
020B : 0020; --  			{}
020C : 0033; -- 3			{}
020D : 0032; -- 2			{}
020E : 006B; -- k			{}
020F : 0057; -- W			{}
0210 : 0020; --  			{}
0211 : 0052; -- R			{}
0212 : 004F; -- O			{}
0213 : 004D; -- M			{}
0214 : 0020; --  			{}
0215 : 0031; -- 1			{}
0216 : 0036; -- 6			{}
0217 : 006B; -- k			{}
0218 : 0057; -- W			{}
0219 : 0020; --  			{}
021A : 0052; -- R			{}
021B : 0041; -- A			{}
021C : 004D; -- M			{}
021D : 0020; --  			{}
021E : 0031; -- 1			{}
021F : 0036; -- 6			{}
0220 : 006B; -- k			{}
0221 : 0057; -- W			{}
0222 : 0020; --  			{}
0223 : 0049; -- I			{}
0224 : 004F; -- O			{}
0225 : 000A; -- \n			{}
0226 : 0000; -- \x00			{}
0227 : 0024; -- $			{[Label(name='prompt_message')]}
0228 : 0020; --  			{}
0229 : 0000; -- \x00			{}
022A : 5D00; -- · push r0 [isr!]			{[Label(name='isr')]}
022B : 20E0; -- . imov r0 .get_keyboard_ascii  [call!   .get_keyboard_ascii]			{}
022C : 3001; -- | imoh r0 .get_keyboard_ascii			{}
022D : A010; -- ' jmpl			{}
022E : 8156; --   mov     p0 v0			{}
022F : 206E; -- . imov r0 .print_char  [call!   .print_char]			{}
0230 : 3000; -- | imoh r0 .print_char			{}
0231 : A010; -- ' jmpl			{}
0232 : 60D0; -- . pop r0 [rti!]			{}
0233 : C000; -- ' rti			{}
0234 : 2006; -- . imov r0 .print_init  [call!   .print_init]			{[Label(name='main')]}
0235 : 3000; -- | imoh r0 .print_init			{}
0236 : A010; -- ' jmpl			{}
0237 : 21EA; -- . imov [imov!   p0 .welcome_message]			{}
0238 : 3101; -- ' imoh			{}
0239 : 2010; -- . imov r0 .print_string  [call!   .print_string]			{}
023A : 3000; -- | imoh r0 .print_string			{}
023B : A010; -- ' jmpl			{}
023C : 203C; -- . imov [jmp!    .main_loop]			{[Label(name='main_loop')]}
023D : 3002; -- | imoh			{}
023E : A000; -- ' j_op			{}
023F : A020; --   jmpr    # deadcode			{}
END;