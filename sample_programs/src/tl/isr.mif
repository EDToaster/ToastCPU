DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2CFA; -- . imov [imov!   isr .isr]
0001 : 3C02; -- ' imoh
0002 : 2603; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 2017; -- . imov [jmp!    .main]
000F : 3003; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 2664; -- . imov [imov!  t0 100]
0014 : 3600; -- ' imoh
0015 : 2000; -- . imov [str!   .variable_alloc_text_progress t0]
0016 : 3080; -- | imoh
0017 : 1060; -- ' str
0018 : 2600; -- . imov [imov!  t0 0]
0019 : 3600; -- ' imoh
001A : 2001; -- . imov [str!   .variable_alloc_text_ptr t0]
001B : 3080; -- | imoh
001C : 1060; -- ' str
001D : 66D0; -- . pop [pop! t0]
001E : A020; --   jmpr
001F : 0020; -- 0x20
0020 : 0020; -- 0x20
0021 : 0020; -- 0x20
0022 : 0020; -- 0x20
0023 : 0020; -- 0x20
0024 : 0020; -- 0x20
0025 : 0020; -- 0x20
0026 : 0020; -- 0x20
0027 : 0020; -- 0x20
0028 : 0020; -- 0x20
0029 : 0020; -- 0x20
002A : 0020; -- 0x20
002B : 0020; -- 0x20
002C : 0020; -- 0x20
002D : 0060; -- 0x60
002E : 0020; -- 0x20
002F : 0020; -- 0x20
0030 : 0020; -- 0x20
0031 : 0020; -- 0x20
0032 : 0020; -- 0x20
0033 : 0020; -- 0x20
0034 : 0071; -- 0x71
0035 : 0031; -- 0x31
0036 : 0020; -- 0x20
0037 : 0020; -- 0x20
0038 : 0020; -- 0x20
0039 : 007A; -- 0x7A
003A : 0073; -- 0x73
003B : 0061; -- 0x61
003C : 0077; -- 0x77
003D : 0032; -- 0x32
003E : 0020; -- 0x20
003F : 0020; -- 0x20
0040 : 0063; -- 0x63
0041 : 0078; -- 0x78
0042 : 0064; -- 0x64
0043 : 0065; -- 0x65
0044 : 0034; -- 0x34
0045 : 0033; -- 0x33
0046 : 0020; -- 0x20
0047 : 0020; -- 0x20
0048 : 0020; -- 0x20
0049 : 0076; -- 0x76
004A : 0066; -- 0x66
004B : 0074; -- 0x74
004C : 0072; -- 0x72
004D : 0035; -- 0x35
004E : 0020; -- 0x20
004F : 0020; -- 0x20
0050 : 006E; -- 0x6E
0051 : 0062; -- 0x62
0052 : 0068; -- 0x68
0053 : 0067; -- 0x67
0054 : 0079; -- 0x79
0055 : 0036; -- 0x36
0056 : 0020; -- 0x20
0057 : 0020; -- 0x20
0058 : 0020; -- 0x20
0059 : 006D; -- 0x6D
005A : 006A; -- 0x6A
005B : 0075; -- 0x75
005C : 0037; -- 0x37
005D : 0038; -- 0x38
005E : 0020; -- 0x20
005F : 0020; -- 0x20
0060 : 002C; -- 0x2C
0061 : 006B; -- 0x6B
0062 : 0069; -- 0x69
0063 : 006F; -- 0x6F
0064 : 0030; -- 0x30
0065 : 0039; -- 0x39
0066 : 0020; -- 0x20
0067 : 0020; -- 0x20
0068 : 002E; -- 0x2E
0069 : 002F; -- 0x2F
006A : 006C; -- 0x6C
006B : 003B; -- 0x3B
006C : 0070; -- 0x70
006D : 002D; -- 0x2D
006E : 0020; -- 0x20
006F : 0020; -- 0x20
0070 : 0020; -- 0x20
0071 : 0020; -- 0x20
0072 : 0020; -- 0x20
0073 : 005B; -- 0x5B
0074 : 003D; -- 0x3D
0075 : 0020; -- 0x20
0076 : 0020; -- 0x20
0077 : 0020; -- 0x20
0078 : 0020; -- 0x20
0079 : 000A; -- 0xA
007A : 005D; -- 0x5D
007B : 0020; -- 0x20
007C : 005C; -- 0x5C
007D : 0020; -- 0x20
007E : 0020; -- 0x20
007F : 0020; -- 0x20
0080 : 0020; -- 0x20
0081 : 0020; -- 0x20
0082 : 0020; -- 0x20
0083 : 0020; -- 0x20
0084 : 0020; -- 0x20
0085 : 0020; -- 0x20
0086 : 0020; -- 0x20
0087 : 0020; -- 0x20
0088 : 0020; -- 0x20
0089 : 0020; -- 0x20
008A : 0020; -- 0x20
008B : 0020; -- 0x20
008C : 0020; -- 0x20
008D : 0020; -- 0x20
008E : 0020; -- 0x20
008F : 0020; -- 0x20
0090 : 0020; -- 0x20
0091 : 0020; -- 0x20
0092 : 0020; -- 0x20
0093 : 0020; -- 0x20
0094 : 0020; -- 0x20
0095 : 0020; -- 0x20
0096 : 0020; -- 0x20
0097 : 0020; -- 0x20
0098 : 0020; -- 0x20
0099 : 0020; -- 0x20
009A : 0020; -- 0x20
009B : 0020; -- 0x20
009C : 0020; -- 0x20
009D : 0020; -- 0x20
009E : 0020; -- 0x20
009F : 0020; -- 0x20
00A0 : 0020; -- 0x20
00A1 : 0020; -- 0x20
00A2 : 0020; -- 0x20
00A3 : 0020; -- 0x20
00A4 : 0020; -- 0x20
00A5 : 0020; -- 0x20
00A6 : 0020; -- 0x20
00A7 : 0020; -- 0x20
00A8 : 0020; -- 0x20
00A9 : 0020; -- 0x20
00AA : 0020; -- 0x20
00AB : 0020; -- 0x20
00AC : 0020; -- 0x20
00AD : 0020; -- 0x20
00AE : 0020; -- 0x20
00AF : 0020; -- 0x20
00B0 : 0020; -- 0x20
00B1 : 0020; -- 0x20
00B2 : 0020; -- 0x20
00B3 : 0020; -- 0x20
00B4 : 0020; -- 0x20
00B5 : 0020; -- 0x20
00B6 : 0020; -- 0x20
00B7 : 0020; -- 0x20
00B8 : 0020; -- 0x20
00B9 : 0020; -- 0x20
00BA : 0020; -- 0x20
00BB : 0020; -- 0x20
00BC : 0020; -- 0x20
00BD : 0020; -- 0x20
00BE : 0020; -- 0x20
00BF : 0020; -- 0x20
00C0 : 0020; -- 0x20
00C1 : 0020; -- 0x20
00C2 : 0020; -- 0x20
00C3 : 0020; -- 0x20
00C4 : 0020; -- 0x20
00C5 : 0020; -- 0x20
00C6 : 0020; -- 0x20
00C7 : 0020; -- 0x20
00C8 : 0020; -- 0x20
00C9 : 0020; -- 0x20
00CA : 0020; -- 0x20
00CB : 0020; -- 0x20
00CC : 0020; -- 0x20
00CD : 0020; -- 0x20
00CE : 0020; -- 0x20
00CF : 0020; -- 0x20
00D0 : 0020; -- 0x20
00D1 : 0020; -- 0x20
00D2 : 0020; -- 0x20
00D3 : 0020; -- 0x20
00D4 : 0020; -- 0x20
00D5 : 0020; -- 0x20
00D6 : 0020; -- 0x20
00D7 : 0020; -- 0x20
00D8 : 0020; -- 0x20
00D9 : 0020; -- 0x20
00DA : 0020; -- 0x20
00DB : 0020; -- 0x20
00DC : 0020; -- 0x20
00DD : 0020; -- 0x20
00DE : 0020; -- 0x20
00DF : 0020; -- 0x20
00E0 : 0020; -- 0x20
00E1 : 0020; -- 0x20
00E2 : 0020; -- 0x20
00E3 : 0020; -- 0x20
00E4 : 0020; -- 0x20
00E5 : 0020; -- 0x20
00E6 : 0020; -- 0x20
00E7 : 0020; -- 0x20
00E8 : 0020; -- 0x20
00E9 : 0020; -- 0x20
00EA : 0020; -- 0x20
00EB : 0020; -- 0x20
00EC : 0020; -- 0x20
00ED : 0020; -- 0x20
00EE : 0020; -- 0x20
00EF : 0020; -- 0x20
00F0 : 0020; -- 0x20
00F1 : 0020; -- 0x20
00F2 : 0020; -- 0x20
00F3 : 0020; -- 0x20
00F4 : 0020; -- 0x20
00F5 : 0020; -- 0x20
00F6 : 0020; -- 0x20
00F7 : 0020; -- 0x20
00F8 : 0020; -- 0x20
00F9 : 0020; -- 0x20
00FA : 0020; -- 0x20
00FB : 0020; -- 0x20
00FC : 0020; -- 0x20
00FD : 0020; -- 0x20
00FE : 0020; -- 0x20
00FF : 0020; -- 0x20
0100 : 0020; -- 0x20
0101 : 0020; -- 0x20
0102 : 0020; -- 0x20
0103 : 0020; -- 0x20
0104 : 0020; -- 0x20
0105 : 0020; -- 0x20
0106 : 0020; -- 0x20
0107 : 0020; -- 0x20
0108 : 0020; -- 0x20
0109 : 0020; -- 0x20
010A : 0020; -- 0x20
010B : 0020; -- 0x20
010C : 0020; -- 0x20
010D : 0020; -- 0x20
010E : 0020; -- 0x20
010F : 0020; -- 0x20
0110 : 0020; -- 0x20
0111 : 0020; -- 0x20
0112 : 0020; -- 0x20
0113 : 0020; -- 0x20
0114 : 0020; -- 0x20
0115 : 0020; -- 0x20
0116 : 0020; -- 0x20
0117 : 0020; -- 0x20
0118 : 0020; -- 0x20
0119 : 0020; -- 0x20
011A : 0020; -- 0x20
011B : 0020; -- 0x20
011C : 0020; -- 0x20
011D : 0020; -- 0x20
011E : 0020; -- 0x20
011F : 0000; -- 0x0
0120 : 66D0; -- . pop [pop! t0]
0121 : 5D60; -- . push [push! t0 t0]
0122 : 5D60; -- ' push
0123 : 260A; -- . imov [imov! t0 10]
0124 : 3600; -- ' imoh
0125 : 5D60; --   push t0
0126 : 67D0; -- . pop [pop! t1 t0]
0127 : 66D0; -- ' pop
0128 : 2801; --   imov t2 1  # default value
0129 : 8675; --   sub  t0 t1
012A : 202E; -- . imov [jz!  .print_char_body_0_operator_opskip]
012B : 3001; -- | imoh
012C : A001; -- ' j_op
012D : 2800; --   imov t2 0
012E : 5D80; -- . push [push! t2]
012F : 66D0; -- . pop [pop! t0]
0130 : 9607; --   tst  t0
0131 : 2057; -- . imov [jz!  .print_char_body_1_else]
0132 : 3001; -- | imoh
0133 : A001; -- ' j_op
0134 : 66D0; -- . pop [pop! t0]
0135 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0136 : 3680; -- ' imoh
0137 : 5D60; -- . push [push! t0]
0138 : 66D0; -- . pop [pop! t0]
0139 : 0660; --   load t0 t0
013A : 5D60; -- . push [push! t0]
013B : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
013C : 3680; -- ' imoh
013D : 5D60; -- . push [push! t0]
013E : 66D0; -- . pop [pop! t0]
013F : 0660; --   load t0 t0
0140 : 5D60; -- . push [push! t0]
0141 : 67D0; -- . pop [pop!  t1 t0]
0142 : 66D0; -- ' pop
0143 : 8674; --   add   t0 t1
0144 : 5D60; -- . push [push! t0]
0145 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0146 : 3680; -- ' imoh
0147 : 5D60; -- . push [push! t0]
0148 : 67D0; -- . pop [pop! t1 t0]
0149 : 66D0; -- ' pop
014A : 1760; --   str  t1 t0
014B : 2664; -- . imov [imov! t0 100]
014C : 3600; -- ' imoh
014D : 5D60; --   push t0
014E : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
014F : 3680; -- ' imoh
0150 : 5D60; -- . push [push! t0]
0151 : 67D0; -- . pop [pop! t1 t0]
0152 : 66D0; -- ' pop
0153 : 1760; --   str  t1 t0
0154 : 20AB; -- . imov [jmp! .print_char_body_1_if_exit]
0155 : 3001; -- | imoh
0156 : A000; -- ' j_op
0157 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0158 : 3680; -- ' imoh
0159 : 5D60; -- . push [push! t0]
015A : 66D0; -- . pop [pop! t0]
015B : 0660; --   load t0 t0
015C : 5D60; -- . push [push! t0]
015D : 66D0; -- . pop [pop! t0 t1]
015E : 67D0; -- ' pop
015F : 5D60; -- . push [push! t0 t1]
0160 : 5D70; -- ' push
0161 : 2600; -- . imov [imov! t0 14336]
0162 : 3638; -- ' imoh
0163 : 5D60; --   push t0
0164 : 67D0; -- . pop [pop!  t1 t0]
0165 : 66D0; -- ' pop
0166 : 8672; --   or    t0 t1
0167 : 5D60; -- . push [push! t0]
0168 : 66D0; -- . pop [pop! t0 t1]
0169 : 67D0; -- ' pop
016A : 5D70; -- . push [push! t1 t0 t1]
016B : 5D60; -- | push
016C : 5D70; -- ' push
016D : 67D0; -- . pop [pop! t1 t0]
016E : 66D0; -- ' pop
016F : 1760; --   str  t1 t0
0170 : 2601; -- . imov [imov! t0 1]
0171 : 3600; -- ' imoh
0172 : 5D60; --   push t0
0173 : 67D0; -- . pop [pop!  t1 t0]
0174 : 66D0; -- ' pop
0175 : 8674; --   add   t0 t1
0176 : 5D60; -- . push [push! t0]
0177 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0178 : 3680; -- ' imoh
0179 : 5D60; -- . push [push! t0]
017A : 67D0; -- . pop [pop! t1 t0]
017B : 66D0; -- ' pop
017C : 1760; --   str  t1 t0
017D : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
017E : 3680; -- ' imoh
017F : 5D60; -- . push [push! t0]
0180 : 66D0; -- . pop [pop! t0]
0181 : 0660; --   load t0 t0
0182 : 5D60; -- . push [push! t0]
0183 : 2601; -- . imov [imov! t0 1]
0184 : 3600; -- ' imoh
0185 : 5D60; --   push t0
0186 : 67D0; -- . pop [pop!  t1 t0]
0187 : 66D0; -- ' pop
0188 : 8675; --   sub   t0 t1
0189 : 5D60; -- . push [push! t0]
018A : 66D0; -- . pop [pop! t0]
018B : 5D60; -- . push [push! t0 t0]
018C : 5D60; -- ' push
018D : 2600; -- . imov [imov! t0 0]
018E : 3600; -- ' imoh
018F : 5D60; --   push t0
0190 : 67D0; -- . pop [pop! t1 t0]
0191 : 66D0; -- ' pop
0192 : 2801; --   imov t2 1  # default value
0193 : 8675; --   sub  t0 t1
0194 : 2098; -- . imov [jz!  .print_char_body_1_else_3_operator_opskip]
0195 : 3001; -- | imoh
0196 : A001; -- ' j_op
0197 : 2800; --   imov t2 0
0198 : 5D80; -- . push [push! t2]
0199 : 66D0; -- . pop [pop! t0]
019A : 9607; --   tst  t0
019B : 20A5; -- . imov [jz!  .print_char_body_1_else_4_else]
019C : 3001; -- | imoh
019D : A001; -- ' j_op
019E : 66D0; -- . pop [pop! t0]
019F : 2664; -- . imov [imov! t0 100]
01A0 : 3600; -- ' imoh
01A1 : 5D60; --   push t0
01A2 : 20A5; -- . imov [jmp! .print_char_body_1_else_4_if_exit]
01A3 : 3001; -- | imoh
01A4 : A000; -- ' j_op
01A5 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
01A6 : 3680; -- ' imoh
01A7 : 5D60; -- . push [push! t0]
01A8 : 67D0; -- . pop [pop! t1 t0]
01A9 : 66D0; -- ' pop
01AA : 1760; --   str  t1 t0
01AB : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
01AC : 3680; -- ' imoh
01AD : 5D60; -- . push [push! t0]
01AE : 66D0; -- . pop [pop! t0]
01AF : 0660; --   load t0 t0
01B0 : 5D60; -- . push [push! t0]
01B1 : 2670; -- . imov [imov! t0 6000]
01B2 : 3617; -- ' imoh
01B3 : 5D60; --   push t0
01B4 : 67D0; -- . pop [pop! t1 t0]
01B5 : 66D0; -- ' pop
01B6 : 2800; --   imov t2 0  # default value
01B7 : 8675; --   sub  t0 t1
01B8 : 20BC; -- . imov [jn!  .print_char_body_3_operator_opskip]
01B9 : 3001; -- | imoh
01BA : A003; -- ' j_op
01BB : 2801; --   imov t2 1
01BC : 5D80; -- . push [push! t2]
01BD : 66D0; -- . pop [pop! t0]
01BE : 9607; --   tst  t0
01BF : 20D8; -- . imov [jz!  .print_char_body_4_else]
01C0 : 3001; -- | imoh
01C1 : A001; -- ' j_op
01C2 : 7000; --   halt
01C3 : 2600; -- . imov [imov! t0 0]
01C4 : 3600; -- ' imoh
01C5 : 5D60; --   push t0
01C6 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
01C7 : 3680; -- ' imoh
01C8 : 5D60; -- . push [push! t0]
01C9 : 67D0; -- . pop [pop! t1 t0]
01CA : 66D0; -- ' pop
01CB : 1760; --   str  t1 t0
01CC : 2664; -- . imov [imov! t0 100]
01CD : 3600; -- ' imoh
01CE : 5D60; --   push t0
01CF : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
01D0 : 3680; -- ' imoh
01D1 : 5D60; -- . push [push! t0]
01D2 : 67D0; -- . pop [pop! t1 t0]
01D3 : 66D0; -- ' pop
01D4 : 1760; --   str  t1 t0
01D5 : 20D8; -- . imov [jmp! .print_char_body_4_if_exit]
01D6 : 3001; -- | imoh
01D7 : A000; -- ' j_op
01D8 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
01D9 : 3680; -- | imoh
01DA : 0660; -- ' load
01DB : 9615; --   isub    t0 1
01DC : 0760; --   load    t1 t0
01DD : 2002; -- . imov [str!    .ret_stack_ptr t0]
01DE : 3080; -- | imoh
01DF : 1060; -- ' str
01E0 : A700; --   jmp     t1
01E1 : 66D0; -- . pop [pop! t0]
01E2 : 5D60; -- . push [push! t0 t0]
01E3 : 5D60; -- ' push
01E4 : 260A; -- . imov [imov! t0 10]
01E5 : 3600; -- ' imoh
01E6 : 5D60; --   push t0
01E7 : 67D0; -- . pop [pop! t1 t0]
01E8 : 66D0; -- ' pop
01E9 : 2801; --   imov t2 1  # default value
01EA : 8675; --   sub  t0 t1
01EB : 20EF; -- . imov [jn!  .print_hex_body_0_operator_opskip]
01EC : 3001; -- | imoh
01ED : A003; -- ' j_op
01EE : 2800; --   imov t2 0
01EF : 5D80; -- . push [push! t2]
01F0 : 66D0; -- . pop [pop! t0]
01F1 : 9607; --   tst  t0
01F2 : 200C; -- . imov [jz!  .print_hex_body_1_else]
01F3 : 3002; -- | imoh
01F4 : A001; -- ' j_op
01F5 : 2630; -- . imov [imov! t0 48]
01F6 : 3600; -- ' imoh
01F7 : 5D60; --   push t0
01F8 : 67D0; -- . pop [pop!  t1 t0]
01F9 : 66D0; -- ' pop
01FA : 8674; --   add   t0 t1
01FB : 5D60; -- . push [push! t0]
01FC : 2602; -- . imov [load!   t0 .ret_stack_ptr]
01FD : 3680; -- | imoh
01FE : 0660; -- ' load
01FF : 2709; -- . imov [imov!   t1 .print_hex_body_1_if_retaddr0]
0200 : 3702; -- ' imoh
0201 : 1670; --   str     t0 t1
0202 : 9614; --   iadd    t0 1
0203 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0204 : 3080; -- | imoh
0205 : 1060; -- ' str
0206 : 2020; -- . imov [jmp!    .print_char]
0207 : 3001; -- | imoh
0208 : A000; -- ' j_op
0209 : 2027; -- . imov [jmp! .print_hex_body_1_if_exit]
020A : 3002; -- | imoh
020B : A000; -- ' j_op
020C : 260A; -- . imov [imov! t0 10]
020D : 3600; -- ' imoh
020E : 5D60; --   push t0
020F : 67D0; -- . pop [pop!  t1 t0]
0210 : 66D0; -- ' pop
0211 : 8675; --   sub   t0 t1
0212 : 5D60; -- . push [push! t0]
0213 : 2641; -- . imov [imov! t0 65]
0214 : 3600; -- ' imoh
0215 : 5D60; --   push t0
0216 : 67D0; -- . pop [pop!  t1 t0]
0217 : 66D0; -- ' pop
0218 : 8674; --   add   t0 t1
0219 : 5D60; -- . push [push! t0]
021A : 2602; -- . imov [load!   t0 .ret_stack_ptr]
021B : 3680; -- | imoh
021C : 0660; -- ' load
021D : 2727; -- . imov [imov!   t1 .print_hex_body_1_else_retaddr0]
021E : 3702; -- ' imoh
021F : 1670; --   str     t0 t1
0220 : 9614; --   iadd    t0 1
0221 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0222 : 3080; -- | imoh
0223 : 1060; -- ' str
0224 : 2020; -- . imov [jmp!    .print_char]
0225 : 3001; -- | imoh
0226 : A000; -- ' j_op
0227 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0228 : 3680; -- | imoh
0229 : 0660; -- ' load
022A : 9615; --   isub    t0 1
022B : 0760; --   load    t1 t0
022C : 2002; -- . imov [str!    .ret_stack_ptr t0]
022D : 3080; -- | imoh
022E : 1060; -- ' str
022F : A700; --   jmp     t1
0230 : 66D0; -- . pop [pop! t0]
0231 : 5D60; -- . push [push! t0 t0]
0232 : 5D60; -- ' push
0233 : 2604; -- . imov [imov! t0 4]
0234 : 3600; -- ' imoh
0235 : 5D60; --   push t0
0236 : 67D0; -- . pop [pop!  t1 t0]
0237 : 66D0; -- ' pop
0238 : 8679; --   sshr  t0 t1
0239 : 5D60; -- . push [push! t0]
023A : 260F; -- . imov [imov! t0 15]
023B : 3600; -- ' imoh
023C : 5D60; --   push t0
023D : 67D0; -- . pop [pop!  t1 t0]
023E : 66D0; -- ' pop
023F : 8671; --   and   t0 t1
0240 : 5D60; -- . push [push! t0]
0241 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0242 : 3680; -- | imoh
0243 : 0660; -- ' load
0244 : 274E; -- . imov [imov!   t1 .print_nibble_body_retaddr0]
0245 : 3702; -- ' imoh
0246 : 1670; --   str     t0 t1
0247 : 9614; --   iadd    t0 1
0248 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0249 : 3080; -- | imoh
024A : 1060; -- ' str
024B : 20E1; -- . imov [jmp!    .print_hex]
024C : 3001; -- | imoh
024D : A000; -- ' j_op
024E : 66D0; -- . pop [pop! t0]
024F : 5D60; -- . push [push! t0 t0]
0250 : 5D60; -- ' push
0251 : 260F; -- . imov [imov! t0 15]
0252 : 3600; -- ' imoh
0253 : 5D60; --   push t0
0254 : 67D0; -- . pop [pop!  t1 t0]
0255 : 66D0; -- ' pop
0256 : 8671; --   and   t0 t1
0257 : 5D60; -- . push [push! t0]
0258 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0259 : 3680; -- | imoh
025A : 0660; -- ' load
025B : 2765; -- . imov [imov!   t1 .print_nibble_body_retaddr1]
025C : 3702; -- ' imoh
025D : 1670; --   str     t0 t1
025E : 9614; --   iadd    t0 1
025F : 2002; -- . imov [str!    .ret_stack_ptr t0]
0260 : 3080; -- | imoh
0261 : 1060; -- ' str
0262 : 20E1; -- . imov [jmp!    .print_hex]
0263 : 3001; -- | imoh
0264 : A000; -- ' j_op
0265 : 66D0; -- . pop [pop! t0]
0266 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0267 : 3680; -- | imoh
0268 : 0660; -- ' load
0269 : 9615; --   isub    t0 1
026A : 0760; --   load    t1 t0
026B : 2002; -- . imov [str!    .ret_stack_ptr t0]
026C : 3080; -- | imoh
026D : 1060; -- ' str
026E : A700; --   jmp     t1
026F : 66D0; -- . pop [pop! t0]
0270 : 5D60; -- . push [push! t0 t0]
0271 : 5D60; -- ' push
0272 : 2608; -- . imov [imov! t0 8]
0273 : 3600; -- ' imoh
0274 : 5D60; --   push t0
0275 : 67D0; -- . pop [pop!  t1 t0]
0276 : 66D0; -- ' pop
0277 : 8679; --   sshr  t0 t1
0278 : 5D60; -- . push [push! t0]
0279 : 26FF; -- . imov [imov! t0 255]
027A : 3600; -- ' imoh
027B : 5D60; --   push t0
027C : 67D0; -- . pop [pop!  t1 t0]
027D : 66D0; -- ' pop
027E : 8671; --   and   t0 t1
027F : 5D60; -- . push [push! t0]
0280 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0281 : 3680; -- | imoh
0282 : 0660; -- ' load
0283 : 278D; -- . imov [imov!   t1 .print_word_body_retaddr0]
0284 : 3702; -- ' imoh
0285 : 1670; --   str     t0 t1
0286 : 9614; --   iadd    t0 1
0287 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0288 : 3080; -- | imoh
0289 : 1060; -- ' str
028A : 2030; -- . imov [jmp!    .print_nibble]
028B : 3002; -- | imoh
028C : A000; -- ' j_op
028D : 66D0; -- . pop [pop! t0]
028E : 5D60; -- . push [push! t0 t0]
028F : 5D60; -- ' push
0290 : 26FF; -- . imov [imov! t0 255]
0291 : 3600; -- ' imoh
0292 : 5D60; --   push t0
0293 : 67D0; -- . pop [pop!  t1 t0]
0294 : 66D0; -- ' pop
0295 : 8671; --   and   t0 t1
0296 : 5D60; -- . push [push! t0]
0297 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0298 : 3680; -- | imoh
0299 : 0660; -- ' load
029A : 27A4; -- . imov [imov!   t1 .print_word_body_retaddr1]
029B : 3702; -- ' imoh
029C : 1670; --   str     t0 t1
029D : 9614; --   iadd    t0 1
029E : 2002; -- . imov [str!    .ret_stack_ptr t0]
029F : 3080; -- | imoh
02A0 : 1060; -- ' str
02A1 : 2030; -- . imov [jmp!    .print_nibble]
02A2 : 3002; -- | imoh
02A3 : A000; -- ' j_op
02A4 : 66D0; -- . pop [pop! t0]
02A5 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02A6 : 3680; -- | imoh
02A7 : 0660; -- ' load
02A8 : 9615; --   isub    t0 1
02A9 : 0760; --   load    t1 t0
02AA : 2002; -- . imov [str!    .ret_stack_ptr t0]
02AB : 3080; -- | imoh
02AC : 1060; -- ' str
02AD : A700; --   jmp     t1
02AE : 66D0; -- . pop [pop! t0]
02AF : 5D60; -- . push [push! t0 t0]
02B0 : 5D60; -- ' push
02B1 : 66D0; -- . pop [pop! t0]
02B2 : 0660; --   load t0 t0
02B3 : 5D60; -- . push [push! t0]
02B4 : 66D0; -- . pop [pop! t0]
02B5 : 5D60; -- . push [push! t0 t0]
02B6 : 5D60; -- ' push
02B7 : 66D0; -- . pop [pop! t0]
02B8 : 9607; --   tst  t0
02B9 : 20D6; -- . imov [jz!  .print_string_body_0_while_exit]
02BA : 3002; -- | imoh
02BB : A001; -- ' j_op
02BC : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02BD : 3680; -- | imoh
02BE : 0660; -- ' load
02BF : 27C9; -- . imov [imov!   t1 .print_string_body_0_while_block_retaddr0]
02C0 : 3702; -- ' imoh
02C1 : 1670; --   str     t0 t1
02C2 : 9614; --   iadd    t0 1
02C3 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02C4 : 3080; -- | imoh
02C5 : 1060; -- ' str
02C6 : 2020; -- . imov [jmp!    .print_char]
02C7 : 3001; -- | imoh
02C8 : A000; -- ' j_op
02C9 : 2601; -- . imov [imov! t0 1]
02CA : 3600; -- ' imoh
02CB : 5D60; --   push t0
02CC : 67D0; -- . pop [pop!  t1 t0]
02CD : 66D0; -- ' pop
02CE : 8674; --   add   t0 t1
02CF : 5D60; -- . push [push! t0]
02D0 : 66D0; -- . pop [pop! t0]
02D1 : 5D60; -- . push [push! t0 t0]
02D2 : 5D60; -- ' push
02D3 : 20B1; -- . imov [jmp! .print_string_body_0_while_eval]
02D4 : 3002; -- | imoh
02D5 : A000; -- ' j_op
02D6 : 66D0; -- . pop [pop! t0]
02D7 : 66D0; -- . pop [pop! t0]
02D8 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02D9 : 3680; -- | imoh
02DA : 0660; -- ' load
02DB : 9615; --   isub    t0 1
02DC : 0760; --   load    t1 t0
02DD : 2002; -- . imov [str!    .ret_stack_ptr t0]
02DE : 3080; -- | imoh
02DF : 1060; -- ' str
02E0 : A700; --   jmp     t1
02E1 : 261F; -- . imov [imov! t0 .string_alloc_0]
02E2 : 3600; -- ' imoh
02E3 : 5D60; -- . push [push! t0]
02E4 : 26FF; -- . imov [imov! t0 65535]
02E5 : 36FF; -- ' imoh
02E6 : 5D60; --   push t0
02E7 : 66D0; -- . pop [pop! t0]
02E8 : 0660; --   load t0 t0
02E9 : 5D60; -- . push [push! t0]
02EA : 67D0; -- . pop [pop!  t1 t0]
02EB : 66D0; -- ' pop
02EC : 8674; --   add   t0 t1
02ED : 5D60; -- . push [push! t0]
02EE : 66D0; -- . pop [pop! t0]
02EF : 0660; --   load t0 t0
02F0 : 5D60; -- . push [push! t0]
02F1 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02F2 : 3680; -- | imoh
02F3 : 0660; -- ' load
02F4 : 9615; --   isub    t0 1
02F5 : 0760; --   load    t1 t0
02F6 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02F7 : 3080; -- | imoh
02F8 : 1060; -- ' str
02F9 : A700; --   jmp     t1
02FA : 5D00; -- · push r0 [isr!]
02FB : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02FC : 3680; -- | imoh
02FD : 0660; -- ' load
02FE : 2708; -- . imov [imov!   t1 .isr_body_retaddr0]
02FF : 3703; -- ' imoh
0300 : 1670; --   str     t0 t1
0301 : 9614; --   iadd    t0 1
0302 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0303 : 3080; -- | imoh
0304 : 1060; -- ' str
0305 : 20E1; -- . imov [jmp!    .get_keyboard_ascii]
0306 : 3002; -- | imoh
0307 : A000; -- ' j_op
0308 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0309 : 3680; -- | imoh
030A : 0660; -- ' load
030B : 2715; -- . imov [imov!   t1 .isr_body_retaddr1]
030C : 3703; -- ' imoh
030D : 1670; --   str     t0 t1
030E : 9614; --   iadd    t0 1
030F : 2002; -- . imov [str!    .ret_stack_ptr t0]
0310 : 3080; -- | imoh
0311 : 1060; -- ' str
0312 : 2020; -- . imov [jmp!    .print_char]
0313 : 3001; -- | imoh
0314 : A000; -- ' j_op
0315 : 60D0; -- . pop r0 [rti!]
0316 : C000; -- ' rti
0317 : 2601; -- . imov [imov! t0 1]
0318 : 3600; -- ' imoh
0319 : 5D60; --   push t0
031A : 66D0; -- . pop [pop! t0]
031B : 5D60; -- . push [push! t0 t0]
031C : 5D60; -- ' push
031D : 66D0; -- . pop [pop! t0]
031E : 9607; --   tst  t0
031F : 2025; -- . imov [jz!  .main_body_0_while_exit]
0320 : 3003; -- | imoh
0321 : A001; -- ' j_op
0322 : 201A; -- . imov [jmp! .main_body_0_while_eval]
0323 : 3003; -- | imoh
0324 : A000; -- ' j_op
0325 : 66D0; -- . pop [pop! t0]
0326 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0327 : 3680; -- | imoh
0328 : 0660; -- ' load
0329 : 9615; --   isub    t0 1
032A : 0760; --   load    t1 t0
032B : 2002; -- . imov [str!    .ret_stack_ptr t0]
032C : 3080; -- | imoh
032D : 1060; -- ' str
032E : A700; --   jmp     t1
END;