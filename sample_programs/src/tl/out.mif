DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C24; -- . imov [imov!   isr .isr]
0001 : 3C00; -- ' imoh
0002 : 2604; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 20B8; -- . imov [jmp!    .main]
000F : 300A; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 26AD; -- . imov [imov!  t0 57005]
0014 : 36DE; -- ' imoh
0015 : 2000; -- . imov [str!   .variable_alloc_var1 t0]
0016 : 3080; -- | imoh
0017 : 1060; -- ' str
0018 : 2664; -- . imov [imov!  t0 100]
0019 : 3600; -- ' imoh
001A : 2001; -- . imov [str!   .variable_alloc_text_progress t0]
001B : 3080; -- | imoh
001C : 1060; -- ' str
001D : 2600; -- . imov [imov!  t0 0]
001E : 3600; -- ' imoh
001F : 2002; -- . imov [str!   .variable_alloc_text_ptr t0]
0020 : 3080; -- | imoh
0021 : 1060; -- ' str
0022 : 66D0; -- . pop [pop! t0]
0023 : A020; --   jmpr
0024 : 5D00; -- Â· push r0 [isr!]
0025 : 60D0; -- . pop r0 [rti!]
0026 : C000; -- ' rti
0027 : 0030; -- 0x30
0028 : 0020; -- 0x20
0029 : 0078; -- 0x78
002A : 0020; -- 0x20
002B : 0031; -- 0x31
002C : 0030; -- 0x30
002D : 0000; -- 0x0
002E : 0054; -- 0x54
002F : 0065; -- 0x65
0030 : 0073; -- 0x73
0031 : 0074; -- 0x74
0032 : 0069; -- 0x69
0033 : 006E; -- 0x6E
0034 : 0067; -- 0x67
0035 : 0020; -- 0x20
0036 : 0067; -- 0x67
0037 : 006C; -- 0x6C
0038 : 006F; -- 0x6F
0039 : 0062; -- 0x62
003A : 0061; -- 0x61
003B : 006C; -- 0x6C
003C : 0020; -- 0x20
003D : 0076; -- 0x76
003E : 0061; -- 0x61
003F : 0072; -- 0x72
0040 : 0073; -- 0x73
0041 : 000A; -- 0xA
0042 : 0000; -- 0x0
0043 : 0038; -- 0x38
0044 : 0020; -- 0x20
0045 : 003C; -- 0x3C
0046 : 003D; -- 0x3D
0047 : 0020; -- 0x20
0048 : 0037; -- 0x37
0049 : 0000; -- 0x0
004A : 0031; -- 0x31
004B : 0020; -- 0x20
004C : 007C; -- 0x7C
004D : 007C; -- 0x7C
004E : 0020; -- 0x20
004F : 0030; -- 0x30
0050 : 0000; -- 0x0
0051 : 0054; -- 0x54
0052 : 0065; -- 0x65
0053 : 0073; -- 0x73
0054 : 0074; -- 0x74
0055 : 0069; -- 0x69
0056 : 006E; -- 0x6E
0057 : 0067; -- 0x67
0058 : 0020; -- 0x20
0059 : 0073; -- 0x73
005A : 0074; -- 0x74
005B : 0072; -- 0x72
005C : 006C; -- 0x6C
005D : 0065; -- 0x65
005E : 006E; -- 0x6E
005F : 000A; -- 0xA
0060 : 0000; -- 0x0
0061 : 0031; -- 0x31
0062 : 0020; -- 0x20
0063 : 0026; -- 0x26
0064 : 0026; -- 0x26
0065 : 0020; -- 0x20
0066 : 0031; -- 0x31
0067 : 0000; -- 0x0
0068 : 0037; -- 0x37
0069 : 0020; -- 0x20
006A : 003C; -- 0x3C
006B : 0020; -- 0x20
006C : 0037; -- 0x37
006D : 0000; -- 0x0
006E : 0030; -- 0x30
006F : 0020; -- 0x20
0070 : 0026; -- 0x26
0071 : 0026; -- 0x26
0072 : 0020; -- 0x20
0073 : 0031; -- 0x31
0074 : 0000; -- 0x0
0075 : 0073; -- 0x73
0076 : 0074; -- 0x74
0077 : 0072; -- 0x72
0078 : 006C; -- 0x6C
0079 : 0065; -- 0x65
007A : 006E; -- 0x6E
007B : 0028; -- 0x28
007C : 0022; -- 0x22
007D : 0022; -- 0x22
007E : 0029; -- 0x29
007F : 0000; -- 0x0
0080 : 0036; -- 0x36
0081 : 0020; -- 0x20
0082 : 003E; -- 0x3E
0083 : 003D; -- 0x3D
0084 : 0020; -- 0x20
0085 : 0037; -- 0x37
0086 : 0000; -- 0x0
0087 : 0062; -- 0x62
0088 : 0031; -- 0x31
0089 : 0000; -- 0x0
008A : 0054; -- 0x54
008B : 0065; -- 0x65
008C : 0073; -- 0x73
008D : 0074; -- 0x74
008E : 0069; -- 0x69
008F : 006E; -- 0x6E
0090 : 0067; -- 0x67
0091 : 0020; -- 0x20
0092 : 006D; -- 0x6D
0093 : 0075; -- 0x75
0094 : 006C; -- 0x6C
0095 : 000A; -- 0xA
0096 : 0000; -- 0x0
0097 : 0036; -- 0x36
0098 : 0020; -- 0x20
0099 : 003E; -- 0x3E
009A : 0020; -- 0x20
009B : 0037; -- 0x37
009C : 0000; -- 0x0
009D : 0073; -- 0x73
009E : 0074; -- 0x74
009F : 0072; -- 0x72
00A0 : 006C; -- 0x6C
00A1 : 0065; -- 0x65
00A2 : 006E; -- 0x6E
00A3 : 0028; -- 0x28
00A4 : 0022; -- 0x22
00A5 : 0061; -- 0x61
00A6 : 0062; -- 0x62
00A7 : 0063; -- 0x63
00A8 : 0064; -- 0x64
00A9 : 0022; -- 0x22
00AA : 0029; -- 0x29
00AB : 0000; -- 0x0
00AC : 0000; -- 0x0
00AD : 0073; -- 0x73
00AE : 0075; -- 0x75
00AF : 006D; -- 0x6D
00B0 : 0028; -- 0x28
00B1 : 0037; -- 0x37
00B2 : 0029; -- 0x29
00B3 : 0020; -- 0x20
00B4 : 003D; -- 0x3D
00B5 : 003D; -- 0x3D
00B6 : 0020; -- 0x20
00B7 : 0032; -- 0x32
00B8 : 0031; -- 0x31
00B9 : 0000; -- 0x0
00BA : 0054; -- 0x54
00BB : 0065; -- 0x65
00BC : 0073; -- 0x73
00BD : 0074; -- 0x74
00BE : 0069; -- 0x69
00BF : 006E; -- 0x6E
00C0 : 0067; -- 0x67
00C1 : 0020; -- 0x20
00C2 : 006C; -- 0x6C
00C3 : 0065; -- 0x65
00C4 : 0074; -- 0x74
00C5 : 000A; -- 0xA
00C6 : 0000; -- 0x0
00C7 : 0036; -- 0x36
00C8 : 0020; -- 0x20
00C9 : 003C; -- 0x3C
00CA : 003D; -- 0x3D
00CB : 0020; -- 0x20
00CC : 0037; -- 0x37
00CD : 0000; -- 0x0
00CE : 0061; -- 0x61
00CF : 0032; -- 0x32
00D0 : 0000; -- 0x0
00D1 : 0038; -- 0x38
00D2 : 0020; -- 0x20
00D3 : 003E; -- 0x3E
00D4 : 003D; -- 0x3D
00D5 : 0020; -- 0x20
00D6 : 0037; -- 0x37
00D7 : 0000; -- 0x0
00D8 : 0076; -- 0x76
00D9 : 0061; -- 0x61
00DA : 0072; -- 0x72
00DB : 0031; -- 0x31
00DC : 0020; -- 0x20
00DD : 003D; -- 0x3D
00DE : 0020; -- 0x20
00DF : 0031; -- 0x31
00E0 : 0030; -- 0x30
00E1 : 0000; -- 0x0
00E2 : 0032; -- 0x32
00E3 : 0020; -- 0x20
00E4 : 0078; -- 0x78
00E5 : 0020; -- 0x20
00E6 : 0035; -- 0x35
00E7 : 0000; -- 0x0
00E8 : 0054; -- 0x54
00E9 : 0065; -- 0x65
00EA : 0073; -- 0x73
00EB : 0074; -- 0x74
00EC : 0069; -- 0x69
00ED : 006E; -- 0x6E
00EE : 0067; -- 0x67
00EF : 0020; -- 0x20
00F0 : 0053; -- 0x53
00F1 : 0075; -- 0x75
00F2 : 006D; -- 0x6D
00F3 : 000A; -- 0xA
00F4 : 0000; -- 0x0
00F5 : 0030; -- 0x30
00F6 : 0020; -- 0x20
00F7 : 007C; -- 0x7C
00F8 : 007C; -- 0x7C
00F9 : 0020; -- 0x20
00FA : 0030; -- 0x30
00FB : 0000; -- 0x0
00FC : 0038; -- 0x38
00FD : 0020; -- 0x20
00FE : 003C; -- 0x3C
00FF : 0020; -- 0x20
0100 : 0037; -- 0x37
0101 : 0000; -- 0x0
0102 : 0063; -- 0x63
0103 : 0032; -- 0x32
0104 : 0000; -- 0x0
0105 : 0041; -- 0x41
0106 : 0073; -- 0x73
0107 : 0073; -- 0x73
0108 : 0065; -- 0x65
0109 : 0072; -- 0x72
010A : 0074; -- 0x74
010B : 0020; -- 0x20
010C : 0046; -- 0x46
010D : 0061; -- 0x61
010E : 0069; -- 0x69
010F : 006C; -- 0x6C
0110 : 0065; -- 0x65
0111 : 0064; -- 0x64
0112 : 000A; -- 0xA
0113 : 0000; -- 0x0
0114 : 0037; -- 0x37
0115 : 0020; -- 0x20
0116 : 003D; -- 0x3D
0117 : 0020; -- 0x20
0118 : 0037; -- 0x37
0119 : 0000; -- 0x0
011A : 0062; -- 0x62
011B : 0032; -- 0x32
011C : 0000; -- 0x0
011D : 0031; -- 0x31
011E : 0020; -- 0x20
011F : 0078; -- 0x78
0120 : 0020; -- 0x20
0121 : 0032; -- 0x32
0122 : 0000; -- 0x0
0123 : 0037; -- 0x37
0124 : 0020; -- 0x20
0125 : 003E; -- 0x3E
0126 : 0020; -- 0x20
0127 : 0037; -- 0x37
0128 : 0000; -- 0x0
0129 : 0076; -- 0x76
012A : 0061; -- 0x61
012B : 0072; -- 0x72
012C : 0031; -- 0x31
012D : 0020; -- 0x20
012E : 003D; -- 0x3D
012F : 003D; -- 0x3D
0130 : 0020; -- 0x20
0131 : 0030; -- 0x30
0132 : 0078; -- 0x78
0133 : 0044; -- 0x44
0134 : 0045; -- 0x45
0135 : 0041; -- 0x41
0136 : 0044; -- 0x44
0137 : 0000; -- 0x0
0138 : 0050; -- 0x50
0139 : 0061; -- 0x61
013A : 0073; -- 0x73
013B : 0073; -- 0x73
013C : 0065; -- 0x65
013D : 0064; -- 0x64
013E : 0020; -- 0x20
013F : 0041; -- 0x41
0140 : 006C; -- 0x6C
0141 : 006C; -- 0x6C
0142 : 0020; -- 0x20
0143 : 0054; -- 0x54
0144 : 0065; -- 0x65
0145 : 0073; -- 0x73
0146 : 0074; -- 0x74
0147 : 0020; -- 0x20
0148 : 0043; -- 0x43
0149 : 0061; -- 0x61
014A : 0073; -- 0x73
014B : 0065; -- 0x65
014C : 0073; -- 0x73
014D : 0021; -- 0x21
014E : 0000; -- 0x0
014F : 0036; -- 0x36
0150 : 0020; -- 0x20
0151 : 003D; -- 0x3D
0152 : 0020; -- 0x20
0153 : 0037; -- 0x37
0154 : 0000; -- 0x0
0155 : 0037; -- 0x37
0156 : 0020; -- 0x20
0157 : 003E; -- 0x3E
0158 : 003D; -- 0x3D
0159 : 0020; -- 0x20
015A : 0037; -- 0x37
015B : 0000; -- 0x0
015C : 0073; -- 0x73
015D : 0075; -- 0x75
015E : 006D; -- 0x6D
015F : 0028; -- 0x28
0160 : 0032; -- 0x32
0161 : 0032; -- 0x32
0162 : 0029; -- 0x29
0163 : 0020; -- 0x20
0164 : 003D; -- 0x3D
0165 : 003D; -- 0x3D
0166 : 0020; -- 0x20
0167 : 0032; -- 0x32
0168 : 0035; -- 0x35
0169 : 0033; -- 0x33
016A : 0000; -- 0x0
016B : 0054; -- 0x54
016C : 0065; -- 0x65
016D : 0073; -- 0x73
016E : 0074; -- 0x74
016F : 0069; -- 0x69
0170 : 006E; -- 0x6E
0171 : 0067; -- 0x67
0172 : 0020; -- 0x20
0173 : 0041; -- 0x41
0174 : 0072; -- 0x72
0175 : 0069; -- 0x69
0176 : 0074; -- 0x74
0177 : 0068; -- 0x68
0178 : 000A; -- 0xA
0179 : 0000; -- 0x0
017A : 0054; -- 0x54
017B : 0065; -- 0x65
017C : 0073; -- 0x73
017D : 0074; -- 0x74
017E : 0069; -- 0x69
017F : 006E; -- 0x6E
0180 : 0067; -- 0x67
0181 : 0020; -- 0x20
0182 : 004C; -- 0x4C
0183 : 006F; -- 0x6F
0184 : 0067; -- 0x67
0185 : 0069; -- 0x69
0186 : 0063; -- 0x63
0187 : 0061; -- 0x61
0188 : 006C; -- 0x6C
0189 : 000A; -- 0xA
018A : 0000; -- 0x0
018B : 0031; -- 0x31
018C : 0020; -- 0x20
018D : 0021; -- 0x21
018E : 0000; -- 0x0
018F : 0054; -- 0x54
0190 : 0065; -- 0x65
0191 : 0073; -- 0x73
0192 : 0074; -- 0x74
0193 : 0069; -- 0x69
0194 : 006E; -- 0x6E
0195 : 0067; -- 0x67
0196 : 0020; -- 0x20
0197 : 0066; -- 0x66
0198 : 0069; -- 0x69
0199 : 0062; -- 0x62
019A : 0020; -- 0x20
019B : 0073; -- 0x73
019C : 0065; -- 0x65
019D : 0071; -- 0x71
019E : 0075; -- 0x75
019F : 0065; -- 0x65
01A0 : 006E; -- 0x6E
01A1 : 0063; -- 0x63
01A2 : 0065; -- 0x65
01A3 : 0020; -- 0x20
01A4 : 002E; -- 0x2E
01A5 : 002E; -- 0x2E
01A6 : 002E; -- 0x2E
01A7 : 000A; -- 0xA
01A8 : 0000; -- 0x0
01A9 : 0061; -- 0x61
01AA : 0062; -- 0x62
01AB : 0063; -- 0x63
01AC : 0064; -- 0x64
01AD : 0000; -- 0x0
01AE : 0030; -- 0x30
01AF : 0020; -- 0x20
01B0 : 0021; -- 0x21
01B1 : 0000; -- 0x0
01B2 : 0031; -- 0x31
01B3 : 0030; -- 0x30
01B4 : 0020; -- 0x20
01B5 : 0078; -- 0x78
01B6 : 0020; -- 0x20
01B7 : 0030; -- 0x30
01B8 : 0000; -- 0x0
01B9 : 0038; -- 0x38
01BA : 0020; -- 0x20
01BB : 003E; -- 0x3E
01BC : 0020; -- 0x20
01BD : 0037; -- 0x37
01BE : 0000; -- 0x0
01BF : 0037; -- 0x37
01C0 : 0020; -- 0x20
01C1 : 003C; -- 0x3C
01C2 : 003D; -- 0x3D
01C3 : 0020; -- 0x20
01C4 : 0037; -- 0x37
01C5 : 0000; -- 0x0
01C6 : 0036; -- 0x36
01C7 : 0020; -- 0x20
01C8 : 003C; -- 0x3C
01C9 : 0020; -- 0x20
01CA : 0037; -- 0x37
01CB : 0000; -- 0x0
01CC : 0061; -- 0x61
01CD : 0031; -- 0x31
01CE : 0000; -- 0x0
01CF : 0048; -- 0x48
01D0 : 0065; -- 0x65
01D1 : 006C; -- 0x6C
01D2 : 006C; -- 0x6C
01D3 : 006F; -- 0x6F
01D4 : 0020; -- 0x20
01D5 : 0066; -- 0x66
01D6 : 0072; -- 0x72
01D7 : 006F; -- 0x6F
01D8 : 006D; -- 0x6D
01D9 : 0020; -- 0x20
01DA : 0054; -- 0x54
01DB : 006F; -- 0x6F
01DC : 0061; -- 0x61
01DD : 0073; -- 0x73
01DE : 0074; -- 0x74
01DF : 004C; -- 0x4C
01E0 : 0061; -- 0x61
01E1 : 006E; -- 0x6E
01E2 : 0067; -- 0x67
01E3 : 0021; -- 0x21
01E4 : 000A; -- 0xA
01E5 : 000A; -- 0xA
01E6 : 0000; -- 0x0
01E7 : 0031; -- 0x31
01E8 : 0031; -- 0x31
01E9 : 0000; -- 0x0
01EA : 66D0; -- . pop [pop! t0]
01EB : 5D60; -- . push [push! t0 t0]
01EC : 5D60; -- ' push
01ED : 260A; -- . imov [imov! t0 10]
01EE : 3600; -- ' imoh
01EF : 5D60; --   push t0
01F0 : 67D0; -- . pop [pop! t1 t0]
01F1 : 66D0; -- ' pop
01F2 : 2801; --   imov t2 1  # default value
01F3 : 8675; --   sub  t0 t1
01F4 : 20F8; -- . imov [jz!  .pc_body_0_opskip]
01F5 : 3001; -- | imoh
01F6 : A001; -- ' j_op
01F7 : 2800; --   imov t2 0
01F8 : 5D80; -- . push [push! t2]
01F9 : 66D0; -- . pop [pop! t0]
01FA : 9607; --   tst  t0
01FB : 2021; -- . imov [jz!  .pc_body_1_else]
01FC : 3002; -- | imoh
01FD : A001; -- ' j_op
01FE : 66D0; -- . pop [pop! t0]
01FF : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0200 : 3680; -- ' imoh
0201 : 5D60; -- . push [push! t0]
0202 : 66D0; -- . pop [pop! t0]
0203 : 0660; --   load t0 t0
0204 : 5D60; -- . push [push! t0]
0205 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0206 : 3680; -- ' imoh
0207 : 5D60; -- . push [push! t0]
0208 : 66D0; -- . pop [pop! t0]
0209 : 0660; --   load t0 t0
020A : 5D60; -- . push [push! t0]
020B : 67D0; -- . pop [pop!  t1 t0]
020C : 66D0; -- ' pop
020D : 8674; --   add   t0 t1
020E : 5D60; -- . push [push! t0]
020F : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0210 : 3680; -- ' imoh
0211 : 5D60; -- . push [push! t0]
0212 : 67D0; -- . pop [pop! t1 t0]
0213 : 66D0; -- ' pop
0214 : 1760; --   str  t1 t0
0215 : 2664; -- . imov [imov! t0 100]
0216 : 3600; -- ' imoh
0217 : 5D60; --   push t0
0218 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0219 : 3680; -- ' imoh
021A : 5D60; -- . push [push! t0]
021B : 67D0; -- . pop [pop! t1 t0]
021C : 66D0; -- ' pop
021D : 1760; --   str  t1 t0
021E : 2075; -- . imov [jmp! .pc_body_1_if_exit]
021F : 3002; -- | imoh
0220 : A000; -- ' j_op
0221 : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0222 : 3680; -- ' imoh
0223 : 5D60; -- . push [push! t0]
0224 : 66D0; -- . pop [pop! t0]
0225 : 0660; --   load t0 t0
0226 : 5D60; -- . push [push! t0]
0227 : 66D0; -- . pop [pop! t0 t1]
0228 : 67D0; -- ' pop
0229 : 5D60; -- . push [push! t0 t1]
022A : 5D70; -- ' push
022B : 2600; -- . imov [imov! t0 14336]
022C : 3638; -- ' imoh
022D : 5D60; --   push t0
022E : 67D0; -- . pop [pop!  t1 t0]
022F : 66D0; -- ' pop
0230 : 8672; --   or    t0 t1
0231 : 5D60; -- . push [push! t0]
0232 : 66D0; -- . pop [pop! t0 t1]
0233 : 67D0; -- ' pop
0234 : 5D70; -- . push [push! t1 t0 t1]
0235 : 5D60; -- | push
0236 : 5D70; -- ' push
0237 : 67D0; -- . pop [pop! t1 t0]
0238 : 66D0; -- ' pop
0239 : 1760; --   str  t1 t0
023A : 2601; -- . imov [imov! t0 1]
023B : 3600; -- ' imoh
023C : 5D60; --   push t0
023D : 67D0; -- . pop [pop!  t1 t0]
023E : 66D0; -- ' pop
023F : 8674; --   add   t0 t1
0240 : 5D60; -- . push [push! t0]
0241 : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0242 : 3680; -- ' imoh
0243 : 5D60; -- . push [push! t0]
0244 : 67D0; -- . pop [pop! t1 t0]
0245 : 66D0; -- ' pop
0246 : 1760; --   str  t1 t0
0247 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0248 : 3680; -- ' imoh
0249 : 5D60; -- . push [push! t0]
024A : 66D0; -- . pop [pop! t0]
024B : 0660; --   load t0 t0
024C : 5D60; -- . push [push! t0]
024D : 2601; -- . imov [imov! t0 1]
024E : 3600; -- ' imoh
024F : 5D60; --   push t0
0250 : 67D0; -- . pop [pop!  t1 t0]
0251 : 66D0; -- ' pop
0252 : 8675; --   sub   t0 t1
0253 : 5D60; -- . push [push! t0]
0254 : 66D0; -- . pop [pop! t0]
0255 : 5D60; -- . push [push! t0 t0]
0256 : 5D60; -- ' push
0257 : 2600; -- . imov [imov! t0 0]
0258 : 3600; -- ' imoh
0259 : 5D60; --   push t0
025A : 67D0; -- . pop [pop! t1 t0]
025B : 66D0; -- ' pop
025C : 2801; --   imov t2 1  # default value
025D : 8675; --   sub  t0 t1
025E : 2062; -- . imov [jz!  .pc_body_1_else_0_opskip]
025F : 3002; -- | imoh
0260 : A001; -- ' j_op
0261 : 2800; --   imov t2 0
0262 : 5D80; -- . push [push! t2]
0263 : 66D0; -- . pop [pop! t0]
0264 : 9607; --   tst  t0
0265 : 206F; -- . imov [jz!  .pc_body_1_else_1_else]
0266 : 3002; -- | imoh
0267 : A001; -- ' j_op
0268 : 66D0; -- . pop [pop! t0]
0269 : 2664; -- . imov [imov! t0 100]
026A : 3600; -- ' imoh
026B : 5D60; --   push t0
026C : 206F; -- . imov [jmp! .pc_body_1_else_1_if_exit]
026D : 3002; -- | imoh
026E : A000; -- ' j_op
026F : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0270 : 3680; -- ' imoh
0271 : 5D60; -- . push [push! t0]
0272 : 67D0; -- . pop [pop! t1 t0]
0273 : 66D0; -- ' pop
0274 : 1760; --   str  t1 t0
0275 : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0276 : 3680; -- ' imoh
0277 : 5D60; -- . push [push! t0]
0278 : 66D0; -- . pop [pop! t0]
0279 : 0660; --   load t0 t0
027A : 5D60; -- . push [push! t0]
027B : 2670; -- . imov [imov! t0 6000]
027C : 3617; -- ' imoh
027D : 5D60; --   push t0
027E : 67D0; -- . pop [pop! t1 t0]
027F : 66D0; -- ' pop
0280 : 2800; --   imov t2 0  # default value
0281 : 8675; --   sub  t0 t1
0282 : 2086; -- . imov [jn!  .pc_body_2_opskip]
0283 : 3002; -- | imoh
0284 : A003; -- ' j_op
0285 : 2801; --   imov t2 1
0286 : 5D80; -- . push [push! t2]
0287 : 66D0; -- . pop [pop! t0]
0288 : 9607; --   tst  t0
0289 : 20A1; -- . imov [jz!  .pc_body_3_else]
028A : 3002; -- | imoh
028B : A001; -- ' j_op
028C : 2600; -- . imov [imov! t0 0]
028D : 3600; -- ' imoh
028E : 5D60; --   push t0
028F : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0290 : 3680; -- ' imoh
0291 : 5D60; -- . push [push! t0]
0292 : 67D0; -- . pop [pop! t1 t0]
0293 : 66D0; -- ' pop
0294 : 1760; --   str  t1 t0
0295 : 2664; -- . imov [imov! t0 100]
0296 : 3600; -- ' imoh
0297 : 5D60; --   push t0
0298 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0299 : 3680; -- ' imoh
029A : 5D60; -- . push [push! t0]
029B : 67D0; -- . pop [pop! t1 t0]
029C : 66D0; -- ' pop
029D : 1760; --   str  t1 t0
029E : 20A1; -- . imov [jmp! .pc_body_3_if_exit]
029F : 3002; -- | imoh
02A0 : A000; -- ' j_op
02A1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02A2 : 3680; -- | imoh
02A3 : 0660; -- ' load
02A4 : 9615; --   isub    t0 1
02A5 : 0760; --   load    t1 t0
02A6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
02A7 : 3080; -- | imoh
02A8 : 1060; -- ' str
02A9 : A700; --   jmp     t1
02AA : 66D0; -- . pop [pop! t0]
02AB : 9607; --   tst  t0
02AC : 20B2; -- . imov [jz!  .assert_body_0_else]
02AD : 3002; -- | imoh
02AE : A001; -- ' j_op
02AF : 20E3; -- . imov [jmp! .assert_body_0_if_exit]
02B0 : 3002; -- | imoh
02B1 : A000; -- ' j_op
02B2 : 66D0; -- . pop [pop! t0]
02B3 : 5D60; -- . push [push! t0 t0]
02B4 : 5D60; -- ' push
02B5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02B6 : 3680; -- | imoh
02B7 : 0660; -- ' load
02B8 : 27C2; -- . imov [imov!   t1 .assert_body_0_else_retaddr0]
02B9 : 3702; -- ' imoh
02BA : 1670; --   str     t0 t1
02BB : 9614; --   iadd    t0 1
02BC : 2003; -- . imov [str!    .ret_stack_ptr t0]
02BD : 3080; -- | imoh
02BE : 1060; -- ' str
02BF : 2009; -- . imov [jmp!    .ps]
02C0 : 300C; -- | imoh
02C1 : A000; -- ' j_op
02C2 : 2620; -- . imov [imov! t0 32]
02C3 : 3600; -- ' imoh
02C4 : 5D60; --   push t0
02C5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02C6 : 3680; -- | imoh
02C7 : 0660; -- ' load
02C8 : 27D2; -- . imov [imov!   t1 .assert_body_0_else_retaddr1]
02C9 : 3702; -- ' imoh
02CA : 1670; --   str     t0 t1
02CB : 9614; --   iadd    t0 1
02CC : 2003; -- . imov [str!    .ret_stack_ptr t0]
02CD : 3080; -- | imoh
02CE : 1060; -- ' str
02CF : 20EA; -- . imov [jmp!    .pc]
02D0 : 3001; -- | imoh
02D1 : A000; -- ' j_op
02D2 : 2605; -- . imov [imov! t0 .string_alloc_0]
02D3 : 3601; -- ' imoh
02D4 : 5D60; -- . push [push! t0]
02D5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02D6 : 3680; -- | imoh
02D7 : 0660; -- ' load
02D8 : 27E2; -- . imov [imov!   t1 .assert_body_0_else_retaddr2]
02D9 : 3702; -- ' imoh
02DA : 1670; --   str     t0 t1
02DB : 9614; --   iadd    t0 1
02DC : 2003; -- . imov [str!    .ret_stack_ptr t0]
02DD : 3080; -- | imoh
02DE : 1060; -- ' str
02DF : 2009; -- . imov [jmp!    .ps]
02E0 : 300C; -- | imoh
02E1 : A000; -- ' j_op
02E2 : 7000; --   halt
02E3 : 66D0; -- . pop [pop! t0]
02E4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02E5 : 3680; -- | imoh
02E6 : 0660; -- ' load
02E7 : 9615; --   isub    t0 1
02E8 : 0760; --   load    t1 t0
02E9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
02EA : 3080; -- | imoh
02EB : 1060; -- ' str
02EC : A700; --   jmp     t1
02ED : 2600; -- . imov [imov! t0 0]
02EE : 3600; -- ' imoh
02EF : 5D60; --   push t0
02F0 : 66D0; -- . pop [pop! t0 t1]
02F1 : 67D0; -- ' pop
02F2 : 5D60; -- . push [push! t0 t1]
02F3 : 5D70; -- ' push
02F4 : 66D0; -- . pop [pop! t0]
02F5 : 5D60; -- . push [push! t0 t0]
02F6 : 5D60; -- ' push
02F7 : 66D0; -- . pop [pop! t0]
02F8 : 9607; --   tst  t0
02F9 : 2017; -- . imov [jz!  .sum_body_0_while_exit]
02FA : 3003; -- | imoh
02FB : A001; -- ' j_op
02FC : 66D0; -- . pop [pop! t0 t1]
02FD : 67D0; -- ' pop
02FE : 5D60; -- . push [push! t0 t1]
02FF : 5D70; -- ' push
0300 : 66D0; -- . pop [pop! t0 t1]
0301 : 67D0; -- ' pop
0302 : 5D70; -- . push [push! t1 t0 t1]
0303 : 5D60; -- | push
0304 : 5D70; -- ' push
0305 : 67D0; -- . pop [pop!  t1 t0]
0306 : 66D0; -- ' pop
0307 : 8674; --   add   t0 t1
0308 : 5D60; -- . push [push! t0]
0309 : 66D0; -- . pop [pop! t0 t1]
030A : 67D0; -- ' pop
030B : 5D60; -- . push [push! t0 t1]
030C : 5D70; -- ' push
030D : 2601; -- . imov [imov! t0 1]
030E : 3600; -- ' imoh
030F : 5D60; --   push t0
0310 : 67D0; -- . pop [pop!  t1 t0]
0311 : 66D0; -- ' pop
0312 : 8675; --   sub   t0 t1
0313 : 5D60; -- . push [push! t0]
0314 : 20F4; -- . imov [jmp! .sum_body_0_while_eval]
0315 : 3002; -- | imoh
0316 : A000; -- ' j_op
0317 : 66D0; -- . pop [pop! t0]
0318 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0319 : 3680; -- | imoh
031A : 0660; -- ' load
031B : 9615; --   isub    t0 1
031C : 0760; --   load    t1 t0
031D : 2003; -- . imov [str!    .ret_stack_ptr t0]
031E : 3080; -- | imoh
031F : 1060; -- ' str
0320 : A700; --   jmp     t1
0321 : 2600; -- . imov [imov! t0 0]
0322 : 3600; -- ' imoh
0323 : 5D60; --   push t0
0324 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0325 : 3680; -- | imoh
0326 : 0660; -- ' load
0327 : 67D0; -- . pop [pop!    t1]
0328 : 1670; --   str     t0 t1
0329 : 9614; --   iadd    t0 1
032A : 67D0; -- . pop [pop!    t1]
032B : 1670; --   str     t0 t1
032C : 9614; --   iadd    t0 1
032D : 67D0; -- . pop [pop!    t1]
032E : 1670; --   str     t0 t1
032F : 9614; --   iadd    t0 1
0330 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0331 : 3080; -- | imoh
0332 : 1060; -- ' str
0333 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0334 : 3680; -- | imoh
0335 : 0660; -- ' load
0336 : 2702; -- . imov [imov!   t1 2]
0337 : 3700; -- ' imoh
0338 : 8675; --   sub     t0 t1
0339 : 5D60; -- . push [push!   t0]
033A : 66D0; -- . pop [pop! t0]
033B : 0660; --   load t0 t0
033C : 5D60; -- . push [push! t0]
033D : 66D0; -- . pop [pop! t0]
033E : 9607; --   tst  t0
033F : 2082; -- . imov [jz!  .mul_body_0_let_block_0_while_exit]
0340 : 3003; -- | imoh
0341 : A001; -- ' j_op
0342 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0343 : 3680; -- | imoh
0344 : 0660; -- ' load
0345 : 2703; -- . imov [imov!   t1 3]
0346 : 3700; -- ' imoh
0347 : 8675; --   sub     t0 t1
0348 : 5D60; -- . push [push!   t0]
0349 : 66D0; -- . pop [pop! t0]
034A : 0660; --   load t0 t0
034B : 5D60; -- . push [push! t0]
034C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
034D : 3680; -- | imoh
034E : 0660; -- ' load
034F : 2701; -- . imov [imov!   t1 1]
0350 : 3700; -- ' imoh
0351 : 8675; --   sub     t0 t1
0352 : 5D60; -- . push [push!   t0]
0353 : 66D0; -- . pop [pop! t0]
0354 : 0660; --   load t0 t0
0355 : 5D60; -- . push [push! t0]
0356 : 67D0; -- . pop [pop!  t1 t0]
0357 : 66D0; -- ' pop
0358 : 8674; --   add   t0 t1
0359 : 5D60; -- . push [push! t0]
035A : 2603; -- . imov [load!   t0 .ret_stack_ptr]
035B : 3680; -- | imoh
035C : 0660; -- ' load
035D : 2703; -- . imov [imov!   t1 3]
035E : 3700; -- ' imoh
035F : 8675; --   sub     t0 t1
0360 : 5D60; -- . push [push!   t0]
0361 : 67D0; -- . pop [pop! t1 t0]
0362 : 66D0; -- ' pop
0363 : 1760; --   str  t1 t0
0364 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0365 : 3680; -- | imoh
0366 : 0660; -- ' load
0367 : 2702; -- . imov [imov!   t1 2]
0368 : 3700; -- ' imoh
0369 : 8675; --   sub     t0 t1
036A : 5D60; -- . push [push!   t0]
036B : 66D0; -- . pop [pop! t0]
036C : 0660; --   load t0 t0
036D : 5D60; -- . push [push! t0]
036E : 2601; -- . imov [imov! t0 1]
036F : 3600; -- ' imoh
0370 : 5D60; --   push t0
0371 : 67D0; -- . pop [pop!  t1 t0]
0372 : 66D0; -- ' pop
0373 : 8675; --   sub   t0 t1
0374 : 5D60; -- . push [push! t0]
0375 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0376 : 3680; -- | imoh
0377 : 0660; -- ' load
0378 : 2702; -- . imov [imov!   t1 2]
0379 : 3700; -- ' imoh
037A : 8675; --   sub     t0 t1
037B : 5D60; -- . push [push!   t0]
037C : 67D0; -- . pop [pop! t1 t0]
037D : 66D0; -- ' pop
037E : 1760; --   str  t1 t0
037F : 2033; -- . imov [jmp! .mul_body_0_let_block_0_while_eval]
0380 : 3003; -- | imoh
0381 : A000; -- ' j_op
0382 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0383 : 3680; -- | imoh
0384 : 0660; -- ' load
0385 : 2703; -- . imov [imov!   t1 3]
0386 : 3700; -- ' imoh
0387 : 8675; --   sub     t0 t1
0388 : 5D60; -- . push [push!   t0]
0389 : 66D0; -- . pop [pop! t0]
038A : 0660; --   load t0 t0
038B : 5D60; -- . push [push! t0]
038C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
038D : 3680; -- | imoh
038E : 0660; -- ' load
038F : 2703; -- . imov [imov!   t1 3]
0390 : 3700; -- ' imoh
0391 : 8675; --   sub     t0 t1
0392 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0393 : 3080; -- | imoh
0394 : 1060; -- ' str
0395 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0396 : 3680; -- | imoh
0397 : 0660; -- ' load
0398 : 9615; --   isub    t0 1
0399 : 0760; --   load    t1 t0
039A : 2003; -- . imov [str!    .ret_stack_ptr t0]
039B : 3080; -- | imoh
039C : 1060; -- ' str
039D : A700; --   jmp     t1
039E : 26E8; -- . imov [imov! t0 .string_alloc_1]
039F : 3600; -- ' imoh
03A0 : 5D60; -- . push [push! t0]
03A1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03A2 : 3680; -- | imoh
03A3 : 0660; -- ' load
03A4 : 27AE; -- . imov [imov!   t1 .test_sum_body_retaddr0]
03A5 : 3703; -- ' imoh
03A6 : 1670; --   str     t0 t1
03A7 : 9614; --   iadd    t0 1
03A8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
03A9 : 3080; -- | imoh
03AA : 1060; -- ' str
03AB : 2009; -- . imov [jmp!    .ps]
03AC : 300C; -- | imoh
03AD : A000; -- ' j_op
03AE : 26AD; -- . imov [imov! t0 .string_alloc_2]
03AF : 3600; -- ' imoh
03B0 : 5D60; -- . push [push! t0]
03B1 : 2607; -- . imov [imov! t0 7]
03B2 : 3600; -- ' imoh
03B3 : 5D60; --   push t0
03B4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03B5 : 3680; -- | imoh
03B6 : 0660; -- ' load
03B7 : 27C1; -- . imov [imov!   t1 .test_sum_body_0_retaddr0]
03B8 : 3703; -- ' imoh
03B9 : 1670; --   str     t0 t1
03BA : 9614; --   iadd    t0 1
03BB : 2003; -- . imov [str!    .ret_stack_ptr t0]
03BC : 3080; -- | imoh
03BD : 1060; -- ' str
03BE : 20ED; -- . imov [jmp!    .sum]
03BF : 3002; -- | imoh
03C0 : A000; -- ' j_op
03C1 : 261C; -- . imov [imov! t0 28]
03C2 : 3600; -- ' imoh
03C3 : 5D60; --   push t0
03C4 : 67D0; -- . pop [pop!  t1 t0]
03C5 : 66D0; -- ' pop
03C6 : 8675; --   sub   t0 t1
03C7 : 5D60; -- . push [push! t0]
03C8 : 2600; -- . imov [imov! t0 0]
03C9 : 3600; -- ' imoh
03CA : 5D60; --   push t0
03CB : 67D0; -- . pop [pop! t1 t0]
03CC : 66D0; -- ' pop
03CD : 2801; --   imov t2 1  # default value
03CE : 8675; --   sub  t0 t1
03CF : 20D3; -- . imov [jz!  .test_sum_body_0_0_opskip]
03D0 : 3003; -- | imoh
03D1 : A001; -- ' j_op
03D2 : 2800; --   imov t2 0
03D3 : 5D80; -- . push [push! t2]
03D4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03D5 : 3680; -- | imoh
03D6 : 0660; -- ' load
03D7 : 27E1; -- . imov [imov!   t1 .test_sum_body_retaddr1]
03D8 : 3703; -- ' imoh
03D9 : 1670; --   str     t0 t1
03DA : 9614; --   iadd    t0 1
03DB : 2003; -- . imov [str!    .ret_stack_ptr t0]
03DC : 3080; -- | imoh
03DD : 1060; -- ' str
03DE : 20AA; -- . imov [jmp!    .assert]
03DF : 3002; -- | imoh
03E0 : A000; -- ' j_op
03E1 : 265C; -- . imov [imov! t0 .string_alloc_3]
03E2 : 3601; -- ' imoh
03E3 : 5D60; -- . push [push! t0]
03E4 : 2616; -- . imov [imov! t0 22]
03E5 : 3600; -- ' imoh
03E6 : 5D60; --   push t0
03E7 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03E8 : 3680; -- | imoh
03E9 : 0660; -- ' load
03EA : 27F4; -- . imov [imov!   t1 .test_sum_body_1_retaddr0]
03EB : 3703; -- ' imoh
03EC : 1670; --   str     t0 t1
03ED : 9614; --   iadd    t0 1
03EE : 2003; -- . imov [str!    .ret_stack_ptr t0]
03EF : 3080; -- | imoh
03F0 : 1060; -- ' str
03F1 : 20ED; -- . imov [jmp!    .sum]
03F2 : 3002; -- | imoh
03F3 : A000; -- ' j_op
03F4 : 26FD; -- . imov [imov! t0 253]
03F5 : 3600; -- ' imoh
03F6 : 5D60; --   push t0
03F7 : 67D0; -- . pop [pop!  t1 t0]
03F8 : 66D0; -- ' pop
03F9 : 8675; --   sub   t0 t1
03FA : 5D60; -- . push [push! t0]
03FB : 2600; -- . imov [imov! t0 0]
03FC : 3600; -- ' imoh
03FD : 5D60; --   push t0
03FE : 67D0; -- . pop [pop! t1 t0]
03FF : 66D0; -- ' pop
0400 : 2801; --   imov t2 1  # default value
0401 : 8675; --   sub  t0 t1
0402 : 2006; -- . imov [jz!  .test_sum_body_1_0_opskip]
0403 : 3004; -- | imoh
0404 : A001; -- ' j_op
0405 : 2800; --   imov t2 0
0406 : 5D80; -- . push [push! t2]
0407 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0408 : 3680; -- | imoh
0409 : 0660; -- ' load
040A : 2714; -- . imov [imov!   t1 .test_sum_body_retaddr2]
040B : 3704; -- ' imoh
040C : 1670; --   str     t0 t1
040D : 9614; --   iadd    t0 1
040E : 2003; -- . imov [str!    .ret_stack_ptr t0]
040F : 3080; -- | imoh
0410 : 1060; -- ' str
0411 : 20AA; -- . imov [jmp!    .assert]
0412 : 3002; -- | imoh
0413 : A000; -- ' j_op
0414 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0415 : 3680; -- | imoh
0416 : 0660; -- ' load
0417 : 9615; --   isub    t0 1
0418 : 0760; --   load    t1 t0
0419 : 2003; -- . imov [str!    .ret_stack_ptr t0]
041A : 3080; -- | imoh
041B : 1060; -- ' str
041C : A700; --   jmp     t1
041D : 266B; -- . imov [imov! t0 .string_alloc_4]
041E : 3601; -- ' imoh
041F : 5D60; -- . push [push! t0]
0420 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0421 : 3680; -- | imoh
0422 : 0660; -- ' load
0423 : 272D; -- . imov [imov!   t1 .test_arith_body_retaddr0]
0424 : 3704; -- ' imoh
0425 : 1670; --   str     t0 t1
0426 : 9614; --   iadd    t0 1
0427 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0428 : 3080; -- | imoh
0429 : 1060; -- ' str
042A : 2009; -- . imov [jmp!    .ps]
042B : 300C; -- | imoh
042C : A000; -- ' j_op
042D : 2614; -- . imov [imov! t0 .string_alloc_5]
042E : 3601; -- ' imoh
042F : 5D60; -- . push [push! t0]
0430 : 2607; -- . imov [imov! t0 7]
0431 : 3600; -- ' imoh
0432 : 5D60; --   push t0
0433 : 2607; -- . imov [imov! t0 7]
0434 : 3600; -- ' imoh
0435 : 5D60; --   push t0
0436 : 67D0; -- . pop [pop! t1 t0]
0437 : 66D0; -- ' pop
0438 : 2801; --   imov t2 1  # default value
0439 : 8675; --   sub  t0 t1
043A : 203E; -- . imov [jz!  .test_arith_body_0_0_opskip]
043B : 3004; -- | imoh
043C : A001; -- ' j_op
043D : 2800; --   imov t2 0
043E : 5D80; -- . push [push! t2]
043F : 2601; -- . imov [imov! t0 1]
0440 : 3600; -- ' imoh
0441 : 5D60; --   push t0
0442 : 67D0; -- . pop [pop! t1 t0]
0443 : 66D0; -- ' pop
0444 : 2801; --   imov t2 1  # default value
0445 : 8675; --   sub  t0 t1
0446 : 204A; -- . imov [jz!  .test_arith_body_0_1_opskip]
0447 : 3004; -- | imoh
0448 : A001; -- ' j_op
0449 : 2800; --   imov t2 0
044A : 5D80; -- . push [push! t2]
044B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
044C : 3680; -- | imoh
044D : 0660; -- ' load
044E : 2758; -- . imov [imov!   t1 .test_arith_body_retaddr1]
044F : 3704; -- ' imoh
0450 : 1670; --   str     t0 t1
0451 : 9614; --   iadd    t0 1
0452 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0453 : 3080; -- | imoh
0454 : 1060; -- ' str
0455 : 20AA; -- . imov [jmp!    .assert]
0456 : 3002; -- | imoh
0457 : A000; -- ' j_op
0458 : 264F; -- . imov [imov! t0 .string_alloc_6]
0459 : 3601; -- ' imoh
045A : 5D60; -- . push [push! t0]
045B : 2606; -- . imov [imov! t0 6]
045C : 3600; -- ' imoh
045D : 5D60; --   push t0
045E : 2607; -- . imov [imov! t0 7]
045F : 3600; -- ' imoh
0460 : 5D60; --   push t0
0461 : 67D0; -- . pop [pop! t1 t0]
0462 : 66D0; -- ' pop
0463 : 2801; --   imov t2 1  # default value
0464 : 8675; --   sub  t0 t1
0465 : 2069; -- . imov [jz!  .test_arith_body_1_0_opskip]
0466 : 3004; -- | imoh
0467 : A001; -- ' j_op
0468 : 2800; --   imov t2 0
0469 : 5D80; -- . push [push! t2]
046A : 2600; -- . imov [imov! t0 0]
046B : 3600; -- ' imoh
046C : 5D60; --   push t0
046D : 67D0; -- . pop [pop! t1 t0]
046E : 66D0; -- ' pop
046F : 2801; --   imov t2 1  # default value
0470 : 8675; --   sub  t0 t1
0471 : 2075; -- . imov [jz!  .test_arith_body_1_1_opskip]
0472 : 3004; -- | imoh
0473 : A001; -- ' j_op
0474 : 2800; --   imov t2 0
0475 : 5D80; -- . push [push! t2]
0476 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0477 : 3680; -- | imoh
0478 : 0660; -- ' load
0479 : 2783; -- . imov [imov!   t1 .test_arith_body_retaddr2]
047A : 3704; -- ' imoh
047B : 1670; --   str     t0 t1
047C : 9614; --   iadd    t0 1
047D : 2003; -- . imov [str!    .ret_stack_ptr t0]
047E : 3080; -- | imoh
047F : 1060; -- ' str
0480 : 20AA; -- . imov [jmp!    .assert]
0481 : 3002; -- | imoh
0482 : A000; -- ' j_op
0483 : 2697; -- . imov [imov! t0 .string_alloc_7]
0484 : 3600; -- ' imoh
0485 : 5D60; -- . push [push! t0]
0486 : 2606; -- . imov [imov! t0 6]
0487 : 3600; -- ' imoh
0488 : 5D60; --   push t0
0489 : 2607; -- . imov [imov! t0 7]
048A : 3600; -- ' imoh
048B : 5D60; --   push t0
048C : 67D0; -- . pop [pop! t1 t0]
048D : 66D0; -- ' pop
048E : 2801; --   imov t2 1  # default value
048F : 8675; --   sub  t0 t1
0490 : 2094; -- . imov [jp!  .test_arith_body_2_0_opskip]
0491 : 3004; -- | imoh
0492 : A004; -- ' j_op
0493 : 2800; --   imov t2 0
0494 : 5D80; -- . push [push! t2]
0495 : 2600; -- . imov [imov! t0 0]
0496 : 3600; -- ' imoh
0497 : 5D60; --   push t0
0498 : 67D0; -- . pop [pop! t1 t0]
0499 : 66D0; -- ' pop
049A : 2801; --   imov t2 1  # default value
049B : 8675; --   sub  t0 t1
049C : 20A0; -- . imov [jz!  .test_arith_body_2_1_opskip]
049D : 3004; -- | imoh
049E : A001; -- ' j_op
049F : 2800; --   imov t2 0
04A0 : 5D80; -- . push [push! t2]
04A1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04A2 : 3680; -- | imoh
04A3 : 0660; -- ' load
04A4 : 27AE; -- . imov [imov!   t1 .test_arith_body_retaddr3]
04A5 : 3704; -- ' imoh
04A6 : 1670; --   str     t0 t1
04A7 : 9614; --   iadd    t0 1
04A8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
04A9 : 3080; -- | imoh
04AA : 1060; -- ' str
04AB : 20AA; -- . imov [jmp!    .assert]
04AC : 3002; -- | imoh
04AD : A000; -- ' j_op
04AE : 2623; -- . imov [imov! t0 .string_alloc_8]
04AF : 3601; -- ' imoh
04B0 : 5D60; -- . push [push! t0]
04B1 : 2607; -- . imov [imov! t0 7]
04B2 : 3600; -- ' imoh
04B3 : 5D60; --   push t0
04B4 : 2607; -- . imov [imov! t0 7]
04B5 : 3600; -- ' imoh
04B6 : 5D60; --   push t0
04B7 : 67D0; -- . pop [pop! t1 t0]
04B8 : 66D0; -- ' pop
04B9 : 2801; --   imov t2 1  # default value
04BA : 8675; --   sub  t0 t1
04BB : 20BF; -- . imov [jp!  .test_arith_body_3_0_opskip]
04BC : 3004; -- | imoh
04BD : A004; -- ' j_op
04BE : 2800; --   imov t2 0
04BF : 5D80; -- . push [push! t2]
04C0 : 2600; -- . imov [imov! t0 0]
04C1 : 3600; -- ' imoh
04C2 : 5D60; --   push t0
04C3 : 67D0; -- . pop [pop! t1 t0]
04C4 : 66D0; -- ' pop
04C5 : 2801; --   imov t2 1  # default value
04C6 : 8675; --   sub  t0 t1
04C7 : 20CB; -- . imov [jz!  .test_arith_body_3_1_opskip]
04C8 : 3004; -- | imoh
04C9 : A001; -- ' j_op
04CA : 2800; --   imov t2 0
04CB : 5D80; -- . push [push! t2]
04CC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04CD : 3680; -- | imoh
04CE : 0660; -- ' load
04CF : 27D9; -- . imov [imov!   t1 .test_arith_body_retaddr4]
04D0 : 3704; -- ' imoh
04D1 : 1670; --   str     t0 t1
04D2 : 9614; --   iadd    t0 1
04D3 : 2003; -- . imov [str!    .ret_stack_ptr t0]
04D4 : 3080; -- | imoh
04D5 : 1060; -- ' str
04D6 : 20AA; -- . imov [jmp!    .assert]
04D7 : 3002; -- | imoh
04D8 : A000; -- ' j_op
04D9 : 26B9; -- . imov [imov! t0 .string_alloc_9]
04DA : 3601; -- ' imoh
04DB : 5D60; -- . push [push! t0]
04DC : 2608; -- . imov [imov! t0 8]
04DD : 3600; -- ' imoh
04DE : 5D60; --   push t0
04DF : 2607; -- . imov [imov! t0 7]
04E0 : 3600; -- ' imoh
04E1 : 5D60; --   push t0
04E2 : 67D0; -- . pop [pop! t1 t0]
04E3 : 66D0; -- ' pop
04E4 : 2801; --   imov t2 1  # default value
04E5 : 8675; --   sub  t0 t1
04E6 : 20EA; -- . imov [jp!  .test_arith_body_4_0_opskip]
04E7 : 3004; -- | imoh
04E8 : A004; -- ' j_op
04E9 : 2800; --   imov t2 0
04EA : 5D80; -- . push [push! t2]
04EB : 2601; -- . imov [imov! t0 1]
04EC : 3600; -- ' imoh
04ED : 5D60; --   push t0
04EE : 67D0; -- . pop [pop! t1 t0]
04EF : 66D0; -- ' pop
04F0 : 2801; --   imov t2 1  # default value
04F1 : 8675; --   sub  t0 t1
04F2 : 20F6; -- . imov [jz!  .test_arith_body_4_1_opskip]
04F3 : 3004; -- | imoh
04F4 : A001; -- ' j_op
04F5 : 2800; --   imov t2 0
04F6 : 5D80; -- . push [push! t2]
04F7 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04F8 : 3680; -- | imoh
04F9 : 0660; -- ' load
04FA : 2704; -- . imov [imov!   t1 .test_arith_body_retaddr5]
04FB : 3705; -- ' imoh
04FC : 1670; --   str     t0 t1
04FD : 9614; --   iadd    t0 1
04FE : 2003; -- . imov [str!    .ret_stack_ptr t0]
04FF : 3080; -- | imoh
0500 : 1060; -- ' str
0501 : 20AA; -- . imov [jmp!    .assert]
0502 : 3002; -- | imoh
0503 : A000; -- ' j_op
0504 : 2680; -- . imov [imov! t0 .string_alloc_10]
0505 : 3600; -- ' imoh
0506 : 5D60; -- . push [push! t0]
0507 : 2606; -- . imov [imov! t0 6]
0508 : 3600; -- ' imoh
0509 : 5D60; --   push t0
050A : 2607; -- . imov [imov! t0 7]
050B : 3600; -- ' imoh
050C : 5D60; --   push t0
050D : 67D0; -- . pop [pop! t1 t0]
050E : 66D0; -- ' pop
050F : 2800; --   imov t2 0  # default value
0510 : 8675; --   sub  t0 t1
0511 : 2015; -- . imov [jn!  .test_arith_body_5_0_opskip]
0512 : 3005; -- | imoh
0513 : A003; -- ' j_op
0514 : 2801; --   imov t2 1
0515 : 5D80; -- . push [push! t2]
0516 : 2600; -- . imov [imov! t0 0]
0517 : 3600; -- ' imoh
0518 : 5D60; --   push t0
0519 : 67D0; -- . pop [pop! t1 t0]
051A : 66D0; -- ' pop
051B : 2801; --   imov t2 1  # default value
051C : 8675; --   sub  t0 t1
051D : 2021; -- . imov [jz!  .test_arith_body_5_1_opskip]
051E : 3005; -- | imoh
051F : A001; -- ' j_op
0520 : 2800; --   imov t2 0
0521 : 5D80; -- . push [push! t2]
0522 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0523 : 3680; -- | imoh
0524 : 0660; -- ' load
0525 : 272F; -- . imov [imov!   t1 .test_arith_body_retaddr6]
0526 : 3705; -- ' imoh
0527 : 1670; --   str     t0 t1
0528 : 9614; --   iadd    t0 1
0529 : 2003; -- . imov [str!    .ret_stack_ptr t0]
052A : 3080; -- | imoh
052B : 1060; -- ' str
052C : 20AA; -- . imov [jmp!    .assert]
052D : 3002; -- | imoh
052E : A000; -- ' j_op
052F : 2655; -- . imov [imov! t0 .string_alloc_11]
0530 : 3601; -- ' imoh
0531 : 5D60; -- . push [push! t0]
0532 : 2607; -- . imov [imov! t0 7]
0533 : 3600; -- ' imoh
0534 : 5D60; --   push t0
0535 : 2607; -- . imov [imov! t0 7]
0536 : 3600; -- ' imoh
0537 : 5D60; --   push t0
0538 : 67D0; -- . pop [pop! t1 t0]
0539 : 66D0; -- ' pop
053A : 2800; --   imov t2 0  # default value
053B : 8675; --   sub  t0 t1
053C : 2040; -- . imov [jn!  .test_arith_body_6_0_opskip]
053D : 3005; -- | imoh
053E : A003; -- ' j_op
053F : 2801; --   imov t2 1
0540 : 5D80; -- . push [push! t2]
0541 : 2601; -- . imov [imov! t0 1]
0542 : 3600; -- ' imoh
0543 : 5D60; --   push t0
0544 : 67D0; -- . pop [pop! t1 t0]
0545 : 66D0; -- ' pop
0546 : 2801; --   imov t2 1  # default value
0547 : 8675; --   sub  t0 t1
0548 : 204C; -- . imov [jz!  .test_arith_body_6_1_opskip]
0549 : 3005; -- | imoh
054A : A001; -- ' j_op
054B : 2800; --   imov t2 0
054C : 5D80; -- . push [push! t2]
054D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
054E : 3680; -- | imoh
054F : 0660; -- ' load
0550 : 275A; -- . imov [imov!   t1 .test_arith_body_retaddr7]
0551 : 3705; -- ' imoh
0552 : 1670; --   str     t0 t1
0553 : 9614; --   iadd    t0 1
0554 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0555 : 3080; -- | imoh
0556 : 1060; -- ' str
0557 : 20AA; -- . imov [jmp!    .assert]
0558 : 3002; -- | imoh
0559 : A000; -- ' j_op
055A : 26D1; -- . imov [imov! t0 .string_alloc_12]
055B : 3600; -- ' imoh
055C : 5D60; -- . push [push! t0]
055D : 2608; -- . imov [imov! t0 8]
055E : 3600; -- ' imoh
055F : 5D60; --   push t0
0560 : 2607; -- . imov [imov! t0 7]
0561 : 3600; -- ' imoh
0562 : 5D60; --   push t0
0563 : 67D0; -- . pop [pop! t1 t0]
0564 : 66D0; -- ' pop
0565 : 2800; --   imov t2 0  # default value
0566 : 8675; --   sub  t0 t1
0567 : 206B; -- . imov [jn!  .test_arith_body_7_0_opskip]
0568 : 3005; -- | imoh
0569 : A003; -- ' j_op
056A : 2801; --   imov t2 1
056B : 5D80; -- . push [push! t2]
056C : 2601; -- . imov [imov! t0 1]
056D : 3600; -- ' imoh
056E : 5D60; --   push t0
056F : 67D0; -- . pop [pop! t1 t0]
0570 : 66D0; -- ' pop
0571 : 2801; --   imov t2 1  # default value
0572 : 8675; --   sub  t0 t1
0573 : 2077; -- . imov [jz!  .test_arith_body_7_1_opskip]
0574 : 3005; -- | imoh
0575 : A001; -- ' j_op
0576 : 2800; --   imov t2 0
0577 : 5D80; -- . push [push! t2]
0578 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0579 : 3680; -- | imoh
057A : 0660; -- ' load
057B : 2785; -- . imov [imov!   t1 .test_arith_body_retaddr8]
057C : 3705; -- ' imoh
057D : 1670; --   str     t0 t1
057E : 9614; --   iadd    t0 1
057F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0580 : 3080; -- | imoh
0581 : 1060; -- ' str
0582 : 20AA; -- . imov [jmp!    .assert]
0583 : 3002; -- | imoh
0584 : A000; -- ' j_op
0585 : 26C6; -- . imov [imov! t0 .string_alloc_13]
0586 : 3601; -- ' imoh
0587 : 5D60; -- . push [push! t0]
0588 : 2606; -- . imov [imov! t0 6]
0589 : 3600; -- ' imoh
058A : 5D60; --   push t0
058B : 2607; -- . imov [imov! t0 7]
058C : 3600; -- ' imoh
058D : 5D60; --   push t0
058E : 67D0; -- . pop [pop! t1 t0]
058F : 66D0; -- ' pop
0590 : 2801; --   imov t2 1  # default value
0591 : 8675; --   sub  t0 t1
0592 : 2096; -- . imov [jn!  .test_arith_body_8_0_opskip]
0593 : 3005; -- | imoh
0594 : A003; -- ' j_op
0595 : 2800; --   imov t2 0
0596 : 5D80; -- . push [push! t2]
0597 : 2601; -- . imov [imov! t0 1]
0598 : 3600; -- ' imoh
0599 : 5D60; --   push t0
059A : 67D0; -- . pop [pop! t1 t0]
059B : 66D0; -- ' pop
059C : 2801; --   imov t2 1  # default value
059D : 8675; --   sub  t0 t1
059E : 20A2; -- . imov [jz!  .test_arith_body_8_1_opskip]
059F : 3005; -- | imoh
05A0 : A001; -- ' j_op
05A1 : 2800; --   imov t2 0
05A2 : 5D80; -- . push [push! t2]
05A3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05A4 : 3680; -- | imoh
05A5 : 0660; -- ' load
05A6 : 27B0; -- . imov [imov!   t1 .test_arith_body_retaddr9]
05A7 : 3705; -- ' imoh
05A8 : 1670; --   str     t0 t1
05A9 : 9614; --   iadd    t0 1
05AA : 2003; -- . imov [str!    .ret_stack_ptr t0]
05AB : 3080; -- | imoh
05AC : 1060; -- ' str
05AD : 20AA; -- . imov [jmp!    .assert]
05AE : 3002; -- | imoh
05AF : A000; -- ' j_op
05B0 : 2668; -- . imov [imov! t0 .string_alloc_14]
05B1 : 3600; -- ' imoh
05B2 : 5D60; -- . push [push! t0]
05B3 : 2607; -- . imov [imov! t0 7]
05B4 : 3600; -- ' imoh
05B5 : 5D60; --   push t0
05B6 : 2607; -- . imov [imov! t0 7]
05B7 : 3600; -- ' imoh
05B8 : 5D60; --   push t0
05B9 : 67D0; -- . pop [pop! t1 t0]
05BA : 66D0; -- ' pop
05BB : 2801; --   imov t2 1  # default value
05BC : 8675; --   sub  t0 t1
05BD : 20C1; -- . imov [jn!  .test_arith_body_9_0_opskip]
05BE : 3005; -- | imoh
05BF : A003; -- ' j_op
05C0 : 2800; --   imov t2 0
05C1 : 5D80; -- . push [push! t2]
05C2 : 2600; -- . imov [imov! t0 0]
05C3 : 3600; -- ' imoh
05C4 : 5D60; --   push t0
05C5 : 67D0; -- . pop [pop! t1 t0]
05C6 : 66D0; -- ' pop
05C7 : 2801; --   imov t2 1  # default value
05C8 : 8675; --   sub  t0 t1
05C9 : 20CD; -- . imov [jz!  .test_arith_body_9_1_opskip]
05CA : 3005; -- | imoh
05CB : A001; -- ' j_op
05CC : 2800; --   imov t2 0
05CD : 5D80; -- . push [push! t2]
05CE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05CF : 3680; -- | imoh
05D0 : 0660; -- ' load
05D1 : 27DB; -- . imov [imov!   t1 .test_arith_body_retaddr10]
05D2 : 3705; -- ' imoh
05D3 : 1670; --   str     t0 t1
05D4 : 9614; --   iadd    t0 1
05D5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
05D6 : 3080; -- | imoh
05D7 : 1060; -- ' str
05D8 : 20AA; -- . imov [jmp!    .assert]
05D9 : 3002; -- | imoh
05DA : A000; -- ' j_op
05DB : 26FC; -- . imov [imov! t0 .string_alloc_15]
05DC : 3600; -- ' imoh
05DD : 5D60; -- . push [push! t0]
05DE : 2608; -- . imov [imov! t0 8]
05DF : 3600; -- ' imoh
05E0 : 5D60; --   push t0
05E1 : 2607; -- . imov [imov! t0 7]
05E2 : 3600; -- ' imoh
05E3 : 5D60; --   push t0
05E4 : 67D0; -- . pop [pop! t1 t0]
05E5 : 66D0; -- ' pop
05E6 : 2801; --   imov t2 1  # default value
05E7 : 8675; --   sub  t0 t1
05E8 : 20EC; -- . imov [jn!  .test_arith_body_10_0_opskip]
05E9 : 3005; -- | imoh
05EA : A003; -- ' j_op
05EB : 2800; --   imov t2 0
05EC : 5D80; -- . push [push! t2]
05ED : 2600; -- . imov [imov! t0 0]
05EE : 3600; -- ' imoh
05EF : 5D60; --   push t0
05F0 : 67D0; -- . pop [pop! t1 t0]
05F1 : 66D0; -- ' pop
05F2 : 2801; --   imov t2 1  # default value
05F3 : 8675; --   sub  t0 t1
05F4 : 20F8; -- . imov [jz!  .test_arith_body_10_1_opskip]
05F5 : 3005; -- | imoh
05F6 : A001; -- ' j_op
05F7 : 2800; --   imov t2 0
05F8 : 5D80; -- . push [push! t2]
05F9 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05FA : 3680; -- | imoh
05FB : 0660; -- ' load
05FC : 2706; -- . imov [imov!   t1 .test_arith_body_retaddr11]
05FD : 3706; -- ' imoh
05FE : 1670; --   str     t0 t1
05FF : 9614; --   iadd    t0 1
0600 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0601 : 3080; -- | imoh
0602 : 1060; -- ' str
0603 : 20AA; -- . imov [jmp!    .assert]
0604 : 3002; -- | imoh
0605 : A000; -- ' j_op
0606 : 26C7; -- . imov [imov! t0 .string_alloc_16]
0607 : 3600; -- ' imoh
0608 : 5D60; -- . push [push! t0]
0609 : 2606; -- . imov [imov! t0 6]
060A : 3600; -- ' imoh
060B : 5D60; --   push t0
060C : 2607; -- . imov [imov! t0 7]
060D : 3600; -- ' imoh
060E : 5D60; --   push t0
060F : 67D0; -- . pop [pop! t1 t0]
0610 : 66D0; -- ' pop
0611 : 2800; --   imov t2 0  # default value
0612 : 8675; --   sub  t0 t1
0613 : 2017; -- . imov [jp!  .test_arith_body_11_0_opskip]
0614 : 3006; -- | imoh
0615 : A004; -- ' j_op
0616 : 2801; --   imov t2 1
0617 : 5D80; -- . push [push! t2]
0618 : 2601; -- . imov [imov! t0 1]
0619 : 3600; -- ' imoh
061A : 5D60; --   push t0
061B : 67D0; -- . pop [pop! t1 t0]
061C : 66D0; -- ' pop
061D : 2801; --   imov t2 1  # default value
061E : 8675; --   sub  t0 t1
061F : 2023; -- . imov [jz!  .test_arith_body_11_1_opskip]
0620 : 3006; -- | imoh
0621 : A001; -- ' j_op
0622 : 2800; --   imov t2 0
0623 : 5D80; -- . push [push! t2]
0624 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0625 : 3680; -- | imoh
0626 : 0660; -- ' load
0627 : 2731; -- . imov [imov!   t1 .test_arith_body_retaddr12]
0628 : 3706; -- ' imoh
0629 : 1670; --   str     t0 t1
062A : 9614; --   iadd    t0 1
062B : 2003; -- . imov [str!    .ret_stack_ptr t0]
062C : 3080; -- | imoh
062D : 1060; -- ' str
062E : 20AA; -- . imov [jmp!    .assert]
062F : 3002; -- | imoh
0630 : A000; -- ' j_op
0631 : 26BF; -- . imov [imov! t0 .string_alloc_17]
0632 : 3601; -- ' imoh
0633 : 5D60; -- . push [push! t0]
0634 : 2607; -- . imov [imov! t0 7]
0635 : 3600; -- ' imoh
0636 : 5D60; --   push t0
0637 : 2607; -- . imov [imov! t0 7]
0638 : 3600; -- ' imoh
0639 : 5D60; --   push t0
063A : 67D0; -- . pop [pop! t1 t0]
063B : 66D0; -- ' pop
063C : 2800; --   imov t2 0  # default value
063D : 8675; --   sub  t0 t1
063E : 2042; -- . imov [jp!  .test_arith_body_12_0_opskip]
063F : 3006; -- | imoh
0640 : A004; -- ' j_op
0641 : 2801; --   imov t2 1
0642 : 5D80; -- . push [push! t2]
0643 : 2601; -- . imov [imov! t0 1]
0644 : 3600; -- ' imoh
0645 : 5D60; --   push t0
0646 : 67D0; -- . pop [pop! t1 t0]
0647 : 66D0; -- ' pop
0648 : 2801; --   imov t2 1  # default value
0649 : 8675; --   sub  t0 t1
064A : 204E; -- . imov [jz!  .test_arith_body_12_1_opskip]
064B : 3006; -- | imoh
064C : A001; -- ' j_op
064D : 2800; --   imov t2 0
064E : 5D80; -- . push [push! t2]
064F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0650 : 3680; -- | imoh
0651 : 0660; -- ' load
0652 : 275C; -- . imov [imov!   t1 .test_arith_body_retaddr13]
0653 : 3706; -- ' imoh
0654 : 1670; --   str     t0 t1
0655 : 9614; --   iadd    t0 1
0656 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0657 : 3080; -- | imoh
0658 : 1060; -- ' str
0659 : 20AA; -- . imov [jmp!    .assert]
065A : 3002; -- | imoh
065B : A000; -- ' j_op
065C : 2643; -- . imov [imov! t0 .string_alloc_18]
065D : 3600; -- ' imoh
065E : 5D60; -- . push [push! t0]
065F : 2608; -- . imov [imov! t0 8]
0660 : 3600; -- ' imoh
0661 : 5D60; --   push t0
0662 : 2607; -- . imov [imov! t0 7]
0663 : 3600; -- ' imoh
0664 : 5D60; --   push t0
0665 : 67D0; -- . pop [pop! t1 t0]
0666 : 66D0; -- ' pop
0667 : 2800; --   imov t2 0  # default value
0668 : 8675; --   sub  t0 t1
0669 : 206D; -- . imov [jp!  .test_arith_body_13_0_opskip]
066A : 3006; -- | imoh
066B : A004; -- ' j_op
066C : 2801; --   imov t2 1
066D : 5D80; -- . push [push! t2]
066E : 2600; -- . imov [imov! t0 0]
066F : 3600; -- ' imoh
0670 : 5D60; --   push t0
0671 : 67D0; -- . pop [pop! t1 t0]
0672 : 66D0; -- ' pop
0673 : 2801; --   imov t2 1  # default value
0674 : 8675; --   sub  t0 t1
0675 : 2079; -- . imov [jz!  .test_arith_body_13_1_opskip]
0676 : 3006; -- | imoh
0677 : A001; -- ' j_op
0678 : 2800; --   imov t2 0
0679 : 5D80; -- . push [push! t2]
067A : 2603; -- . imov [load!   t0 .ret_stack_ptr]
067B : 3680; -- | imoh
067C : 0660; -- ' load
067D : 2787; -- . imov [imov!   t1 .test_arith_body_retaddr14]
067E : 3706; -- ' imoh
067F : 1670; --   str     t0 t1
0680 : 9614; --   iadd    t0 1
0681 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0682 : 3080; -- | imoh
0683 : 1060; -- ' str
0684 : 20AA; -- . imov [jmp!    .assert]
0685 : 3002; -- | imoh
0686 : A000; -- ' j_op
0687 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0688 : 3680; -- | imoh
0689 : 0660; -- ' load
068A : 9615; --   isub    t0 1
068B : 0760; --   load    t1 t0
068C : 2003; -- . imov [str!    .ret_stack_ptr t0]
068D : 3080; -- | imoh
068E : 1060; -- ' str
068F : A700; --   jmp     t1
0690 : 267A; -- . imov [imov! t0 .string_alloc_19]
0691 : 3601; -- ' imoh
0692 : 5D60; -- . push [push! t0]
0693 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0694 : 3680; -- | imoh
0695 : 0660; -- ' load
0696 : 27A0; -- . imov [imov!   t1 .test_logical_body_retaddr0]
0697 : 3706; -- ' imoh
0698 : 1670; --   str     t0 t1
0699 : 9614; --   iadd    t0 1
069A : 2003; -- . imov [str!    .ret_stack_ptr t0]
069B : 3080; -- | imoh
069C : 1060; -- ' str
069D : 2009; -- . imov [jmp!    .ps]
069E : 300C; -- | imoh
069F : A000; -- ' j_op
06A0 : 2661; -- . imov [imov! t0 .string_alloc_20]
06A1 : 3600; -- ' imoh
06A2 : 5D60; -- . push [push! t0]
06A3 : 2601; -- . imov [imov! t0 1]
06A4 : 3600; -- ' imoh
06A5 : 5D60; --   push t0
06A6 : 2601; -- . imov [imov! t0 1]
06A7 : 3600; -- ' imoh
06A8 : 5D60; --   push t0
06A9 : 67D0; -- . pop [pop! t1 t0]
06AA : 66D0; -- ' pop
06AB : 2800; --   imov t2 0
06AC : 9607; --   tst  t0
06AD : 20B5; -- . imov [jz! .test_logical_body_0_0_andfalse]
06AE : 3006; -- | imoh
06AF : A001; -- ' j_op
06B0 : 9707; --   tst  t1
06B1 : 20B5; -- . imov [jz! .test_logical_body_0_0_andfalse]
06B2 : 3006; -- | imoh
06B3 : A001; -- ' j_op
06B4 : 2801; --   imov t2 1
06B5 : 5D80; -- . push [push! t2]
06B6 : 2601; -- . imov [imov! t0 1]
06B7 : 3600; -- ' imoh
06B8 : 5D60; --   push t0
06B9 : 67D0; -- . pop [pop! t1 t0]
06BA : 66D0; -- ' pop
06BB : 2801; --   imov t2 1  # default value
06BC : 8675; --   sub  t0 t1
06BD : 20C1; -- . imov [jz!  .test_logical_body_0_1_opskip]
06BE : 3006; -- | imoh
06BF : A001; -- ' j_op
06C0 : 2800; --   imov t2 0
06C1 : 5D80; -- . push [push! t2]
06C2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
06C3 : 3680; -- | imoh
06C4 : 0660; -- ' load
06C5 : 27CF; -- . imov [imov!   t1 .test_logical_body_retaddr1]
06C6 : 3706; -- ' imoh
06C7 : 1670; --   str     t0 t1
06C8 : 9614; --   iadd    t0 1
06C9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
06CA : 3080; -- | imoh
06CB : 1060; -- ' str
06CC : 20AA; -- . imov [jmp!    .assert]
06CD : 3002; -- | imoh
06CE : A000; -- ' j_op
06CF : 266E; -- . imov [imov! t0 .string_alloc_21]
06D0 : 3600; -- ' imoh
06D1 : 5D60; -- . push [push! t0]
06D2 : 2600; -- . imov [imov! t0 0]
06D3 : 3600; -- ' imoh
06D4 : 5D60; --   push t0
06D5 : 2601; -- . imov [imov! t0 1]
06D6 : 3600; -- ' imoh
06D7 : 5D60; --   push t0
06D8 : 67D0; -- . pop [pop! t1 t0]
06D9 : 66D0; -- ' pop
06DA : 2800; --   imov t2 0
06DB : 9607; --   tst  t0
06DC : 20E4; -- . imov [jz! .test_logical_body_1_0_andfalse]
06DD : 3006; -- | imoh
06DE : A001; -- ' j_op
06DF : 9707; --   tst  t1
06E0 : 20E4; -- . imov [jz! .test_logical_body_1_0_andfalse]
06E1 : 3006; -- | imoh
06E2 : A001; -- ' j_op
06E3 : 2801; --   imov t2 1
06E4 : 5D80; -- . push [push! t2]
06E5 : 2600; -- . imov [imov! t0 0]
06E6 : 3600; -- ' imoh
06E7 : 5D60; --   push t0
06E8 : 67D0; -- . pop [pop! t1 t0]
06E9 : 66D0; -- ' pop
06EA : 2801; --   imov t2 1  # default value
06EB : 8675; --   sub  t0 t1
06EC : 20F0; -- . imov [jz!  .test_logical_body_1_1_opskip]
06ED : 3006; -- | imoh
06EE : A001; -- ' j_op
06EF : 2800; --   imov t2 0
06F0 : 5D80; -- . push [push! t2]
06F1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
06F2 : 3680; -- | imoh
06F3 : 0660; -- ' load
06F4 : 27FE; -- . imov [imov!   t1 .test_logical_body_retaddr2]
06F5 : 3706; -- ' imoh
06F6 : 1670; --   str     t0 t1
06F7 : 9614; --   iadd    t0 1
06F8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
06F9 : 3080; -- | imoh
06FA : 1060; -- ' str
06FB : 20AA; -- . imov [jmp!    .assert]
06FC : 3002; -- | imoh
06FD : A000; -- ' j_op
06FE : 26F5; -- . imov [imov! t0 .string_alloc_22]
06FF : 3600; -- ' imoh
0700 : 5D60; -- . push [push! t0]
0701 : 2600; -- . imov [imov! t0 0]
0702 : 3600; -- ' imoh
0703 : 5D60; --   push t0
0704 : 2600; -- . imov [imov! t0 0]
0705 : 3600; -- ' imoh
0706 : 5D60; --   push t0
0707 : 67D0; -- . pop [pop! t1 t0]
0708 : 66D0; -- ' pop
0709 : 2801; --   imov t2 1
070A : 9607; --   tst  t0
070B : 2013; -- . imov [jnz! .test_logical_body_2_0_ortrue]
070C : 3007; -- | imoh
070D : A002; -- ' j_op
070E : 9707; --   tst  t1
070F : 2013; -- . imov [jnz! .test_logical_body_2_0_ortrue]
0710 : 3007; -- | imoh
0711 : A002; -- ' j_op
0712 : 2800; --   imov t2 0
0713 : 5D80; -- . push [push! t2]
0714 : 2600; -- . imov [imov! t0 0]
0715 : 3600; -- ' imoh
0716 : 5D60; --   push t0
0717 : 67D0; -- . pop [pop! t1 t0]
0718 : 66D0; -- ' pop
0719 : 2801; --   imov t2 1  # default value
071A : 8675; --   sub  t0 t1
071B : 201F; -- . imov [jz!  .test_logical_body_2_1_opskip]
071C : 3007; -- | imoh
071D : A001; -- ' j_op
071E : 2800; --   imov t2 0
071F : 5D80; -- . push [push! t2]
0720 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0721 : 3680; -- | imoh
0722 : 0660; -- ' load
0723 : 272D; -- . imov [imov!   t1 .test_logical_body_retaddr3]
0724 : 3707; -- ' imoh
0725 : 1670; --   str     t0 t1
0726 : 9614; --   iadd    t0 1
0727 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0728 : 3080; -- | imoh
0729 : 1060; -- ' str
072A : 20AA; -- . imov [jmp!    .assert]
072B : 3002; -- | imoh
072C : A000; -- ' j_op
072D : 264A; -- . imov [imov! t0 .string_alloc_23]
072E : 3600; -- ' imoh
072F : 5D60; -- . push [push! t0]
0730 : 2601; -- . imov [imov! t0 1]
0731 : 3600; -- ' imoh
0732 : 5D60; --   push t0
0733 : 2600; -- . imov [imov! t0 0]
0734 : 3600; -- ' imoh
0735 : 5D60; --   push t0
0736 : 67D0; -- . pop [pop! t1 t0]
0737 : 66D0; -- ' pop
0738 : 2801; --   imov t2 1
0739 : 9607; --   tst  t0
073A : 2042; -- . imov [jnz! .test_logical_body_3_0_ortrue]
073B : 3007; -- | imoh
073C : A002; -- ' j_op
073D : 9707; --   tst  t1
073E : 2042; -- . imov [jnz! .test_logical_body_3_0_ortrue]
073F : 3007; -- | imoh
0740 : A002; -- ' j_op
0741 : 2800; --   imov t2 0
0742 : 5D80; -- . push [push! t2]
0743 : 2601; -- . imov [imov! t0 1]
0744 : 3600; -- ' imoh
0745 : 5D60; --   push t0
0746 : 67D0; -- . pop [pop! t1 t0]
0747 : 66D0; -- ' pop
0748 : 2801; --   imov t2 1  # default value
0749 : 8675; --   sub  t0 t1
074A : 204E; -- . imov [jz!  .test_logical_body_3_1_opskip]
074B : 3007; -- | imoh
074C : A001; -- ' j_op
074D : 2800; --   imov t2 0
074E : 5D80; -- . push [push! t2]
074F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0750 : 3680; -- | imoh
0751 : 0660; -- ' load
0752 : 275C; -- . imov [imov!   t1 .test_logical_body_retaddr4]
0753 : 3707; -- ' imoh
0754 : 1670; --   str     t0 t1
0755 : 9614; --   iadd    t0 1
0756 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0757 : 3080; -- | imoh
0758 : 1060; -- ' str
0759 : 20AA; -- . imov [jmp!    .assert]
075A : 3002; -- | imoh
075B : A000; -- ' j_op
075C : 268B; -- . imov [imov! t0 .string_alloc_24]
075D : 3601; -- ' imoh
075E : 5D60; -- . push [push! t0]
075F : 2601; -- . imov [imov! t0 1]
0760 : 3600; -- ' imoh
0761 : 5D60; --   push t0
0762 : 66D0; -- . pop [pop! t0]
0763 : 2701; --   imov t1 1
0764 : 9607; --   tst  t0
0765 : 2069; -- . imov [jz! .test_logical_body_4_0_nottrue]
0766 : 3007; -- | imoh
0767 : A001; -- ' j_op
0768 : 2700; --   imov t1 0
0769 : 5D70; -- . push [push! t1]
076A : 2600; -- . imov [imov! t0 0]
076B : 3600; -- ' imoh
076C : 5D60; --   push t0
076D : 67D0; -- . pop [pop! t1 t0]
076E : 66D0; -- ' pop
076F : 2801; --   imov t2 1  # default value
0770 : 8675; --   sub  t0 t1
0771 : 2075; -- . imov [jz!  .test_logical_body_4_1_opskip]
0772 : 3007; -- | imoh
0773 : A001; -- ' j_op
0774 : 2800; --   imov t2 0
0775 : 5D80; -- . push [push! t2]
0776 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0777 : 3680; -- | imoh
0778 : 0660; -- ' load
0779 : 2783; -- . imov [imov!   t1 .test_logical_body_retaddr5]
077A : 3707; -- ' imoh
077B : 1670; --   str     t0 t1
077C : 9614; --   iadd    t0 1
077D : 2003; -- . imov [str!    .ret_stack_ptr t0]
077E : 3080; -- | imoh
077F : 1060; -- ' str
0780 : 20AA; -- . imov [jmp!    .assert]
0781 : 3002; -- | imoh
0782 : A000; -- ' j_op
0783 : 26AE; -- . imov [imov! t0 .string_alloc_25]
0784 : 3601; -- ' imoh
0785 : 5D60; -- . push [push! t0]
0786 : 2600; -- . imov [imov! t0 0]
0787 : 3600; -- ' imoh
0788 : 5D60; --   push t0
0789 : 66D0; -- . pop [pop! t0]
078A : 2701; --   imov t1 1
078B : 9607; --   tst  t0
078C : 2090; -- . imov [jz! .test_logical_body_5_0_nottrue]
078D : 3007; -- | imoh
078E : A001; -- ' j_op
078F : 2700; --   imov t1 0
0790 : 5D70; -- . push [push! t1]
0791 : 2601; -- . imov [imov! t0 1]
0792 : 3600; -- ' imoh
0793 : 5D60; --   push t0
0794 : 67D0; -- . pop [pop! t1 t0]
0795 : 66D0; -- ' pop
0796 : 2801; --   imov t2 1  # default value
0797 : 8675; --   sub  t0 t1
0798 : 209C; -- . imov [jz!  .test_logical_body_5_1_opskip]
0799 : 3007; -- | imoh
079A : A001; -- ' j_op
079B : 2800; --   imov t2 0
079C : 5D80; -- . push [push! t2]
079D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
079E : 3680; -- | imoh
079F : 0660; -- ' load
07A0 : 27AA; -- . imov [imov!   t1 .test_logical_body_retaddr6]
07A1 : 3707; -- ' imoh
07A2 : 1670; --   str     t0 t1
07A3 : 9614; --   iadd    t0 1
07A4 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07A5 : 3080; -- | imoh
07A6 : 1060; -- ' str
07A7 : 20AA; -- . imov [jmp!    .assert]
07A8 : 3002; -- | imoh
07A9 : A000; -- ' j_op
07AA : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07AB : 3680; -- | imoh
07AC : 0660; -- ' load
07AD : 9615; --   isub    t0 1
07AE : 0760; --   load    t1 t0
07AF : 2003; -- . imov [str!    .ret_stack_ptr t0]
07B0 : 3080; -- | imoh
07B1 : 1060; -- ' str
07B2 : A700; --   jmp     t1
07B3 : 66D0; -- . pop [pop! t0]
07B4 : 5D60; -- . push [push! t0 t0]
07B5 : 5D60; -- ' push
07B6 : 66D0; -- . pop [pop! t0]
07B7 : 5D60; -- . push [push! t0 t0]
07B8 : 5D60; -- ' push
07B9 : 66D0; -- . pop [pop! t0]
07BA : 0660; --   load t0 t0
07BB : 5D60; -- . push [push! t0]
07BC : 66D0; -- . pop [pop! t0]
07BD : 9607; --   tst  t0
07BE : 20CB; -- . imov [jz!  .strlen_body_0_while_exit]
07BF : 3007; -- | imoh
07C0 : A001; -- ' j_op
07C1 : 2601; -- . imov [imov! t0 1]
07C2 : 3600; -- ' imoh
07C3 : 5D60; --   push t0
07C4 : 67D0; -- . pop [pop!  t1 t0]
07C5 : 66D0; -- ' pop
07C6 : 8674; --   add   t0 t1
07C7 : 5D60; -- . push [push! t0]
07C8 : 20B6; -- . imov [jmp! .strlen_body_0_while_eval]
07C9 : 3007; -- | imoh
07CA : A000; -- ' j_op
07CB : 66D0; -- . pop [pop! t0 t1]
07CC : 67D0; -- ' pop
07CD : 5D60; -- . push [push! t0 t1]
07CE : 5D70; -- ' push
07CF : 67D0; -- . pop [pop!  t1 t0]
07D0 : 66D0; -- ' pop
07D1 : 8675; --   sub   t0 t1
07D2 : 5D60; -- . push [push! t0]
07D3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07D4 : 3680; -- | imoh
07D5 : 0660; -- ' load
07D6 : 9615; --   isub    t0 1
07D7 : 0760; --   load    t1 t0
07D8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07D9 : 3080; -- | imoh
07DA : 1060; -- ' str
07DB : A700; --   jmp     t1
07DC : 2651; -- . imov [imov! t0 .string_alloc_26]
07DD : 3600; -- ' imoh
07DE : 5D60; -- . push [push! t0]
07DF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07E0 : 3680; -- | imoh
07E1 : 0660; -- ' load
07E2 : 27EC; -- . imov [imov!   t1 .test_strlen_body_retaddr0]
07E3 : 3707; -- ' imoh
07E4 : 1670; --   str     t0 t1
07E5 : 9614; --   iadd    t0 1
07E6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07E7 : 3080; -- | imoh
07E8 : 1060; -- ' str
07E9 : 2009; -- . imov [jmp!    .ps]
07EA : 300C; -- | imoh
07EB : A000; -- ' j_op
07EC : 269D; -- . imov [imov! t0 .string_alloc_27]
07ED : 3600; -- ' imoh
07EE : 5D60; -- . push [push! t0]
07EF : 26A9; -- . imov [imov! t0 .string_alloc_28]
07F0 : 3601; -- ' imoh
07F1 : 5D60; -- . push [push! t0]
07F2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07F3 : 3680; -- | imoh
07F4 : 0660; -- ' load
07F5 : 27FF; -- . imov [imov!   t1 .test_strlen_body_0_retaddr0]
07F6 : 3707; -- ' imoh
07F7 : 1670; --   str     t0 t1
07F8 : 9614; --   iadd    t0 1
07F9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07FA : 3080; -- | imoh
07FB : 1060; -- ' str
07FC : 20B3; -- . imov [jmp!    .strlen]
07FD : 3007; -- | imoh
07FE : A000; -- ' j_op
07FF : 2604; -- . imov [imov! t0 4]
0800 : 3600; -- ' imoh
0801 : 5D60; --   push t0
0802 : 67D0; -- . pop [pop! t1 t0]
0803 : 66D0; -- ' pop
0804 : 2801; --   imov t2 1  # default value
0805 : 8675; --   sub  t0 t1
0806 : 200A; -- . imov [jz!  .test_strlen_body_0_0_opskip]
0807 : 3008; -- | imoh
0808 : A001; -- ' j_op
0809 : 2800; --   imov t2 0
080A : 5D80; -- . push [push! t2]
080B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
080C : 3680; -- | imoh
080D : 0660; -- ' load
080E : 2718; -- . imov [imov!   t1 .test_strlen_body_retaddr1]
080F : 3708; -- ' imoh
0810 : 1670; --   str     t0 t1
0811 : 9614; --   iadd    t0 1
0812 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0813 : 3080; -- | imoh
0814 : 1060; -- ' str
0815 : 20AA; -- . imov [jmp!    .assert]
0816 : 3002; -- | imoh
0817 : A000; -- ' j_op
0818 : 2675; -- . imov [imov! t0 .string_alloc_29]
0819 : 3600; -- ' imoh
081A : 5D60; -- . push [push! t0]
081B : 26AC; -- . imov [imov! t0 .string_alloc_30]
081C : 3600; -- ' imoh
081D : 5D60; -- . push [push! t0]
081E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
081F : 3680; -- | imoh
0820 : 0660; -- ' load
0821 : 272B; -- . imov [imov!   t1 .test_strlen_body_1_retaddr0]
0822 : 3708; -- ' imoh
0823 : 1670; --   str     t0 t1
0824 : 9614; --   iadd    t0 1
0825 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0826 : 3080; -- | imoh
0827 : 1060; -- ' str
0828 : 20B3; -- . imov [jmp!    .strlen]
0829 : 3007; -- | imoh
082A : A000; -- ' j_op
082B : 2600; -- . imov [imov! t0 0]
082C : 3600; -- ' imoh
082D : 5D60; --   push t0
082E : 67D0; -- . pop [pop! t1 t0]
082F : 66D0; -- ' pop
0830 : 2801; --   imov t2 1  # default value
0831 : 8675; --   sub  t0 t1
0832 : 2036; -- . imov [jz!  .test_strlen_body_1_0_opskip]
0833 : 3008; -- | imoh
0834 : A001; -- ' j_op
0835 : 2800; --   imov t2 0
0836 : 5D80; -- . push [push! t2]
0837 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0838 : 3680; -- | imoh
0839 : 0660; -- ' load
083A : 2744; -- . imov [imov!   t1 .test_strlen_body_retaddr2]
083B : 3708; -- ' imoh
083C : 1670; --   str     t0 t1
083D : 9614; --   iadd    t0 1
083E : 2003; -- . imov [str!    .ret_stack_ptr t0]
083F : 3080; -- | imoh
0840 : 1060; -- ' str
0841 : 20AA; -- . imov [jmp!    .assert]
0842 : 3002; -- | imoh
0843 : A000; -- ' j_op
0844 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0845 : 3680; -- | imoh
0846 : 0660; -- ' load
0847 : 9615; --   isub    t0 1
0848 : 0760; --   load    t1 t0
0849 : 2003; -- . imov [str!    .ret_stack_ptr t0]
084A : 3080; -- | imoh
084B : 1060; -- ' str
084C : A700; --   jmp     t1
084D : 26BA; -- . imov [imov! t0 .string_alloc_31]
084E : 3600; -- ' imoh
084F : 5D60; -- . push [push! t0]
0850 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0851 : 3680; -- | imoh
0852 : 0660; -- ' load
0853 : 275D; -- . imov [imov!   t1 .test_let_body_retaddr0]
0854 : 3708; -- ' imoh
0855 : 1670; --   str     t0 t1
0856 : 9614; --   iadd    t0 1
0857 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0858 : 3080; -- | imoh
0859 : 1060; -- ' str
085A : 2009; -- . imov [jmp!    .ps]
085B : 300C; -- | imoh
085C : A000; -- ' j_op
085D : 260B; -- . imov [imov! t0 11]
085E : 3600; -- ' imoh
085F : 5D60; --   push t0
0860 : 260A; -- . imov [imov! t0 10]
0861 : 3600; -- ' imoh
0862 : 5D60; --   push t0
0863 : 260B; -- . imov [imov! t0 11]
0864 : 3600; -- ' imoh
0865 : 5D60; --   push t0
0866 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0867 : 3680; -- | imoh
0868 : 0660; -- ' load
0869 : 67D0; -- . pop [pop!    t1]
086A : 1670; --   str     t0 t1
086B : 9614; --   iadd    t0 1
086C : 67D0; -- . pop [pop!    t1]
086D : 1670; --   str     t0 t1
086E : 9614; --   iadd    t0 1
086F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0870 : 3080; -- | imoh
0871 : 1060; -- ' str
0872 : 260B; -- . imov [imov! t0 11]
0873 : 3600; -- ' imoh
0874 : 5D60; --   push t0
0875 : 67D0; -- . pop [pop! t1 t0]
0876 : 66D0; -- ' pop
0877 : 2801; --   imov t2 1  # default value
0878 : 8675; --   sub  t0 t1
0879 : 207D; -- . imov [jz!  .test_let_body_0_let_block_0_0_opskip]
087A : 3008; -- | imoh
087B : A001; -- ' j_op
087C : 2800; --   imov t2 0
087D : 5D80; -- . push [push! t2]
087E : 26E7; -- . imov [imov! t0 .string_alloc_32]
087F : 3601; -- ' imoh
0880 : 5D60; -- . push [push! t0]
0881 : 66D0; -- . pop [pop! t0 t1]
0882 : 67D0; -- ' pop
0883 : 5D60; -- . push [push! t0 t1]
0884 : 5D70; -- ' push
0885 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0886 : 3680; -- | imoh
0887 : 0660; -- ' load
0888 : 2792; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr0]
0889 : 3708; -- ' imoh
088A : 1670; --   str     t0 t1
088B : 9614; --   iadd    t0 1
088C : 2003; -- . imov [str!    .ret_stack_ptr t0]
088D : 3080; -- | imoh
088E : 1060; -- ' str
088F : 20AA; -- . imov [jmp!    .assert]
0890 : 3002; -- | imoh
0891 : A000; -- ' j_op
0892 : 26CC; -- . imov [imov! t0 .string_alloc_33]
0893 : 3601; -- ' imoh
0894 : 5D60; -- . push [push! t0]
0895 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0896 : 3680; -- | imoh
0897 : 0660; -- ' load
0898 : 2701; -- . imov [imov!   t1 1]
0899 : 3700; -- ' imoh
089A : 8675; --   sub     t0 t1
089B : 5D60; -- . push [push!   t0]
089C : 66D0; -- . pop [pop! t0]
089D : 0660; --   load t0 t0
089E : 5D60; -- . push [push! t0]
089F : 260A; -- . imov [imov! t0 10]
08A0 : 3600; -- ' imoh
08A1 : 5D60; --   push t0
08A2 : 67D0; -- . pop [pop! t1 t0]
08A3 : 66D0; -- ' pop
08A4 : 2801; --   imov t2 1  # default value
08A5 : 8675; --   sub  t0 t1
08A6 : 20AA; -- . imov [jz!  .test_let_body_0_let_block_1_0_opskip]
08A7 : 3008; -- | imoh
08A8 : A001; -- ' j_op
08A9 : 2800; --   imov t2 0
08AA : 5D80; -- . push [push! t2]
08AB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08AC : 3680; -- | imoh
08AD : 0660; -- ' load
08AE : 27B8; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr1]
08AF : 3708; -- ' imoh
08B0 : 1670; --   str     t0 t1
08B1 : 9614; --   iadd    t0 1
08B2 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08B3 : 3080; -- | imoh
08B4 : 1060; -- ' str
08B5 : 20AA; -- . imov [jmp!    .assert]
08B6 : 3002; -- | imoh
08B7 : A000; -- ' j_op
08B8 : 2687; -- . imov [imov! t0 .string_alloc_34]
08B9 : 3600; -- ' imoh
08BA : 5D60; -- . push [push! t0]
08BB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08BC : 3680; -- | imoh
08BD : 0660; -- ' load
08BE : 2702; -- . imov [imov!   t1 2]
08BF : 3700; -- ' imoh
08C0 : 8675; --   sub     t0 t1
08C1 : 5D60; -- . push [push!   t0]
08C2 : 66D0; -- . pop [pop! t0]
08C3 : 0660; --   load t0 t0
08C4 : 5D60; -- . push [push! t0]
08C5 : 260B; -- . imov [imov! t0 11]
08C6 : 3600; -- ' imoh
08C7 : 5D60; --   push t0
08C8 : 67D0; -- . pop [pop! t1 t0]
08C9 : 66D0; -- ' pop
08CA : 2801; --   imov t2 1  # default value
08CB : 8675; --   sub  t0 t1
08CC : 20D0; -- . imov [jz!  .test_let_body_0_let_block_2_0_opskip]
08CD : 3008; -- | imoh
08CE : A001; -- ' j_op
08CF : 2800; --   imov t2 0
08D0 : 5D80; -- . push [push! t2]
08D1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08D2 : 3680; -- | imoh
08D3 : 0660; -- ' load
08D4 : 27DE; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr2]
08D5 : 3708; -- ' imoh
08D6 : 1670; --   str     t0 t1
08D7 : 9614; --   iadd    t0 1
08D8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08D9 : 3080; -- | imoh
08DA : 1060; -- ' str
08DB : 20AA; -- . imov [jmp!    .assert]
08DC : 3002; -- | imoh
08DD : A000; -- ' j_op
08DE : 260C; -- . imov [imov! t0 12]
08DF : 3600; -- ' imoh
08E0 : 5D60; --   push t0
08E1 : 260D; -- . imov [imov! t0 13]
08E2 : 3600; -- ' imoh
08E3 : 5D60; --   push t0
08E4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08E5 : 3680; -- | imoh
08E6 : 0660; -- ' load
08E7 : 67D0; -- . pop [pop!    t1]
08E8 : 1670; --   str     t0 t1
08E9 : 9614; --   iadd    t0 1
08EA : 67D0; -- . pop [pop!    t1]
08EB : 1670; --   str     t0 t1
08EC : 9614; --   iadd    t0 1
08ED : 2003; -- . imov [str!    .ret_stack_ptr t0]
08EE : 3080; -- | imoh
08EF : 1060; -- ' str
08F0 : 26CE; -- . imov [imov! t0 .string_alloc_35]
08F1 : 3600; -- ' imoh
08F2 : 5D60; -- . push [push! t0]
08F3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08F4 : 3680; -- | imoh
08F5 : 0660; -- ' load
08F6 : 2703; -- . imov [imov!   t1 3]
08F7 : 3700; -- ' imoh
08F8 : 8675; --   sub     t0 t1
08F9 : 5D60; -- . push [push!   t0]
08FA : 66D0; -- . pop [pop! t0]
08FB : 0660; --   load t0 t0
08FC : 5D60; -- . push [push! t0]
08FD : 260A; -- . imov [imov! t0 10]
08FE : 3600; -- ' imoh
08FF : 5D60; --   push t0
0900 : 67D0; -- . pop [pop! t1 t0]
0901 : 66D0; -- ' pop
0902 : 2801; --   imov t2 1  # default value
0903 : 8675; --   sub  t0 t1
0904 : 2008; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_0_0_opskip]
0905 : 3009; -- | imoh
0906 : A001; -- ' j_op
0907 : 2800; --   imov t2 0
0908 : 5D80; -- . push [push! t2]
0909 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
090A : 3680; -- | imoh
090B : 0660; -- ' load
090C : 2716; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr0]
090D : 3709; -- ' imoh
090E : 1670; --   str     t0 t1
090F : 9614; --   iadd    t0 1
0910 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0911 : 3080; -- | imoh
0912 : 1060; -- ' str
0913 : 20AA; -- . imov [jmp!    .assert]
0914 : 3002; -- | imoh
0915 : A000; -- ' j_op
0916 : 261A; -- . imov [imov! t0 .string_alloc_36]
0917 : 3601; -- ' imoh
0918 : 5D60; -- . push [push! t0]
0919 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
091A : 3680; -- | imoh
091B : 0660; -- ' load
091C : 2701; -- . imov [imov!   t1 1]
091D : 3700; -- ' imoh
091E : 8675; --   sub     t0 t1
091F : 5D60; -- . push [push!   t0]
0920 : 66D0; -- . pop [pop! t0]
0921 : 0660; --   load t0 t0
0922 : 5D60; -- . push [push! t0]
0923 : 260C; -- . imov [imov! t0 12]
0924 : 3600; -- ' imoh
0925 : 5D60; --   push t0
0926 : 67D0; -- . pop [pop! t1 t0]
0927 : 66D0; -- ' pop
0928 : 2801; --   imov t2 1  # default value
0929 : 8675; --   sub  t0 t1
092A : 202E; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_1_0_opskip]
092B : 3009; -- | imoh
092C : A001; -- ' j_op
092D : 2800; --   imov t2 0
092E : 5D80; -- . push [push! t2]
092F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0930 : 3680; -- | imoh
0931 : 0660; -- ' load
0932 : 273C; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr1]
0933 : 3709; -- ' imoh
0934 : 1670; --   str     t0 t1
0935 : 9614; --   iadd    t0 1
0936 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0937 : 3080; -- | imoh
0938 : 1060; -- ' str
0939 : 20AA; -- . imov [jmp!    .assert]
093A : 3002; -- | imoh
093B : A000; -- ' j_op
093C : 2602; -- . imov [imov! t0 .string_alloc_37]
093D : 3601; -- ' imoh
093E : 5D60; -- . push [push! t0]
093F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0940 : 3680; -- | imoh
0941 : 0660; -- ' load
0942 : 2702; -- . imov [imov!   t1 2]
0943 : 3700; -- ' imoh
0944 : 8675; --   sub     t0 t1
0945 : 5D60; -- . push [push!   t0]
0946 : 66D0; -- . pop [pop! t0]
0947 : 0660; --   load t0 t0
0948 : 5D60; -- . push [push! t0]
0949 : 260D; -- . imov [imov! t0 13]
094A : 3600; -- ' imoh
094B : 5D60; --   push t0
094C : 67D0; -- . pop [pop! t1 t0]
094D : 66D0; -- ' pop
094E : 2801; --   imov t2 1  # default value
094F : 8675; --   sub  t0 t1
0950 : 2054; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_2_0_opskip]
0951 : 3009; -- | imoh
0952 : A001; -- ' j_op
0953 : 2800; --   imov t2 0
0954 : 5D80; -- . push [push! t2]
0955 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0956 : 3680; -- | imoh
0957 : 0660; -- ' load
0958 : 2762; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr2]
0959 : 3709; -- ' imoh
095A : 1670; --   str     t0 t1
095B : 9614; --   iadd    t0 1
095C : 2003; -- . imov [str!    .ret_stack_ptr t0]
095D : 3080; -- | imoh
095E : 1060; -- ' str
095F : 20AA; -- . imov [jmp!    .assert]
0960 : 3002; -- | imoh
0961 : A000; -- ' j_op
0962 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0963 : 3680; -- | imoh
0964 : 0660; -- ' load
0965 : 2702; -- . imov [imov!   t1 2]
0966 : 3700; -- ' imoh
0967 : 8675; --   sub     t0 t1
0968 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0969 : 3080; -- | imoh
096A : 1060; -- ' str
096B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
096C : 3680; -- | imoh
096D : 0660; -- ' load
096E : 2702; -- . imov [imov!   t1 2]
096F : 3700; -- ' imoh
0970 : 8675; --   sub     t0 t1
0971 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0972 : 3080; -- | imoh
0973 : 1060; -- ' str
0974 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0975 : 3680; -- | imoh
0976 : 0660; -- ' load
0977 : 9615; --   isub    t0 1
0978 : 0760; --   load    t1 t0
0979 : 2003; -- . imov [str!    .ret_stack_ptr t0]
097A : 3080; -- | imoh
097B : 1060; -- ' str
097C : A700; --   jmp     t1
097D : 268A; -- . imov [imov! t0 .string_alloc_38]
097E : 3600; -- ' imoh
097F : 5D60; -- . push [push! t0]
0980 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0981 : 3680; -- | imoh
0982 : 0660; -- ' load
0983 : 278D; -- . imov [imov!   t1 .test_mul_body_retaddr0]
0984 : 3709; -- ' imoh
0985 : 1670; --   str     t0 t1
0986 : 9614; --   iadd    t0 1
0987 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0988 : 3080; -- | imoh
0989 : 1060; -- ' str
098A : 2009; -- . imov [jmp!    .ps]
098B : 300C; -- | imoh
098C : A000; -- ' j_op
098D : 261D; -- . imov [imov! t0 .string_alloc_39]
098E : 3601; -- ' imoh
098F : 5D60; -- . push [push! t0]
0990 : 2601; -- . imov [imov! t0 1]
0991 : 3600; -- ' imoh
0992 : 5D60; --   push t0
0993 : 2602; -- . imov [imov! t0 2]
0994 : 3600; -- ' imoh
0995 : 5D60; --   push t0
0996 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0997 : 3680; -- | imoh
0998 : 0660; -- ' load
0999 : 27A3; -- . imov [imov!   t1 .test_mul_body_0_retaddr0]
099A : 3709; -- ' imoh
099B : 1670; --   str     t0 t1
099C : 9614; --   iadd    t0 1
099D : 2003; -- . imov [str!    .ret_stack_ptr t0]
099E : 3080; -- | imoh
099F : 1060; -- ' str
09A0 : 2021; -- . imov [jmp!    .mul]
09A1 : 3003; -- | imoh
09A2 : A000; -- ' j_op
09A3 : 2602; -- . imov [imov! t0 2]
09A4 : 3600; -- ' imoh
09A5 : 5D60; --   push t0
09A6 : 67D0; -- . pop [pop! t1 t0]
09A7 : 66D0; -- ' pop
09A8 : 2801; --   imov t2 1  # default value
09A9 : 8675; --   sub  t0 t1
09AA : 20AE; -- . imov [jz!  .test_mul_body_0_0_opskip]
09AB : 3009; -- | imoh
09AC : A001; -- ' j_op
09AD : 2800; --   imov t2 0
09AE : 5D80; -- . push [push! t2]
09AF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09B0 : 3680; -- | imoh
09B1 : 0660; -- ' load
09B2 : 27BC; -- . imov [imov!   t1 .test_mul_body_retaddr1]
09B3 : 3709; -- ' imoh
09B4 : 1670; --   str     t0 t1
09B5 : 9614; --   iadd    t0 1
09B6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
09B7 : 3080; -- | imoh
09B8 : 1060; -- ' str
09B9 : 20AA; -- . imov [jmp!    .assert]
09BA : 3002; -- | imoh
09BB : A000; -- ' j_op
09BC : 26E2; -- . imov [imov! t0 .string_alloc_40]
09BD : 3600; -- ' imoh
09BE : 5D60; -- . push [push! t0]
09BF : 2602; -- . imov [imov! t0 2]
09C0 : 3600; -- ' imoh
09C1 : 5D60; --   push t0
09C2 : 2605; -- . imov [imov! t0 5]
09C3 : 3600; -- ' imoh
09C4 : 5D60; --   push t0
09C5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09C6 : 3680; -- | imoh
09C7 : 0660; -- ' load
09C8 : 27D2; -- . imov [imov!   t1 .test_mul_body_1_retaddr0]
09C9 : 3709; -- ' imoh
09CA : 1670; --   str     t0 t1
09CB : 9614; --   iadd    t0 1
09CC : 2003; -- . imov [str!    .ret_stack_ptr t0]
09CD : 3080; -- | imoh
09CE : 1060; -- ' str
09CF : 2021; -- . imov [jmp!    .mul]
09D0 : 3003; -- | imoh
09D1 : A000; -- ' j_op
09D2 : 260A; -- . imov [imov! t0 10]
09D3 : 3600; -- ' imoh
09D4 : 5D60; --   push t0
09D5 : 67D0; -- . pop [pop! t1 t0]
09D6 : 66D0; -- ' pop
09D7 : 2801; --   imov t2 1  # default value
09D8 : 8675; --   sub  t0 t1
09D9 : 20DD; -- . imov [jz!  .test_mul_body_1_0_opskip]
09DA : 3009; -- | imoh
09DB : A001; -- ' j_op
09DC : 2800; --   imov t2 0
09DD : 5D80; -- . push [push! t2]
09DE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09DF : 3680; -- | imoh
09E0 : 0660; -- ' load
09E1 : 27EB; -- . imov [imov!   t1 .test_mul_body_retaddr2]
09E2 : 3709; -- ' imoh
09E3 : 1670; --   str     t0 t1
09E4 : 9614; --   iadd    t0 1
09E5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
09E6 : 3080; -- | imoh
09E7 : 1060; -- ' str
09E8 : 20AA; -- . imov [jmp!    .assert]
09E9 : 3002; -- | imoh
09EA : A000; -- ' j_op
09EB : 2627; -- . imov [imov! t0 .string_alloc_41]
09EC : 3600; -- ' imoh
09ED : 5D60; -- . push [push! t0]
09EE : 2600; -- . imov [imov! t0 0]
09EF : 3600; -- ' imoh
09F0 : 5D60; --   push t0
09F1 : 260A; -- . imov [imov! t0 10]
09F2 : 3600; -- ' imoh
09F3 : 5D60; --   push t0
09F4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09F5 : 3680; -- | imoh
09F6 : 0660; -- ' load
09F7 : 2701; -- . imov [imov!   t1 .test_mul_body_2_retaddr0]
09F8 : 370A; -- ' imoh
09F9 : 1670; --   str     t0 t1
09FA : 9614; --   iadd    t0 1
09FB : 2003; -- . imov [str!    .ret_stack_ptr t0]
09FC : 3080; -- | imoh
09FD : 1060; -- ' str
09FE : 2021; -- . imov [jmp!    .mul]
09FF : 3003; -- | imoh
0A00 : A000; -- ' j_op
0A01 : 2600; -- . imov [imov! t0 0]
0A02 : 3600; -- ' imoh
0A03 : 5D60; --   push t0
0A04 : 67D0; -- . pop [pop! t1 t0]
0A05 : 66D0; -- ' pop
0A06 : 2801; --   imov t2 1  # default value
0A07 : 8675; --   sub  t0 t1
0A08 : 200C; -- . imov [jz!  .test_mul_body_2_0_opskip]
0A09 : 300A; -- | imoh
0A0A : A001; -- ' j_op
0A0B : 2800; --   imov t2 0
0A0C : 5D80; -- . push [push! t2]
0A0D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A0E : 3680; -- | imoh
0A0F : 0660; -- ' load
0A10 : 271A; -- . imov [imov!   t1 .test_mul_body_retaddr3]
0A11 : 370A; -- ' imoh
0A12 : 1670; --   str     t0 t1
0A13 : 9614; --   iadd    t0 1
0A14 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A15 : 3080; -- | imoh
0A16 : 1060; -- ' str
0A17 : 20AA; -- . imov [jmp!    .assert]
0A18 : 3002; -- | imoh
0A19 : A000; -- ' j_op
0A1A : 26B2; -- . imov [imov! t0 .string_alloc_42]
0A1B : 3601; -- ' imoh
0A1C : 5D60; -- . push [push! t0]
0A1D : 260A; -- . imov [imov! t0 10]
0A1E : 3600; -- ' imoh
0A1F : 5D60; --   push t0
0A20 : 2600; -- . imov [imov! t0 0]
0A21 : 3600; -- ' imoh
0A22 : 5D60; --   push t0
0A23 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A24 : 3680; -- | imoh
0A25 : 0660; -- ' load
0A26 : 2730; -- . imov [imov!   t1 .test_mul_body_3_retaddr0]
0A27 : 370A; -- ' imoh
0A28 : 1670; --   str     t0 t1
0A29 : 9614; --   iadd    t0 1
0A2A : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A2B : 3080; -- | imoh
0A2C : 1060; -- ' str
0A2D : 2021; -- . imov [jmp!    .mul]
0A2E : 3003; -- | imoh
0A2F : A000; -- ' j_op
0A30 : 2600; -- . imov [imov! t0 0]
0A31 : 3600; -- ' imoh
0A32 : 5D60; --   push t0
0A33 : 67D0; -- . pop [pop! t1 t0]
0A34 : 66D0; -- ' pop
0A35 : 2801; --   imov t2 1  # default value
0A36 : 8675; --   sub  t0 t1
0A37 : 203B; -- . imov [jz!  .test_mul_body_3_0_opskip]
0A38 : 300A; -- | imoh
0A39 : A001; -- ' j_op
0A3A : 2800; --   imov t2 0
0A3B : 5D80; -- . push [push! t2]
0A3C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A3D : 3680; -- | imoh
0A3E : 0660; -- ' load
0A3F : 2749; -- . imov [imov!   t1 .test_mul_body_retaddr4]
0A40 : 370A; -- ' imoh
0A41 : 1670; --   str     t0 t1
0A42 : 9614; --   iadd    t0 1
0A43 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A44 : 3080; -- | imoh
0A45 : 1060; -- ' str
0A46 : 20AA; -- . imov [jmp!    .assert]
0A47 : 3002; -- | imoh
0A48 : A000; -- ' j_op
0A49 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A4A : 3680; -- | imoh
0A4B : 0660; -- ' load
0A4C : 9615; --   isub    t0 1
0A4D : 0760; --   load    t1 t0
0A4E : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A4F : 3080; -- | imoh
0A50 : 1060; -- ' str
0A51 : A700; --   jmp     t1
0A52 : 262E; -- . imov [imov! t0 .string_alloc_43]
0A53 : 3600; -- ' imoh
0A54 : 5D60; -- . push [push! t0]
0A55 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A56 : 3680; -- | imoh
0A57 : 0660; -- ' load
0A58 : 2762; -- . imov [imov!   t1 .test_global_body_retaddr0]
0A59 : 370A; -- ' imoh
0A5A : 1670; --   str     t0 t1
0A5B : 9614; --   iadd    t0 1
0A5C : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A5D : 3080; -- | imoh
0A5E : 1060; -- ' str
0A5F : 2009; -- . imov [jmp!    .ps]
0A60 : 300C; -- | imoh
0A61 : A000; -- ' j_op
0A62 : 2629; -- . imov [imov! t0 .string_alloc_44]
0A63 : 3601; -- ' imoh
0A64 : 5D60; -- . push [push! t0]
0A65 : 2600; -- . imov [imov! t0 .variable_alloc_var1]
0A66 : 3680; -- ' imoh
0A67 : 5D60; -- . push [push! t0]
0A68 : 66D0; -- . pop [pop! t0]
0A69 : 0660; --   load t0 t0
0A6A : 5D60; -- . push [push! t0]
0A6B : 26AD; -- . imov [imov! t0 57005]
0A6C : 36DE; -- ' imoh
0A6D : 5D60; --   push t0
0A6E : 67D0; -- . pop [pop! t1 t0]
0A6F : 66D0; -- ' pop
0A70 : 2801; --   imov t2 1  # default value
0A71 : 8675; --   sub  t0 t1
0A72 : 2076; -- . imov [jz!  .test_global_body_0_0_opskip]
0A73 : 300A; -- | imoh
0A74 : A001; -- ' j_op
0A75 : 2800; --   imov t2 0
0A76 : 5D80; -- . push [push! t2]
0A77 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A78 : 3680; -- | imoh
0A79 : 0660; -- ' load
0A7A : 2784; -- . imov [imov!   t1 .test_global_body_retaddr1]
0A7B : 370A; -- ' imoh
0A7C : 1670; --   str     t0 t1
0A7D : 9614; --   iadd    t0 1
0A7E : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A7F : 3080; -- | imoh
0A80 : 1060; -- ' str
0A81 : 20AA; -- . imov [jmp!    .assert]
0A82 : 3002; -- | imoh
0A83 : A000; -- ' j_op
0A84 : 26D8; -- . imov [imov! t0 .string_alloc_45]
0A85 : 3600; -- ' imoh
0A86 : 5D60; -- . push [push! t0]
0A87 : 260A; -- . imov [imov! t0 10]
0A88 : 3600; -- ' imoh
0A89 : 5D60; --   push t0
0A8A : 2600; -- . imov [imov! t0 .variable_alloc_var1]
0A8B : 3680; -- ' imoh
0A8C : 5D60; -- . push [push! t0]
0A8D : 67D0; -- . pop [pop! t1 t0]
0A8E : 66D0; -- ' pop
0A8F : 1760; --   str  t1 t0
0A90 : 2600; -- . imov [imov! t0 .variable_alloc_var1]
0A91 : 3680; -- ' imoh
0A92 : 5D60; -- . push [push! t0]
0A93 : 66D0; -- . pop [pop! t0]
0A94 : 0660; --   load t0 t0
0A95 : 5D60; -- . push [push! t0]
0A96 : 260A; -- . imov [imov! t0 10]
0A97 : 3600; -- ' imoh
0A98 : 5D60; --   push t0
0A99 : 67D0; -- . pop [pop! t1 t0]
0A9A : 66D0; -- ' pop
0A9B : 2801; --   imov t2 1  # default value
0A9C : 8675; --   sub  t0 t1
0A9D : 20A1; -- . imov [jz!  .test_global_body_1_0_opskip]
0A9E : 300A; -- | imoh
0A9F : A001; -- ' j_op
0AA0 : 2800; --   imov t2 0
0AA1 : 5D80; -- . push [push! t2]
0AA2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AA3 : 3680; -- | imoh
0AA4 : 0660; -- ' load
0AA5 : 27AF; -- . imov [imov!   t1 .test_global_body_retaddr2]
0AA6 : 370A; -- ' imoh
0AA7 : 1670; --   str     t0 t1
0AA8 : 9614; --   iadd    t0 1
0AA9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AAA : 3080; -- | imoh
0AAB : 1060; -- ' str
0AAC : 20AA; -- . imov [jmp!    .assert]
0AAD : 3002; -- | imoh
0AAE : A000; -- ' j_op
0AAF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AB0 : 3680; -- | imoh
0AB1 : 0660; -- ' load
0AB2 : 9615; --   isub    t0 1
0AB3 : 0760; --   load    t1 t0
0AB4 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AB5 : 3080; -- | imoh
0AB6 : 1060; -- ' str
0AB7 : A700; --   jmp     t1
0AB8 : 26CF; -- . imov [imov! t0 .string_alloc_46]
0AB9 : 3601; -- ' imoh
0ABA : 5D60; -- . push [push! t0]
0ABB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0ABC : 3680; -- | imoh
0ABD : 0660; -- ' load
0ABE : 27C8; -- . imov [imov!   t1 .main_body_retaddr0]
0ABF : 370A; -- ' imoh
0AC0 : 1670; --   str     t0 t1
0AC1 : 9614; --   iadd    t0 1
0AC2 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AC3 : 3080; -- | imoh
0AC4 : 1060; -- ' str
0AC5 : 2009; -- . imov [jmp!    .ps]
0AC6 : 300C; -- | imoh
0AC7 : A000; -- ' j_op
0AC8 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AC9 : 3680; -- | imoh
0ACA : 0660; -- ' load
0ACB : 27D5; -- . imov [imov!   t1 .main_body_retaddr1]
0ACC : 370A; -- ' imoh
0ACD : 1670; --   str     t0 t1
0ACE : 9614; --   iadd    t0 1
0ACF : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AD0 : 3080; -- | imoh
0AD1 : 1060; -- ' str
0AD2 : 209E; -- . imov [jmp!    .test_sum]
0AD3 : 3003; -- | imoh
0AD4 : A000; -- ' j_op
0AD5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AD6 : 3680; -- | imoh
0AD7 : 0660; -- ' load
0AD8 : 27E2; -- . imov [imov!   t1 .main_body_retaddr2]
0AD9 : 370A; -- ' imoh
0ADA : 1670; --   str     t0 t1
0ADB : 9614; --   iadd    t0 1
0ADC : 2003; -- . imov [str!    .ret_stack_ptr t0]
0ADD : 3080; -- | imoh
0ADE : 1060; -- ' str
0ADF : 201D; -- . imov [jmp!    .test_arith]
0AE0 : 3004; -- | imoh
0AE1 : A000; -- ' j_op
0AE2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AE3 : 3680; -- | imoh
0AE4 : 0660; -- ' load
0AE5 : 27EF; -- . imov [imov!   t1 .main_body_retaddr3]
0AE6 : 370A; -- ' imoh
0AE7 : 1670; --   str     t0 t1
0AE8 : 9614; --   iadd    t0 1
0AE9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AEA : 3080; -- | imoh
0AEB : 1060; -- ' str
0AEC : 2090; -- . imov [jmp!    .test_logical]
0AED : 3006; -- | imoh
0AEE : A000; -- ' j_op
0AEF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AF0 : 3680; -- | imoh
0AF1 : 0660; -- ' load
0AF2 : 27FC; -- . imov [imov!   t1 .main_body_retaddr4]
0AF3 : 370A; -- ' imoh
0AF4 : 1670; --   str     t0 t1
0AF5 : 9614; --   iadd    t0 1
0AF6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0AF7 : 3080; -- | imoh
0AF8 : 1060; -- ' str
0AF9 : 20DC; -- . imov [jmp!    .test_strlen]
0AFA : 3007; -- | imoh
0AFB : A000; -- ' j_op
0AFC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0AFD : 3680; -- | imoh
0AFE : 0660; -- ' load
0AFF : 2709; -- . imov [imov!   t1 .main_body_retaddr5]
0B00 : 370B; -- ' imoh
0B01 : 1670; --   str     t0 t1
0B02 : 9614; --   iadd    t0 1
0B03 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B04 : 3080; -- | imoh
0B05 : 1060; -- ' str
0B06 : 204D; -- . imov [jmp!    .test_let]
0B07 : 3008; -- | imoh
0B08 : A000; -- ' j_op
0B09 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B0A : 3680; -- | imoh
0B0B : 0660; -- ' load
0B0C : 2716; -- . imov [imov!   t1 .main_body_retaddr6]
0B0D : 370B; -- ' imoh
0B0E : 1670; --   str     t0 t1
0B0F : 9614; --   iadd    t0 1
0B10 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B11 : 3080; -- | imoh
0B12 : 1060; -- ' str
0B13 : 207D; -- . imov [jmp!    .test_mul]
0B14 : 3009; -- | imoh
0B15 : A000; -- ' j_op
0B16 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B17 : 3680; -- | imoh
0B18 : 0660; -- ' load
0B19 : 2723; -- . imov [imov!   t1 .main_body_retaddr7]
0B1A : 370B; -- ' imoh
0B1B : 1670; --   str     t0 t1
0B1C : 9614; --   iadd    t0 1
0B1D : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B1E : 3080; -- | imoh
0B1F : 1060; -- ' str
0B20 : 2052; -- . imov [jmp!    .test_global]
0B21 : 300A; -- | imoh
0B22 : A000; -- ' j_op
0B23 : 2638; -- . imov [imov! t0 .string_alloc_47]
0B24 : 3601; -- ' imoh
0B25 : 5D60; -- . push [push! t0]
0B26 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B27 : 3680; -- | imoh
0B28 : 0660; -- ' load
0B29 : 2733; -- . imov [imov!   t1 .main_body_retaddr8]
0B2A : 370B; -- ' imoh
0B2B : 1670; --   str     t0 t1
0B2C : 9614; --   iadd    t0 1
0B2D : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B2E : 3080; -- | imoh
0B2F : 1060; -- ' str
0B30 : 2009; -- . imov [jmp!    .ps]
0B31 : 300C; -- | imoh
0B32 : A000; -- ' j_op
0B33 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B34 : 3680; -- | imoh
0B35 : 0660; -- ' load
0B36 : 9615; --   isub    t0 1
0B37 : 0760; --   load    t1 t0
0B38 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B39 : 3080; -- | imoh
0B3A : 1060; -- ' str
0B3B : A700; --   jmp     t1
0B3C : 66D0; -- . pop [pop! t0]
0B3D : 5D60; -- . push [push! t0 t0]
0B3E : 5D60; -- ' push
0B3F : 260A; -- . imov [imov! t0 10]
0B40 : 3600; -- ' imoh
0B41 : 5D60; --   push t0
0B42 : 67D0; -- . pop [pop! t1 t0]
0B43 : 66D0; -- ' pop
0B44 : 2801; --   imov t2 1  # default value
0B45 : 8675; --   sub  t0 t1
0B46 : 204A; -- . imov [jn!  .ph_body_0_opskip]
0B47 : 300B; -- | imoh
0B48 : A003; -- ' j_op
0B49 : 2800; --   imov t2 0
0B4A : 5D80; -- . push [push! t2]
0B4B : 66D0; -- . pop [pop! t0]
0B4C : 9607; --   tst  t0
0B4D : 2067; -- . imov [jz!  .ph_body_1_else]
0B4E : 300B; -- | imoh
0B4F : A001; -- ' j_op
0B50 : 2630; -- . imov [imov! t0 48]
0B51 : 3600; -- ' imoh
0B52 : 5D60; --   push t0
0B53 : 67D0; -- . pop [pop!  t1 t0]
0B54 : 66D0; -- ' pop
0B55 : 8674; --   add   t0 t1
0B56 : 5D60; -- . push [push! t0]
0B57 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B58 : 3680; -- | imoh
0B59 : 0660; -- ' load
0B5A : 2764; -- . imov [imov!   t1 .ph_body_1_if_retaddr0]
0B5B : 370B; -- ' imoh
0B5C : 1670; --   str     t0 t1
0B5D : 9614; --   iadd    t0 1
0B5E : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B5F : 3080; -- | imoh
0B60 : 1060; -- ' str
0B61 : 20EA; -- . imov [jmp!    .pc]
0B62 : 3001; -- | imoh
0B63 : A000; -- ' j_op
0B64 : 2082; -- . imov [jmp! .ph_body_1_if_exit]
0B65 : 300B; -- | imoh
0B66 : A000; -- ' j_op
0B67 : 260A; -- . imov [imov! t0 10]
0B68 : 3600; -- ' imoh
0B69 : 5D60; --   push t0
0B6A : 67D0; -- . pop [pop!  t1 t0]
0B6B : 66D0; -- ' pop
0B6C : 8675; --   sub   t0 t1
0B6D : 5D60; -- . push [push! t0]
0B6E : 2641; -- . imov [imov! t0 65]
0B6F : 3600; -- ' imoh
0B70 : 5D60; --   push t0
0B71 : 67D0; -- . pop [pop!  t1 t0]
0B72 : 66D0; -- ' pop
0B73 : 8674; --   add   t0 t1
0B74 : 5D60; -- . push [push! t0]
0B75 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B76 : 3680; -- | imoh
0B77 : 0660; -- ' load
0B78 : 2782; -- . imov [imov!   t1 .ph_body_1_else_retaddr0]
0B79 : 370B; -- ' imoh
0B7A : 1670; --   str     t0 t1
0B7B : 9614; --   iadd    t0 1
0B7C : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B7D : 3080; -- | imoh
0B7E : 1060; -- ' str
0B7F : 20EA; -- . imov [jmp!    .pc]
0B80 : 3001; -- | imoh
0B81 : A000; -- ' j_op
0B82 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B83 : 3680; -- | imoh
0B84 : 0660; -- ' load
0B85 : 9615; --   isub    t0 1
0B86 : 0760; --   load    t1 t0
0B87 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B88 : 3080; -- | imoh
0B89 : 1060; -- ' str
0B8A : A700; --   jmp     t1
0B8B : 66D0; -- . pop [pop! t0]
0B8C : 5D60; -- . push [push! t0 t0]
0B8D : 5D60; -- ' push
0B8E : 2604; -- . imov [imov! t0 4]
0B8F : 3600; -- ' imoh
0B90 : 5D60; --   push t0
0B91 : 67D0; -- . pop [pop!  t1 t0]
0B92 : 66D0; -- ' pop
0B93 : 8679; --   sshr  t0 t1
0B94 : 5D60; -- . push [push! t0]
0B95 : 260F; -- . imov [imov! t0 15]
0B96 : 3600; -- ' imoh
0B97 : 5D60; --   push t0
0B98 : 67D0; -- . pop [pop!  t1 t0]
0B99 : 66D0; -- ' pop
0B9A : 8671; --   and   t0 t1
0B9B : 5D60; -- . push [push! t0]
0B9C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B9D : 3680; -- | imoh
0B9E : 0660; -- ' load
0B9F : 27A9; -- . imov [imov!   t1 .pn_body_retaddr0]
0BA0 : 370B; -- ' imoh
0BA1 : 1670; --   str     t0 t1
0BA2 : 9614; --   iadd    t0 1
0BA3 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BA4 : 3080; -- | imoh
0BA5 : 1060; -- ' str
0BA6 : 203C; -- . imov [jmp!    .ph]
0BA7 : 300B; -- | imoh
0BA8 : A000; -- ' j_op
0BA9 : 66D0; -- . pop [pop! t0]
0BAA : 5D60; -- . push [push! t0 t0]
0BAB : 5D60; -- ' push
0BAC : 260F; -- . imov [imov! t0 15]
0BAD : 3600; -- ' imoh
0BAE : 5D60; --   push t0
0BAF : 67D0; -- . pop [pop!  t1 t0]
0BB0 : 66D0; -- ' pop
0BB1 : 8671; --   and   t0 t1
0BB2 : 5D60; -- . push [push! t0]
0BB3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BB4 : 3680; -- | imoh
0BB5 : 0660; -- ' load
0BB6 : 27C0; -- . imov [imov!   t1 .pn_body_retaddr1]
0BB7 : 370B; -- ' imoh
0BB8 : 1670; --   str     t0 t1
0BB9 : 9614; --   iadd    t0 1
0BBA : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BBB : 3080; -- | imoh
0BBC : 1060; -- ' str
0BBD : 203C; -- . imov [jmp!    .ph]
0BBE : 300B; -- | imoh
0BBF : A000; -- ' j_op
0BC0 : 66D0; -- . pop [pop! t0]
0BC1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BC2 : 3680; -- | imoh
0BC3 : 0660; -- ' load
0BC4 : 9615; --   isub    t0 1
0BC5 : 0760; --   load    t1 t0
0BC6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BC7 : 3080; -- | imoh
0BC8 : 1060; -- ' str
0BC9 : A700; --   jmp     t1
0BCA : 66D0; -- . pop [pop! t0]
0BCB : 5D60; -- . push [push! t0 t0]
0BCC : 5D60; -- ' push
0BCD : 2608; -- . imov [imov! t0 8]
0BCE : 3600; -- ' imoh
0BCF : 5D60; --   push t0
0BD0 : 67D0; -- . pop [pop!  t1 t0]
0BD1 : 66D0; -- ' pop
0BD2 : 8679; --   sshr  t0 t1
0BD3 : 5D60; -- . push [push! t0]
0BD4 : 26FF; -- . imov [imov! t0 255]
0BD5 : 3600; -- ' imoh
0BD6 : 5D60; --   push t0
0BD7 : 67D0; -- . pop [pop!  t1 t0]
0BD8 : 66D0; -- ' pop
0BD9 : 8671; --   and   t0 t1
0BDA : 5D60; -- . push [push! t0]
0BDB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BDC : 3680; -- | imoh
0BDD : 0660; -- ' load
0BDE : 27E8; -- . imov [imov!   t1 .p_body_retaddr0]
0BDF : 370B; -- ' imoh
0BE0 : 1670; --   str     t0 t1
0BE1 : 9614; --   iadd    t0 1
0BE2 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BE3 : 3080; -- | imoh
0BE4 : 1060; -- ' str
0BE5 : 208B; -- . imov [jmp!    .pn]
0BE6 : 300B; -- | imoh
0BE7 : A000; -- ' j_op
0BE8 : 66D0; -- . pop [pop! t0]
0BE9 : 5D60; -- . push [push! t0 t0]
0BEA : 5D60; -- ' push
0BEB : 26FF; -- . imov [imov! t0 255]
0BEC : 3600; -- ' imoh
0BED : 5D60; --   push t0
0BEE : 67D0; -- . pop [pop!  t1 t0]
0BEF : 66D0; -- ' pop
0BF0 : 8671; --   and   t0 t1
0BF1 : 5D60; -- . push [push! t0]
0BF2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BF3 : 3680; -- | imoh
0BF4 : 0660; -- ' load
0BF5 : 27FF; -- . imov [imov!   t1 .p_body_retaddr1]
0BF6 : 370B; -- ' imoh
0BF7 : 1670; --   str     t0 t1
0BF8 : 9614; --   iadd    t0 1
0BF9 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BFA : 3080; -- | imoh
0BFB : 1060; -- ' str
0BFC : 208B; -- . imov [jmp!    .pn]
0BFD : 300B; -- | imoh
0BFE : A000; -- ' j_op
0BFF : 66D0; -- . pop [pop! t0]
0C00 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C01 : 3680; -- | imoh
0C02 : 0660; -- ' load
0C03 : 9615; --   isub    t0 1
0C04 : 0760; --   load    t1 t0
0C05 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C06 : 3080; -- | imoh
0C07 : 1060; -- ' str
0C08 : A700; --   jmp     t1
0C09 : 66D0; -- . pop [pop! t0]
0C0A : 5D60; -- . push [push! t0 t0]
0C0B : 5D60; -- ' push
0C0C : 66D0; -- . pop [pop! t0]
0C0D : 0660; --   load t0 t0
0C0E : 5D60; -- . push [push! t0]
0C0F : 66D0; -- . pop [pop! t0]
0C10 : 5D60; -- . push [push! t0 t0]
0C11 : 5D60; -- ' push
0C12 : 66D0; -- . pop [pop! t0]
0C13 : 9607; --   tst  t0
0C14 : 2031; -- . imov [jz!  .ps_body_0_while_exit]
0C15 : 300C; -- | imoh
0C16 : A001; -- ' j_op
0C17 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C18 : 3680; -- | imoh
0C19 : 0660; -- ' load
0C1A : 2724; -- . imov [imov!   t1 .ps_body_0_while_block_retaddr0]
0C1B : 370C; -- ' imoh
0C1C : 1670; --   str     t0 t1
0C1D : 9614; --   iadd    t0 1
0C1E : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C1F : 3080; -- | imoh
0C20 : 1060; -- ' str
0C21 : 20EA; -- . imov [jmp!    .pc]
0C22 : 3001; -- | imoh
0C23 : A000; -- ' j_op
0C24 : 2601; -- . imov [imov! t0 1]
0C25 : 3600; -- ' imoh
0C26 : 5D60; --   push t0
0C27 : 67D0; -- . pop [pop!  t1 t0]
0C28 : 66D0; -- ' pop
0C29 : 8674; --   add   t0 t1
0C2A : 5D60; -- . push [push! t0]
0C2B : 66D0; -- . pop [pop! t0]
0C2C : 5D60; -- . push [push! t0 t0]
0C2D : 5D60; -- ' push
0C2E : 200C; -- . imov [jmp! .ps_body_0_while_eval]
0C2F : 300C; -- | imoh
0C30 : A000; -- ' j_op
0C31 : 66D0; -- . pop [pop! t0]
0C32 : 66D0; -- . pop [pop! t0]
0C33 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C34 : 3680; -- | imoh
0C35 : 0660; -- ' load
0C36 : 9615; --   isub    t0 1
0C37 : 0760; --   load    t1 t0
0C38 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C39 : 3080; -- | imoh
0C3A : 1060; -- ' str
0C3B : A700; --   jmp     t1
0C3C : 268F; -- . imov [imov! t0 .string_alloc_48]
0C3D : 3601; -- ' imoh
0C3E : 5D60; -- . push [push! t0]
0C3F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C40 : 3680; -- | imoh
0C41 : 0660; -- ' load
0C42 : 274C; -- . imov [imov!   t1 .fib_body_retaddr0]
0C43 : 370C; -- ' imoh
0C44 : 1670; --   str     t0 t1
0C45 : 9614; --   iadd    t0 1
0C46 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C47 : 3080; -- | imoh
0C48 : 1060; -- ' str
0C49 : 2009; -- . imov [jmp!    .ps]
0C4A : 300C; -- | imoh
0C4B : A000; -- ' j_op
0C4C : 2600; -- . imov [imov! t0 0]
0C4D : 3600; -- ' imoh
0C4E : 5D60; --   push t0
0C4F : 2601; -- . imov [imov! t0 1]
0C50 : 3600; -- ' imoh
0C51 : 5D60; --   push t0
0C52 : 66D0; -- . pop [pop! t0 t1]
0C53 : 67D0; -- ' pop
0C54 : 5D70; -- . push [push! t1 t0 t1]
0C55 : 5D60; -- | push
0C56 : 5D70; -- ' push
0C57 : 2610; -- . imov [imov! t0 10000]
0C58 : 3627; -- ' imoh
0C59 : 5D60; --   push t0
0C5A : 67D0; -- . pop [pop! t1 t0]
0C5B : 66D0; -- ' pop
0C5C : 2801; --   imov t2 1  # default value
0C5D : 8675; --   sub  t0 t1
0C5E : 2062; -- . imov [jn!  .fib_body_0_while_eval_0_opskip]
0C5F : 300C; -- | imoh
0C60 : A003; -- ' j_op
0C61 : 2800; --   imov t2 0
0C62 : 5D80; -- . push [push! t2]
0C63 : 66D0; -- . pop [pop! t0]
0C64 : 9607; --   tst  t0
0C65 : 209A; -- . imov [jz!  .fib_body_0_while_exit]
0C66 : 300C; -- | imoh
0C67 : A001; -- ' j_op
0C68 : 66D0; -- . pop [pop! t0 t1]
0C69 : 67D0; -- ' pop
0C6A : 5D70; -- . push [push! t1 t0 t1]
0C6B : 5D60; -- | push
0C6C : 5D70; -- ' push
0C6D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C6E : 3680; -- | imoh
0C6F : 0660; -- ' load
0C70 : 277A; -- . imov [imov!   t1 .fib_body_0_while_block_retaddr0]
0C71 : 370C; -- ' imoh
0C72 : 1670; --   str     t0 t1
0C73 : 9614; --   iadd    t0 1
0C74 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C75 : 3080; -- | imoh
0C76 : 1060; -- ' str
0C77 : 20CA; -- . imov [jmp!    .p]
0C78 : 300B; -- | imoh
0C79 : A000; -- ' j_op
0C7A : 2620; -- . imov [imov! t0 32]
0C7B : 3600; -- ' imoh
0C7C : 5D60; --   push t0
0C7D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C7E : 3680; -- | imoh
0C7F : 0660; -- ' load
0C80 : 278A; -- . imov [imov!   t1 .fib_body_0_while_block_retaddr1]
0C81 : 370C; -- ' imoh
0C82 : 1670; --   str     t0 t1
0C83 : 9614; --   iadd    t0 1
0C84 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C85 : 3080; -- | imoh
0C86 : 1060; -- ' str
0C87 : 20EA; -- . imov [jmp!    .pc]
0C88 : 3001; -- | imoh
0C89 : A000; -- ' j_op
0C8A : 66D0; -- . pop [pop! t0 t1]
0C8B : 67D0; -- ' pop
0C8C : 5D60; -- . push [push! t0 t1]
0C8D : 5D70; -- ' push
0C8E : 66D0; -- . pop [pop! t0 t1]
0C8F : 67D0; -- ' pop
0C90 : 5D70; -- . push [push! t1 t0 t1]
0C91 : 5D60; -- | push
0C92 : 5D70; -- ' push
0C93 : 67D0; -- . pop [pop!  t1 t0]
0C94 : 66D0; -- ' pop
0C95 : 8674; --   add   t0 t1
0C96 : 5D60; -- . push [push! t0]
0C97 : 2052; -- . imov [jmp! .fib_body_0_while_eval]
0C98 : 300C; -- | imoh
0C99 : A000; -- ' j_op
0C9A : 66D0; -- . pop [pop! t0]
0C9B : 66D0; -- . pop [pop! t0]
0C9C : 26AD; -- . imov [imov! t0 57005]
0C9D : 36DE; -- ' imoh
0C9E : 5D60; --   push t0
0C9F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0CA0 : 3680; -- | imoh
0CA1 : 0660; -- ' load
0CA2 : 27AC; -- . imov [imov!   t1 .fib_body_retaddr1]
0CA3 : 370C; -- ' imoh
0CA4 : 1670; --   str     t0 t1
0CA5 : 9614; --   iadd    t0 1
0CA6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0CA7 : 3080; -- | imoh
0CA8 : 1060; -- ' str
0CA9 : 20CA; -- . imov [jmp!    .p]
0CAA : 300B; -- | imoh
0CAB : A000; -- ' j_op
0CAC : 26EF; -- . imov [imov! t0 48879]
0CAD : 36BE; -- ' imoh
0CAE : 5D60; --   push t0
0CAF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0CB0 : 3680; -- | imoh
0CB1 : 0660; -- ' load
0CB2 : 27BC; -- . imov [imov!   t1 .fib_body_retaddr2]
0CB3 : 370C; -- ' imoh
0CB4 : 1670; --   str     t0 t1
0CB5 : 9614; --   iadd    t0 1
0CB6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0CB7 : 3080; -- | imoh
0CB8 : 1060; -- ' str
0CB9 : 20CA; -- . imov [jmp!    .p]
0CBA : 300B; -- | imoh
0CBB : A000; -- ' j_op
0CBC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0CBD : 3680; -- | imoh
0CBE : 0660; -- ' load
0CBF : 9615; --   isub    t0 1
0CC0 : 0760; --   load    t1 t0
0CC1 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0CC2 : 3080; -- | imoh
0CC3 : 1060; -- ' str
0CC4 : A700; --   jmp     t1
END;