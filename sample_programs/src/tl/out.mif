DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C24; -- . imov [imov!   isr .isr]
0001 : 3C00; -- ' imoh
0002 : 2604; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 2011; -- . imov [jmp!    .main]
000F : 300A; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 26AD; -- . imov [imov!  t0 57005]
0014 : 36DE; -- ' imoh
0015 : 2000; -- . imov [str!   .variable_alloc_var1 t0]
0016 : 3080; -- | imoh
0017 : 1060; -- ' str
0018 : 2664; -- . imov [imov!  t0 100]
0019 : 3600; -- ' imoh
001A : 2001; -- . imov [str!   .variable_alloc_text_progress t0]
001B : 3080; -- | imoh
001C : 1060; -- ' str
001D : 2600; -- . imov [imov!  t0 0]
001E : 3600; -- ' imoh
001F : 2002; -- . imov [str!   .variable_alloc_text_ptr t0]
0020 : 3080; -- | imoh
0021 : 1060; -- ' str
0022 : 66D0; -- . pop [pop! t0]
0023 : A020; --   jmpr
0024 : 5D00; -- Â· push r0 [isr!]
0025 : 60D0; -- . pop r0 [rti!]
0026 : C000; -- ' rti
0027 : 0037; -- 0x37
0028 : 0020; -- 0x20
0029 : 003C; -- 0x3C
002A : 003D; -- 0x3D
002B : 0020; -- 0x20
002C : 0037; -- 0x37
002D : 0000; -- 0x0
002E : 0036; -- 0x36
002F : 0020; -- 0x20
0030 : 003C; -- 0x3C
0031 : 0020; -- 0x20
0032 : 0037; -- 0x37
0033 : 0000; -- 0x0
0034 : 0038; -- 0x38
0035 : 0020; -- 0x20
0036 : 003C; -- 0x3C
0037 : 003D; -- 0x3D
0038 : 0020; -- 0x20
0039 : 0037; -- 0x37
003A : 0000; -- 0x0
003B : 0054; -- 0x54
003C : 0065; -- 0x65
003D : 0073; -- 0x73
003E : 0074; -- 0x74
003F : 0069; -- 0x69
0040 : 006E; -- 0x6E
0041 : 0067; -- 0x67
0042 : 0020; -- 0x20
0043 : 0053; -- 0x53
0044 : 0075; -- 0x75
0045 : 006D; -- 0x6D
0046 : 000A; -- 0xA
0047 : 0000; -- 0x0
0048 : 0073; -- 0x73
0049 : 0075; -- 0x75
004A : 006D; -- 0x6D
004B : 0028; -- 0x28
004C : 0037; -- 0x37
004D : 0029; -- 0x29
004E : 0020; -- 0x20
004F : 003D; -- 0x3D
0050 : 003D; -- 0x3D
0051 : 0020; -- 0x20
0052 : 0032; -- 0x32
0053 : 0031; -- 0x31
0054 : 0000; -- 0x0
0055 : 0037; -- 0x37
0056 : 0020; -- 0x20
0057 : 003E; -- 0x3E
0058 : 0020; -- 0x20
0059 : 0037; -- 0x37
005A : 0000; -- 0x0
005B : 0054; -- 0x54
005C : 0065; -- 0x65
005D : 0073; -- 0x73
005E : 0074; -- 0x74
005F : 0069; -- 0x69
0060 : 006E; -- 0x6E
0061 : 0067; -- 0x67
0062 : 0020; -- 0x20
0063 : 006C; -- 0x6C
0064 : 0065; -- 0x65
0065 : 0074; -- 0x74
0066 : 000A; -- 0xA
0067 : 0000; -- 0x0
0068 : 0031; -- 0x31
0069 : 0031; -- 0x31
006A : 0000; -- 0x0
006B : 0038; -- 0x38
006C : 0020; -- 0x20
006D : 003C; -- 0x3C
006E : 0020; -- 0x20
006F : 0037; -- 0x37
0070 : 0000; -- 0x0
0071 : 0061; -- 0x61
0072 : 0062; -- 0x62
0073 : 0063; -- 0x63
0074 : 0064; -- 0x64
0075 : 0000; -- 0x0
0076 : 0063; -- 0x63
0077 : 0032; -- 0x32
0078 : 0000; -- 0x0
0079 : 0031; -- 0x31
007A : 0020; -- 0x20
007B : 007C; -- 0x7C
007C : 007C; -- 0x7C
007D : 0020; -- 0x20
007E : 0030; -- 0x30
007F : 0000; -- 0x0
0080 : 0031; -- 0x31
0081 : 0020; -- 0x20
0082 : 0078; -- 0x78
0083 : 0020; -- 0x20
0084 : 0032; -- 0x32
0085 : 0000; -- 0x0
0086 : 0054; -- 0x54
0087 : 0065; -- 0x65
0088 : 0073; -- 0x73
0089 : 0074; -- 0x74
008A : 0069; -- 0x69
008B : 006E; -- 0x6E
008C : 0067; -- 0x67
008D : 0020; -- 0x20
008E : 004C; -- 0x4C
008F : 006F; -- 0x6F
0090 : 0067; -- 0x67
0091 : 0069; -- 0x69
0092 : 0063; -- 0x63
0093 : 0061; -- 0x61
0094 : 006C; -- 0x6C
0095 : 000A; -- 0xA
0096 : 0000; -- 0x0
0097 : 0031; -- 0x31
0098 : 0030; -- 0x30
0099 : 0020; -- 0x20
009A : 0078; -- 0x78
009B : 0020; -- 0x20
009C : 0030; -- 0x30
009D : 0000; -- 0x0
009E : 0076; -- 0x76
009F : 0061; -- 0x61
00A0 : 0072; -- 0x72
00A1 : 0031; -- 0x31
00A2 : 0020; -- 0x20
00A3 : 003D; -- 0x3D
00A4 : 0020; -- 0x20
00A5 : 0031; -- 0x31
00A6 : 0030; -- 0x30
00A7 : 0000; -- 0x0
00A8 : 0050; -- 0x50
00A9 : 0061; -- 0x61
00AA : 0073; -- 0x73
00AB : 0073; -- 0x73
00AC : 0065; -- 0x65
00AD : 0064; -- 0x64
00AE : 0020; -- 0x20
00AF : 0041; -- 0x41
00B0 : 006C; -- 0x6C
00B1 : 006C; -- 0x6C
00B2 : 0020; -- 0x20
00B3 : 0054; -- 0x54
00B4 : 0065; -- 0x65
00B5 : 0073; -- 0x73
00B6 : 0074; -- 0x74
00B7 : 0020; -- 0x20
00B8 : 0043; -- 0x43
00B9 : 0061; -- 0x61
00BA : 0073; -- 0x73
00BB : 0065; -- 0x65
00BC : 0073; -- 0x73
00BD : 0021; -- 0x21
00BE : 0000; -- 0x0
00BF : 0036; -- 0x36
00C0 : 0020; -- 0x20
00C1 : 003C; -- 0x3C
00C2 : 003D; -- 0x3D
00C3 : 0020; -- 0x20
00C4 : 0037; -- 0x37
00C5 : 0000; -- 0x0
00C6 : 0073; -- 0x73
00C7 : 0074; -- 0x74
00C8 : 0072; -- 0x72
00C9 : 006C; -- 0x6C
00CA : 0065; -- 0x65
00CB : 006E; -- 0x6E
00CC : 0028; -- 0x28
00CD : 0022; -- 0x22
00CE : 0061; -- 0x61
00CF : 0062; -- 0x62
00D0 : 0063; -- 0x63
00D1 : 0064; -- 0x64
00D2 : 0022; -- 0x22
00D3 : 0029; -- 0x29
00D4 : 0000; -- 0x0
00D5 : 0030; -- 0x30
00D6 : 0020; -- 0x20
00D7 : 0078; -- 0x78
00D8 : 0020; -- 0x20
00D9 : 0031; -- 0x31
00DA : 0030; -- 0x30
00DB : 0000; -- 0x0
00DC : 0061; -- 0x61
00DD : 0032; -- 0x32
00DE : 0000; -- 0x0
00DF : 0038; -- 0x38
00E0 : 0020; -- 0x20
00E1 : 003E; -- 0x3E
00E2 : 003D; -- 0x3D
00E3 : 0020; -- 0x20
00E4 : 0037; -- 0x37
00E5 : 0000; -- 0x0
00E6 : 0038; -- 0x38
00E7 : 0020; -- 0x20
00E8 : 003E; -- 0x3E
00E9 : 0020; -- 0x20
00EA : 0037; -- 0x37
00EB : 0000; -- 0x0
00EC : 0073; -- 0x73
00ED : 0075; -- 0x75
00EE : 006D; -- 0x6D
00EF : 0028; -- 0x28
00F0 : 0032; -- 0x32
00F1 : 0032; -- 0x32
00F2 : 0029; -- 0x29
00F3 : 0020; -- 0x20
00F4 : 003D; -- 0x3D
00F5 : 003D; -- 0x3D
00F6 : 0020; -- 0x20
00F7 : 0032; -- 0x32
00F8 : 0035; -- 0x35
00F9 : 0033; -- 0x33
00FA : 0000; -- 0x0
00FB : 0036; -- 0x36
00FC : 0020; -- 0x20
00FD : 003E; -- 0x3E
00FE : 0020; -- 0x20
00FF : 0037; -- 0x37
0100 : 0000; -- 0x0
0101 : 0030; -- 0x30
0102 : 0020; -- 0x20
0103 : 007C; -- 0x7C
0104 : 007C; -- 0x7C
0105 : 0020; -- 0x20
0106 : 0030; -- 0x30
0107 : 0000; -- 0x0
0108 : 0062; -- 0x62
0109 : 0032; -- 0x32
010A : 0000; -- 0x0
010B : 0037; -- 0x37
010C : 0020; -- 0x20
010D : 003D; -- 0x3D
010E : 0020; -- 0x20
010F : 0037; -- 0x37
0110 : 0000; -- 0x0
0111 : 0037; -- 0x37
0112 : 0020; -- 0x20
0113 : 003C; -- 0x3C
0114 : 0020; -- 0x20
0115 : 0037; -- 0x37
0116 : 0000; -- 0x0
0117 : 0073; -- 0x73
0118 : 0074; -- 0x74
0119 : 0072; -- 0x72
011A : 006C; -- 0x6C
011B : 0065; -- 0x65
011C : 006E; -- 0x6E
011D : 0028; -- 0x28
011E : 0022; -- 0x22
011F : 0022; -- 0x22
0120 : 0029; -- 0x29
0121 : 0000; -- 0x0
0122 : 0000; -- 0x0
0123 : 0030; -- 0x30
0124 : 0020; -- 0x20
0125 : 0021; -- 0x21
0126 : 0000; -- 0x0
0127 : 0041; -- 0x41
0128 : 0073; -- 0x73
0129 : 0073; -- 0x73
012A : 0065; -- 0x65
012B : 0072; -- 0x72
012C : 0074; -- 0x74
012D : 0020; -- 0x20
012E : 0046; -- 0x46
012F : 0061; -- 0x61
0130 : 0069; -- 0x69
0131 : 006C; -- 0x6C
0132 : 0065; -- 0x65
0133 : 0064; -- 0x64
0134 : 000A; -- 0xA
0135 : 0000; -- 0x0
0136 : 0076; -- 0x76
0137 : 0061; -- 0x61
0138 : 0072; -- 0x72
0139 : 0031; -- 0x31
013A : 0020; -- 0x20
013B : 003D; -- 0x3D
013C : 003D; -- 0x3D
013D : 0020; -- 0x20
013E : 0030; -- 0x30
013F : 0078; -- 0x78
0140 : 0044; -- 0x44
0141 : 0045; -- 0x45
0142 : 0041; -- 0x41
0143 : 0044; -- 0x44
0144 : 0000; -- 0x0
0145 : 0031; -- 0x31
0146 : 0020; -- 0x20
0147 : 0021; -- 0x21
0148 : 0000; -- 0x0
0149 : 0062; -- 0x62
014A : 0031; -- 0x31
014B : 0000; -- 0x0
014C : 0030; -- 0x30
014D : 0020; -- 0x20
014E : 0026; -- 0x26
014F : 0026; -- 0x26
0150 : 0020; -- 0x20
0151 : 0031; -- 0x31
0152 : 0000; -- 0x0
0153 : 0036; -- 0x36
0154 : 0020; -- 0x20
0155 : 003E; -- 0x3E
0156 : 003D; -- 0x3D
0157 : 0020; -- 0x20
0158 : 0037; -- 0x37
0159 : 0000; -- 0x0
015A : 0037; -- 0x37
015B : 0020; -- 0x20
015C : 003E; -- 0x3E
015D : 003D; -- 0x3D
015E : 0020; -- 0x20
015F : 0037; -- 0x37
0160 : 0000; -- 0x0
0161 : 0048; -- 0x48
0162 : 0065; -- 0x65
0163 : 006C; -- 0x6C
0164 : 006C; -- 0x6C
0165 : 006F; -- 0x6F
0166 : 0020; -- 0x20
0167 : 0066; -- 0x66
0168 : 0072; -- 0x72
0169 : 006F; -- 0x6F
016A : 006D; -- 0x6D
016B : 0020; -- 0x20
016C : 0054; -- 0x54
016D : 006F; -- 0x6F
016E : 0061; -- 0x61
016F : 0073; -- 0x73
0170 : 0074; -- 0x74
0171 : 004C; -- 0x4C
0172 : 0061; -- 0x61
0173 : 006E; -- 0x6E
0174 : 0067; -- 0x67
0175 : 0021; -- 0x21
0176 : 000A; -- 0xA
0177 : 000A; -- 0xA
0178 : 0000; -- 0x0
0179 : 0032; -- 0x32
017A : 0020; -- 0x20
017B : 0078; -- 0x78
017C : 0020; -- 0x20
017D : 0035; -- 0x35
017E : 0000; -- 0x0
017F : 0036; -- 0x36
0180 : 0020; -- 0x20
0181 : 003D; -- 0x3D
0182 : 0020; -- 0x20
0183 : 0037; -- 0x37
0184 : 0000; -- 0x0
0185 : 0031; -- 0x31
0186 : 0020; -- 0x20
0187 : 0026; -- 0x26
0188 : 0026; -- 0x26
0189 : 0020; -- 0x20
018A : 0031; -- 0x31
018B : 0000; -- 0x0
018C : 0054; -- 0x54
018D : 0065; -- 0x65
018E : 0073; -- 0x73
018F : 0074; -- 0x74
0190 : 0069; -- 0x69
0191 : 006E; -- 0x6E
0192 : 0067; -- 0x67
0193 : 0020; -- 0x20
0194 : 0041; -- 0x41
0195 : 0072; -- 0x72
0196 : 0069; -- 0x69
0197 : 0074; -- 0x74
0198 : 0068; -- 0x68
0199 : 000A; -- 0xA
019A : 0000; -- 0x0
019B : 0054; -- 0x54
019C : 0065; -- 0x65
019D : 0073; -- 0x73
019E : 0074; -- 0x74
019F : 0069; -- 0x69
01A0 : 006E; -- 0x6E
01A1 : 0067; -- 0x67
01A2 : 0020; -- 0x20
01A3 : 006D; -- 0x6D
01A4 : 0075; -- 0x75
01A5 : 006C; -- 0x6C
01A6 : 000A; -- 0xA
01A7 : 0000; -- 0x0
01A8 : 0054; -- 0x54
01A9 : 0065; -- 0x65
01AA : 0073; -- 0x73
01AB : 0074; -- 0x74
01AC : 0069; -- 0x69
01AD : 006E; -- 0x6E
01AE : 0067; -- 0x67
01AF : 0020; -- 0x20
01B0 : 0073; -- 0x73
01B1 : 0074; -- 0x74
01B2 : 0072; -- 0x72
01B3 : 006C; -- 0x6C
01B4 : 0065; -- 0x65
01B5 : 006E; -- 0x6E
01B6 : 000A; -- 0xA
01B7 : 0000; -- 0x0
01B8 : 0054; -- 0x54
01B9 : 0065; -- 0x65
01BA : 0073; -- 0x73
01BB : 0074; -- 0x74
01BC : 0069; -- 0x69
01BD : 006E; -- 0x6E
01BE : 0067; -- 0x67
01BF : 0020; -- 0x20
01C0 : 0067; -- 0x67
01C1 : 006C; -- 0x6C
01C2 : 006F; -- 0x6F
01C3 : 0062; -- 0x62
01C4 : 0061; -- 0x61
01C5 : 006C; -- 0x6C
01C6 : 0020; -- 0x20
01C7 : 0076; -- 0x76
01C8 : 0061; -- 0x61
01C9 : 0072; -- 0x72
01CA : 0073; -- 0x73
01CB : 000A; -- 0xA
01CC : 0000; -- 0x0
01CD : 0061; -- 0x61
01CE : 0031; -- 0x31
01CF : 0000; -- 0x0
01D0 : 66D0; -- . pop [pop! t0]
01D1 : 5D60; -- . push [push! t0 t0]
01D2 : 5D60; -- ' push
01D3 : 66D0; -- . pop [pop! t0]
01D4 : 0660; --   load t0 t0
01D5 : 5D60; -- . push [push! t0]
01D6 : 66D0; -- . pop [pop! t0]
01D7 : 5D60; -- . push [push! t0 t0]
01D8 : 5D60; -- ' push
01D9 : 66D0; -- . pop [pop! t0]
01DA : 9607; --   tst  t0
01DB : 20F8; -- . imov [jz!  .ps_body_0_while_exit]
01DC : 3001; -- | imoh
01DD : A001; -- ' j_op
01DE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
01DF : 3680; -- | imoh
01E0 : 0660; -- ' load
01E1 : 27EB; -- . imov [imov!   t1 .ps_body_0_while_block_retaddr0]
01E2 : 3701; -- ' imoh
01E3 : 1670; --   str     t0 t1
01E4 : 9614; --   iadd    t0 1
01E5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
01E6 : 3080; -- | imoh
01E7 : 1060; -- ' str
01E8 : 2095; -- . imov [jmp!    .pc]
01E9 : 300A; -- | imoh
01EA : A000; -- ' j_op
01EB : 2601; -- . imov [imov! t0 1]
01EC : 3600; -- ' imoh
01ED : 5D60; --   push t0
01EE : 67D0; -- . pop [pop!  t1 t0]
01EF : 66D0; -- ' pop
01F0 : 8674; --   add   t0 t1
01F1 : 5D60; -- . push [push! t0]
01F2 : 66D0; -- . pop [pop! t0]
01F3 : 5D60; -- . push [push! t0 t0]
01F4 : 5D60; -- ' push
01F5 : 20D3; -- . imov [jmp! .ps_body_0_while_eval]
01F6 : 3001; -- | imoh
01F7 : A000; -- ' j_op
01F8 : 66D0; -- . pop [pop! t0]
01F9 : 66D0; -- . pop [pop! t0]
01FA : 2603; -- . imov [load!   t0 .ret_stack_ptr]
01FB : 3680; -- | imoh
01FC : 0660; -- ' load
01FD : 9615; --   isub    t0 1
01FE : 0760; --   load    t1 t0
01FF : 2003; -- . imov [str!    .ret_stack_ptr t0]
0200 : 3080; -- | imoh
0201 : 1060; -- ' str
0202 : A700; --   jmp     t1
0203 : 66D0; -- . pop [pop! t0]
0204 : 9607; --   tst  t0
0205 : 200B; -- . imov [jz!  .assert_body_0_else]
0206 : 3002; -- | imoh
0207 : A001; -- ' j_op
0208 : 203C; -- . imov [jmp! .assert_body_0_if_exit]
0209 : 3002; -- | imoh
020A : A000; -- ' j_op
020B : 66D0; -- . pop [pop! t0]
020C : 5D60; -- . push [push! t0 t0]
020D : 5D60; -- ' push
020E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
020F : 3680; -- | imoh
0210 : 0660; -- ' load
0211 : 271B; -- . imov [imov!   t1 .assert_body_0_else_retaddr0]
0212 : 3702; -- ' imoh
0213 : 1670; --   str     t0 t1
0214 : 9614; --   iadd    t0 1
0215 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0216 : 3080; -- | imoh
0217 : 1060; -- ' str
0218 : 20D0; -- . imov [jmp!    .ps]
0219 : 3001; -- | imoh
021A : A000; -- ' j_op
021B : 2620; -- . imov [imov! t0 32]
021C : 3600; -- ' imoh
021D : 5D60; --   push t0
021E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
021F : 3680; -- | imoh
0220 : 0660; -- ' load
0221 : 272B; -- . imov [imov!   t1 .assert_body_0_else_retaddr1]
0222 : 3702; -- ' imoh
0223 : 1670; --   str     t0 t1
0224 : 9614; --   iadd    t0 1
0225 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0226 : 3080; -- | imoh
0227 : 1060; -- ' str
0228 : 2095; -- . imov [jmp!    .pc]
0229 : 300A; -- | imoh
022A : A000; -- ' j_op
022B : 2627; -- . imov [imov! t0 .string_alloc_0]
022C : 3601; -- ' imoh
022D : 5D60; -- . push [push! t0]
022E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
022F : 3680; -- | imoh
0230 : 0660; -- ' load
0231 : 273B; -- . imov [imov!   t1 .assert_body_0_else_retaddr2]
0232 : 3702; -- ' imoh
0233 : 1670; --   str     t0 t1
0234 : 9614; --   iadd    t0 1
0235 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0236 : 3080; -- | imoh
0237 : 1060; -- ' str
0238 : 20D0; -- . imov [jmp!    .ps]
0239 : 3001; -- | imoh
023A : A000; -- ' j_op
023B : 7000; --   halt
023C : 66D0; -- . pop [pop! t0]
023D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
023E : 3680; -- | imoh
023F : 0660; -- ' load
0240 : 9615; --   isub    t0 1
0241 : 0760; --   load    t1 t0
0242 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0243 : 3080; -- | imoh
0244 : 1060; -- ' str
0245 : A700; --   jmp     t1
0246 : 2600; -- . imov [imov! t0 0]
0247 : 3600; -- ' imoh
0248 : 5D60; --   push t0
0249 : 66D0; -- . pop [pop! t0 t1]
024A : 67D0; -- ' pop
024B : 5D60; -- . push [push! t0 t1]
024C : 5D70; -- ' push
024D : 66D0; -- . pop [pop! t0]
024E : 5D60; -- . push [push! t0 t0]
024F : 5D60; -- ' push
0250 : 66D0; -- . pop [pop! t0]
0251 : 9607; --   tst  t0
0252 : 2070; -- . imov [jz!  .sum_body_0_while_exit]
0253 : 3002; -- | imoh
0254 : A001; -- ' j_op
0255 : 66D0; -- . pop [pop! t0 t1]
0256 : 67D0; -- ' pop
0257 : 5D60; -- . push [push! t0 t1]
0258 : 5D70; -- ' push
0259 : 66D0; -- . pop [pop! t0 t1]
025A : 67D0; -- ' pop
025B : 5D70; -- . push [push! t1 t0 t1]
025C : 5D60; -- | push
025D : 5D70; -- ' push
025E : 67D0; -- . pop [pop!  t1 t0]
025F : 66D0; -- ' pop
0260 : 8674; --   add   t0 t1
0261 : 5D60; -- . push [push! t0]
0262 : 66D0; -- . pop [pop! t0 t1]
0263 : 67D0; -- ' pop
0264 : 5D60; -- . push [push! t0 t1]
0265 : 5D70; -- ' push
0266 : 2601; -- . imov [imov! t0 1]
0267 : 3600; -- ' imoh
0268 : 5D60; --   push t0
0269 : 67D0; -- . pop [pop!  t1 t0]
026A : 66D0; -- ' pop
026B : 8675; --   sub   t0 t1
026C : 5D60; -- . push [push! t0]
026D : 204D; -- . imov [jmp! .sum_body_0_while_eval]
026E : 3002; -- | imoh
026F : A000; -- ' j_op
0270 : 66D0; -- . pop [pop! t0]
0271 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0272 : 3680; -- | imoh
0273 : 0660; -- ' load
0274 : 9615; --   isub    t0 1
0275 : 0760; --   load    t1 t0
0276 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0277 : 3080; -- | imoh
0278 : 1060; -- ' str
0279 : A700; --   jmp     t1
027A : 2600; -- . imov [imov! t0 0]
027B : 3600; -- ' imoh
027C : 5D60; --   push t0
027D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
027E : 3680; -- | imoh
027F : 0660; -- ' load
0280 : 67D0; -- . pop [pop!    t1]
0281 : 1670; --   str     t0 t1
0282 : 9614; --   iadd    t0 1
0283 : 67D0; -- . pop [pop!    t1]
0284 : 1670; --   str     t0 t1
0285 : 9614; --   iadd    t0 1
0286 : 67D0; -- . pop [pop!    t1]
0287 : 1670; --   str     t0 t1
0288 : 9614; --   iadd    t0 1
0289 : 2003; -- . imov [str!    .ret_stack_ptr t0]
028A : 3080; -- | imoh
028B : 1060; -- ' str
028C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
028D : 3680; -- | imoh
028E : 0660; -- ' load
028F : 2702; -- . imov [imov!   t1 2]
0290 : 3700; -- ' imoh
0291 : 8675; --   sub     t0 t1
0292 : 5D60; -- . push [push!   t0]
0293 : 66D0; -- . pop [pop! t0]
0294 : 0660; --   load t0 t0
0295 : 5D60; -- . push [push! t0]
0296 : 66D0; -- . pop [pop! t0]
0297 : 9607; --   tst  t0
0298 : 20DB; -- . imov [jz!  .mul_body_0_let_block_0_while_exit]
0299 : 3002; -- | imoh
029A : A001; -- ' j_op
029B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
029C : 3680; -- | imoh
029D : 0660; -- ' load
029E : 2703; -- . imov [imov!   t1 3]
029F : 3700; -- ' imoh
02A0 : 8675; --   sub     t0 t1
02A1 : 5D60; -- . push [push!   t0]
02A2 : 66D0; -- . pop [pop! t0]
02A3 : 0660; --   load t0 t0
02A4 : 5D60; -- . push [push! t0]
02A5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02A6 : 3680; -- | imoh
02A7 : 0660; -- ' load
02A8 : 2701; -- . imov [imov!   t1 1]
02A9 : 3700; -- ' imoh
02AA : 8675; --   sub     t0 t1
02AB : 5D60; -- . push [push!   t0]
02AC : 66D0; -- . pop [pop! t0]
02AD : 0660; --   load t0 t0
02AE : 5D60; -- . push [push! t0]
02AF : 67D0; -- . pop [pop!  t1 t0]
02B0 : 66D0; -- ' pop
02B1 : 8674; --   add   t0 t1
02B2 : 5D60; -- . push [push! t0]
02B3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02B4 : 3680; -- | imoh
02B5 : 0660; -- ' load
02B6 : 2703; -- . imov [imov!   t1 3]
02B7 : 3700; -- ' imoh
02B8 : 8675; --   sub     t0 t1
02B9 : 5D60; -- . push [push!   t0]
02BA : 67D0; -- . pop [pop! t1 t0]
02BB : 66D0; -- ' pop
02BC : 1760; --   str  t1 t0
02BD : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02BE : 3680; -- | imoh
02BF : 0660; -- ' load
02C0 : 2702; -- . imov [imov!   t1 2]
02C1 : 3700; -- ' imoh
02C2 : 8675; --   sub     t0 t1
02C3 : 5D60; -- . push [push!   t0]
02C4 : 66D0; -- . pop [pop! t0]
02C5 : 0660; --   load t0 t0
02C6 : 5D60; -- . push [push! t0]
02C7 : 2601; -- . imov [imov! t0 1]
02C8 : 3600; -- ' imoh
02C9 : 5D60; --   push t0
02CA : 67D0; -- . pop [pop!  t1 t0]
02CB : 66D0; -- ' pop
02CC : 8675; --   sub   t0 t1
02CD : 5D60; -- . push [push! t0]
02CE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02CF : 3680; -- | imoh
02D0 : 0660; -- ' load
02D1 : 2702; -- . imov [imov!   t1 2]
02D2 : 3700; -- ' imoh
02D3 : 8675; --   sub     t0 t1
02D4 : 5D60; -- . push [push!   t0]
02D5 : 67D0; -- . pop [pop! t1 t0]
02D6 : 66D0; -- ' pop
02D7 : 1760; --   str  t1 t0
02D8 : 208C; -- . imov [jmp! .mul_body_0_let_block_0_while_eval]
02D9 : 3002; -- | imoh
02DA : A000; -- ' j_op
02DB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02DC : 3680; -- | imoh
02DD : 0660; -- ' load
02DE : 2703; -- . imov [imov!   t1 3]
02DF : 3700; -- ' imoh
02E0 : 8675; --   sub     t0 t1
02E1 : 5D60; -- . push [push!   t0]
02E2 : 66D0; -- . pop [pop! t0]
02E3 : 0660; --   load t0 t0
02E4 : 5D60; -- . push [push! t0]
02E5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02E6 : 3680; -- | imoh
02E7 : 0660; -- ' load
02E8 : 2703; -- . imov [imov!   t1 3]
02E9 : 3700; -- ' imoh
02EA : 8675; --   sub     t0 t1
02EB : 2003; -- . imov [str!    .ret_stack_ptr t0]
02EC : 3080; -- | imoh
02ED : 1060; -- ' str
02EE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02EF : 3680; -- | imoh
02F0 : 0660; -- ' load
02F1 : 9615; --   isub    t0 1
02F2 : 0760; --   load    t1 t0
02F3 : 2003; -- . imov [str!    .ret_stack_ptr t0]
02F4 : 3080; -- | imoh
02F5 : 1060; -- ' str
02F6 : A700; --   jmp     t1
02F7 : 263B; -- . imov [imov! t0 .string_alloc_1]
02F8 : 3600; -- ' imoh
02F9 : 5D60; -- . push [push! t0]
02FA : 2603; -- . imov [load!   t0 .ret_stack_ptr]
02FB : 3680; -- | imoh
02FC : 0660; -- ' load
02FD : 2707; -- . imov [imov!   t1 .test_sum_body_retaddr0]
02FE : 3703; -- ' imoh
02FF : 1670; --   str     t0 t1
0300 : 9614; --   iadd    t0 1
0301 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0302 : 3080; -- | imoh
0303 : 1060; -- ' str
0304 : 20D0; -- . imov [jmp!    .ps]
0305 : 3001; -- | imoh
0306 : A000; -- ' j_op
0307 : 2648; -- . imov [imov! t0 .string_alloc_2]
0308 : 3600; -- ' imoh
0309 : 5D60; -- . push [push! t0]
030A : 2607; -- . imov [imov! t0 7]
030B : 3600; -- ' imoh
030C : 5D60; --   push t0
030D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
030E : 3680; -- | imoh
030F : 0660; -- ' load
0310 : 271A; -- . imov [imov!   t1 .test_sum_body_0_retaddr0]
0311 : 3703; -- ' imoh
0312 : 1670; --   str     t0 t1
0313 : 9614; --   iadd    t0 1
0314 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0315 : 3080; -- | imoh
0316 : 1060; -- ' str
0317 : 2046; -- . imov [jmp!    .sum]
0318 : 3002; -- | imoh
0319 : A000; -- ' j_op
031A : 261C; -- . imov [imov! t0 28]
031B : 3600; -- ' imoh
031C : 5D60; --   push t0
031D : 67D0; -- . pop [pop!  t1 t0]
031E : 66D0; -- ' pop
031F : 8675; --   sub   t0 t1
0320 : 5D60; -- . push [push! t0]
0321 : 2600; -- . imov [imov! t0 0]
0322 : 3600; -- ' imoh
0323 : 5D60; --   push t0
0324 : 67D0; -- . pop [pop! t1 t0]
0325 : 66D0; -- ' pop
0326 : 2801; --   imov t2 1  # default value
0327 : 8675; --   sub  t0 t1
0328 : 202C; -- . imov [jz!  .test_sum_body_0_0_opskip]
0329 : 3003; -- | imoh
032A : A001; -- ' j_op
032B : 2800; --   imov t2 0
032C : 5D80; -- . push [push! t2]
032D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
032E : 3680; -- | imoh
032F : 0660; -- ' load
0330 : 273A; -- . imov [imov!   t1 .test_sum_body_retaddr1]
0331 : 3703; -- ' imoh
0332 : 1670; --   str     t0 t1
0333 : 9614; --   iadd    t0 1
0334 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0335 : 3080; -- | imoh
0336 : 1060; -- ' str
0337 : 2003; -- . imov [jmp!    .assert]
0338 : 3002; -- | imoh
0339 : A000; -- ' j_op
033A : 26EC; -- . imov [imov! t0 .string_alloc_3]
033B : 3600; -- ' imoh
033C : 5D60; -- . push [push! t0]
033D : 2616; -- . imov [imov! t0 22]
033E : 3600; -- ' imoh
033F : 5D60; --   push t0
0340 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0341 : 3680; -- | imoh
0342 : 0660; -- ' load
0343 : 274D; -- . imov [imov!   t1 .test_sum_body_1_retaddr0]
0344 : 3703; -- ' imoh
0345 : 1670; --   str     t0 t1
0346 : 9614; --   iadd    t0 1
0347 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0348 : 3080; -- | imoh
0349 : 1060; -- ' str
034A : 2046; -- . imov [jmp!    .sum]
034B : 3002; -- | imoh
034C : A000; -- ' j_op
034D : 26FD; -- . imov [imov! t0 253]
034E : 3600; -- ' imoh
034F : 5D60; --   push t0
0350 : 67D0; -- . pop [pop!  t1 t0]
0351 : 66D0; -- ' pop
0352 : 8675; --   sub   t0 t1
0353 : 5D60; -- . push [push! t0]
0354 : 2600; -- . imov [imov! t0 0]
0355 : 3600; -- ' imoh
0356 : 5D60; --   push t0
0357 : 67D0; -- . pop [pop! t1 t0]
0358 : 66D0; -- ' pop
0359 : 2801; --   imov t2 1  # default value
035A : 8675; --   sub  t0 t1
035B : 205F; -- . imov [jz!  .test_sum_body_1_0_opskip]
035C : 3003; -- | imoh
035D : A001; -- ' j_op
035E : 2800; --   imov t2 0
035F : 5D80; -- . push [push! t2]
0360 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0361 : 3680; -- | imoh
0362 : 0660; -- ' load
0363 : 276D; -- . imov [imov!   t1 .test_sum_body_retaddr2]
0364 : 3703; -- ' imoh
0365 : 1670; --   str     t0 t1
0366 : 9614; --   iadd    t0 1
0367 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0368 : 3080; -- | imoh
0369 : 1060; -- ' str
036A : 2003; -- . imov [jmp!    .assert]
036B : 3002; -- | imoh
036C : A000; -- ' j_op
036D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
036E : 3680; -- | imoh
036F : 0660; -- ' load
0370 : 9615; --   isub    t0 1
0371 : 0760; --   load    t1 t0
0372 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0373 : 3080; -- | imoh
0374 : 1060; -- ' str
0375 : A700; --   jmp     t1
0376 : 268C; -- . imov [imov! t0 .string_alloc_4]
0377 : 3601; -- ' imoh
0378 : 5D60; -- . push [push! t0]
0379 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
037A : 3680; -- | imoh
037B : 0660; -- ' load
037C : 2786; -- . imov [imov!   t1 .test_arith_body_retaddr0]
037D : 3703; -- ' imoh
037E : 1670; --   str     t0 t1
037F : 9614; --   iadd    t0 1
0380 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0381 : 3080; -- | imoh
0382 : 1060; -- ' str
0383 : 20D0; -- . imov [jmp!    .ps]
0384 : 3001; -- | imoh
0385 : A000; -- ' j_op
0386 : 260B; -- . imov [imov! t0 .string_alloc_5]
0387 : 3601; -- ' imoh
0388 : 5D60; -- . push [push! t0]
0389 : 2607; -- . imov [imov! t0 7]
038A : 3600; -- ' imoh
038B : 5D60; --   push t0
038C : 2607; -- . imov [imov! t0 7]
038D : 3600; -- ' imoh
038E : 5D60; --   push t0
038F : 67D0; -- . pop [pop! t1 t0]
0390 : 66D0; -- ' pop
0391 : 2801; --   imov t2 1  # default value
0392 : 8675; --   sub  t0 t1
0393 : 2097; -- . imov [jz!  .test_arith_body_0_0_opskip]
0394 : 3003; -- | imoh
0395 : A001; -- ' j_op
0396 : 2800; --   imov t2 0
0397 : 5D80; -- . push [push! t2]
0398 : 2601; -- . imov [imov! t0 1]
0399 : 3600; -- ' imoh
039A : 5D60; --   push t0
039B : 67D0; -- . pop [pop! t1 t0]
039C : 66D0; -- ' pop
039D : 2801; --   imov t2 1  # default value
039E : 8675; --   sub  t0 t1
039F : 20A3; -- . imov [jz!  .test_arith_body_0_1_opskip]
03A0 : 3003; -- | imoh
03A1 : A001; -- ' j_op
03A2 : 2800; --   imov t2 0
03A3 : 5D80; -- . push [push! t2]
03A4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03A5 : 3680; -- | imoh
03A6 : 0660; -- ' load
03A7 : 27B1; -- . imov [imov!   t1 .test_arith_body_retaddr1]
03A8 : 3703; -- ' imoh
03A9 : 1670; --   str     t0 t1
03AA : 9614; --   iadd    t0 1
03AB : 2003; -- . imov [str!    .ret_stack_ptr t0]
03AC : 3080; -- | imoh
03AD : 1060; -- ' str
03AE : 2003; -- . imov [jmp!    .assert]
03AF : 3002; -- | imoh
03B0 : A000; -- ' j_op
03B1 : 267F; -- . imov [imov! t0 .string_alloc_6]
03B2 : 3601; -- ' imoh
03B3 : 5D60; -- . push [push! t0]
03B4 : 2606; -- . imov [imov! t0 6]
03B5 : 3600; -- ' imoh
03B6 : 5D60; --   push t0
03B7 : 2607; -- . imov [imov! t0 7]
03B8 : 3600; -- ' imoh
03B9 : 5D60; --   push t0
03BA : 67D0; -- . pop [pop! t1 t0]
03BB : 66D0; -- ' pop
03BC : 2801; --   imov t2 1  # default value
03BD : 8675; --   sub  t0 t1
03BE : 20C2; -- . imov [jz!  .test_arith_body_1_0_opskip]
03BF : 3003; -- | imoh
03C0 : A001; -- ' j_op
03C1 : 2800; --   imov t2 0
03C2 : 5D80; -- . push [push! t2]
03C3 : 2600; -- . imov [imov! t0 0]
03C4 : 3600; -- ' imoh
03C5 : 5D60; --   push t0
03C6 : 67D0; -- . pop [pop! t1 t0]
03C7 : 66D0; -- ' pop
03C8 : 2801; --   imov t2 1  # default value
03C9 : 8675; --   sub  t0 t1
03CA : 20CE; -- . imov [jz!  .test_arith_body_1_1_opskip]
03CB : 3003; -- | imoh
03CC : A001; -- ' j_op
03CD : 2800; --   imov t2 0
03CE : 5D80; -- . push [push! t2]
03CF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03D0 : 3680; -- | imoh
03D1 : 0660; -- ' load
03D2 : 27DC; -- . imov [imov!   t1 .test_arith_body_retaddr2]
03D3 : 3703; -- ' imoh
03D4 : 1670; --   str     t0 t1
03D5 : 9614; --   iadd    t0 1
03D6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
03D7 : 3080; -- | imoh
03D8 : 1060; -- ' str
03D9 : 2003; -- . imov [jmp!    .assert]
03DA : 3002; -- | imoh
03DB : A000; -- ' j_op
03DC : 26FB; -- . imov [imov! t0 .string_alloc_7]
03DD : 3600; -- ' imoh
03DE : 5D60; -- . push [push! t0]
03DF : 2606; -- . imov [imov! t0 6]
03E0 : 3600; -- ' imoh
03E1 : 5D60; --   push t0
03E2 : 2607; -- . imov [imov! t0 7]
03E3 : 3600; -- ' imoh
03E4 : 5D60; --   push t0
03E5 : 67D0; -- . pop [pop! t1 t0]
03E6 : 66D0; -- ' pop
03E7 : 2801; --   imov t2 1  # default value
03E8 : 8675; --   sub  t0 t1
03E9 : 20ED; -- . imov [jp!  .test_arith_body_2_0_opskip]
03EA : 3003; -- | imoh
03EB : A004; -- ' j_op
03EC : 2800; --   imov t2 0
03ED : 5D80; -- . push [push! t2]
03EE : 2600; -- . imov [imov! t0 0]
03EF : 3600; -- ' imoh
03F0 : 5D60; --   push t0
03F1 : 67D0; -- . pop [pop! t1 t0]
03F2 : 66D0; -- ' pop
03F3 : 2801; --   imov t2 1  # default value
03F4 : 8675; --   sub  t0 t1
03F5 : 20F9; -- . imov [jz!  .test_arith_body_2_1_opskip]
03F6 : 3003; -- | imoh
03F7 : A001; -- ' j_op
03F8 : 2800; --   imov t2 0
03F9 : 5D80; -- . push [push! t2]
03FA : 2603; -- . imov [load!   t0 .ret_stack_ptr]
03FB : 3680; -- | imoh
03FC : 0660; -- ' load
03FD : 2707; -- . imov [imov!   t1 .test_arith_body_retaddr3]
03FE : 3704; -- ' imoh
03FF : 1670; --   str     t0 t1
0400 : 9614; --   iadd    t0 1
0401 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0402 : 3080; -- | imoh
0403 : 1060; -- ' str
0404 : 2003; -- . imov [jmp!    .assert]
0405 : 3002; -- | imoh
0406 : A000; -- ' j_op
0407 : 2655; -- . imov [imov! t0 .string_alloc_8]
0408 : 3600; -- ' imoh
0409 : 5D60; -- . push [push! t0]
040A : 2607; -- . imov [imov! t0 7]
040B : 3600; -- ' imoh
040C : 5D60; --   push t0
040D : 2607; -- . imov [imov! t0 7]
040E : 3600; -- ' imoh
040F : 5D60; --   push t0
0410 : 67D0; -- . pop [pop! t1 t0]
0411 : 66D0; -- ' pop
0412 : 2801; --   imov t2 1  # default value
0413 : 8675; --   sub  t0 t1
0414 : 2018; -- . imov [jp!  .test_arith_body_3_0_opskip]
0415 : 3004; -- | imoh
0416 : A004; -- ' j_op
0417 : 2800; --   imov t2 0
0418 : 5D80; -- . push [push! t2]
0419 : 2600; -- . imov [imov! t0 0]
041A : 3600; -- ' imoh
041B : 5D60; --   push t0
041C : 67D0; -- . pop [pop! t1 t0]
041D : 66D0; -- ' pop
041E : 2801; --   imov t2 1  # default value
041F : 8675; --   sub  t0 t1
0420 : 2024; -- . imov [jz!  .test_arith_body_3_1_opskip]
0421 : 3004; -- | imoh
0422 : A001; -- ' j_op
0423 : 2800; --   imov t2 0
0424 : 5D80; -- . push [push! t2]
0425 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0426 : 3680; -- | imoh
0427 : 0660; -- ' load
0428 : 2732; -- . imov [imov!   t1 .test_arith_body_retaddr4]
0429 : 3704; -- ' imoh
042A : 1670; --   str     t0 t1
042B : 9614; --   iadd    t0 1
042C : 2003; -- . imov [str!    .ret_stack_ptr t0]
042D : 3080; -- | imoh
042E : 1060; -- ' str
042F : 2003; -- . imov [jmp!    .assert]
0430 : 3002; -- | imoh
0431 : A000; -- ' j_op
0432 : 26E6; -- . imov [imov! t0 .string_alloc_9]
0433 : 3600; -- ' imoh
0434 : 5D60; -- . push [push! t0]
0435 : 2608; -- . imov [imov! t0 8]
0436 : 3600; -- ' imoh
0437 : 5D60; --   push t0
0438 : 2607; -- . imov [imov! t0 7]
0439 : 3600; -- ' imoh
043A : 5D60; --   push t0
043B : 67D0; -- . pop [pop! t1 t0]
043C : 66D0; -- ' pop
043D : 2801; --   imov t2 1  # default value
043E : 8675; --   sub  t0 t1
043F : 2043; -- . imov [jp!  .test_arith_body_4_0_opskip]
0440 : 3004; -- | imoh
0441 : A004; -- ' j_op
0442 : 2800; --   imov t2 0
0443 : 5D80; -- . push [push! t2]
0444 : 2601; -- . imov [imov! t0 1]
0445 : 3600; -- ' imoh
0446 : 5D60; --   push t0
0447 : 67D0; -- . pop [pop! t1 t0]
0448 : 66D0; -- ' pop
0449 : 2801; --   imov t2 1  # default value
044A : 8675; --   sub  t0 t1
044B : 204F; -- . imov [jz!  .test_arith_body_4_1_opskip]
044C : 3004; -- | imoh
044D : A001; -- ' j_op
044E : 2800; --   imov t2 0
044F : 5D80; -- . push [push! t2]
0450 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0451 : 3680; -- | imoh
0452 : 0660; -- ' load
0453 : 275D; -- . imov [imov!   t1 .test_arith_body_retaddr5]
0454 : 3704; -- ' imoh
0455 : 1670; --   str     t0 t1
0456 : 9614; --   iadd    t0 1
0457 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0458 : 3080; -- | imoh
0459 : 1060; -- ' str
045A : 2003; -- . imov [jmp!    .assert]
045B : 3002; -- | imoh
045C : A000; -- ' j_op
045D : 2653; -- . imov [imov! t0 .string_alloc_10]
045E : 3601; -- ' imoh
045F : 5D60; -- . push [push! t0]
0460 : 2606; -- . imov [imov! t0 6]
0461 : 3600; -- ' imoh
0462 : 5D60; --   push t0
0463 : 2607; -- . imov [imov! t0 7]
0464 : 3600; -- ' imoh
0465 : 5D60; --   push t0
0466 : 67D0; -- . pop [pop! t1 t0]
0467 : 66D0; -- ' pop
0468 : 2800; --   imov t2 0  # default value
0469 : 8675; --   sub  t0 t1
046A : 206E; -- . imov [jn!  .test_arith_body_5_0_opskip]
046B : 3004; -- | imoh
046C : A003; -- ' j_op
046D : 2801; --   imov t2 1
046E : 5D80; -- . push [push! t2]
046F : 2600; -- . imov [imov! t0 0]
0470 : 3600; -- ' imoh
0471 : 5D60; --   push t0
0472 : 67D0; -- . pop [pop! t1 t0]
0473 : 66D0; -- ' pop
0474 : 2801; --   imov t2 1  # default value
0475 : 8675; --   sub  t0 t1
0476 : 207A; -- . imov [jz!  .test_arith_body_5_1_opskip]
0477 : 3004; -- | imoh
0478 : A001; -- ' j_op
0479 : 2800; --   imov t2 0
047A : 5D80; -- . push [push! t2]
047B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
047C : 3680; -- | imoh
047D : 0660; -- ' load
047E : 2788; -- . imov [imov!   t1 .test_arith_body_retaddr6]
047F : 3704; -- ' imoh
0480 : 1670; --   str     t0 t1
0481 : 9614; --   iadd    t0 1
0482 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0483 : 3080; -- | imoh
0484 : 1060; -- ' str
0485 : 2003; -- . imov [jmp!    .assert]
0486 : 3002; -- | imoh
0487 : A000; -- ' j_op
0488 : 265A; -- . imov [imov! t0 .string_alloc_11]
0489 : 3601; -- ' imoh
048A : 5D60; -- . push [push! t0]
048B : 2607; -- . imov [imov! t0 7]
048C : 3600; -- ' imoh
048D : 5D60; --   push t0
048E : 2607; -- . imov [imov! t0 7]
048F : 3600; -- ' imoh
0490 : 5D60; --   push t0
0491 : 67D0; -- . pop [pop! t1 t0]
0492 : 66D0; -- ' pop
0493 : 2800; --   imov t2 0  # default value
0494 : 8675; --   sub  t0 t1
0495 : 2099; -- . imov [jn!  .test_arith_body_6_0_opskip]
0496 : 3004; -- | imoh
0497 : A003; -- ' j_op
0498 : 2801; --   imov t2 1
0499 : 5D80; -- . push [push! t2]
049A : 2601; -- . imov [imov! t0 1]
049B : 3600; -- ' imoh
049C : 5D60; --   push t0
049D : 67D0; -- . pop [pop! t1 t0]
049E : 66D0; -- ' pop
049F : 2801; --   imov t2 1  # default value
04A0 : 8675; --   sub  t0 t1
04A1 : 20A5; -- . imov [jz!  .test_arith_body_6_1_opskip]
04A2 : 3004; -- | imoh
04A3 : A001; -- ' j_op
04A4 : 2800; --   imov t2 0
04A5 : 5D80; -- . push [push! t2]
04A6 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04A7 : 3680; -- | imoh
04A8 : 0660; -- ' load
04A9 : 27B3; -- . imov [imov!   t1 .test_arith_body_retaddr7]
04AA : 3704; -- ' imoh
04AB : 1670; --   str     t0 t1
04AC : 9614; --   iadd    t0 1
04AD : 2003; -- . imov [str!    .ret_stack_ptr t0]
04AE : 3080; -- | imoh
04AF : 1060; -- ' str
04B0 : 2003; -- . imov [jmp!    .assert]
04B1 : 3002; -- | imoh
04B2 : A000; -- ' j_op
04B3 : 26DF; -- . imov [imov! t0 .string_alloc_12]
04B4 : 3600; -- ' imoh
04B5 : 5D60; -- . push [push! t0]
04B6 : 2608; -- . imov [imov! t0 8]
04B7 : 3600; -- ' imoh
04B8 : 5D60; --   push t0
04B9 : 2607; -- . imov [imov! t0 7]
04BA : 3600; -- ' imoh
04BB : 5D60; --   push t0
04BC : 67D0; -- . pop [pop! t1 t0]
04BD : 66D0; -- ' pop
04BE : 2800; --   imov t2 0  # default value
04BF : 8675; --   sub  t0 t1
04C0 : 20C4; -- . imov [jn!  .test_arith_body_7_0_opskip]
04C1 : 3004; -- | imoh
04C2 : A003; -- ' j_op
04C3 : 2801; --   imov t2 1
04C4 : 5D80; -- . push [push! t2]
04C5 : 2601; -- . imov [imov! t0 1]
04C6 : 3600; -- ' imoh
04C7 : 5D60; --   push t0
04C8 : 67D0; -- . pop [pop! t1 t0]
04C9 : 66D0; -- ' pop
04CA : 2801; --   imov t2 1  # default value
04CB : 8675; --   sub  t0 t1
04CC : 20D0; -- . imov [jz!  .test_arith_body_7_1_opskip]
04CD : 3004; -- | imoh
04CE : A001; -- ' j_op
04CF : 2800; --   imov t2 0
04D0 : 5D80; -- . push [push! t2]
04D1 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04D2 : 3680; -- | imoh
04D3 : 0660; -- ' load
04D4 : 27DE; -- . imov [imov!   t1 .test_arith_body_retaddr8]
04D5 : 3704; -- ' imoh
04D6 : 1670; --   str     t0 t1
04D7 : 9614; --   iadd    t0 1
04D8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
04D9 : 3080; -- | imoh
04DA : 1060; -- ' str
04DB : 2003; -- . imov [jmp!    .assert]
04DC : 3002; -- | imoh
04DD : A000; -- ' j_op
04DE : 262E; -- . imov [imov! t0 .string_alloc_13]
04DF : 3600; -- ' imoh
04E0 : 5D60; -- . push [push! t0]
04E1 : 2606; -- . imov [imov! t0 6]
04E2 : 3600; -- ' imoh
04E3 : 5D60; --   push t0
04E4 : 2607; -- . imov [imov! t0 7]
04E5 : 3600; -- ' imoh
04E6 : 5D60; --   push t0
04E7 : 67D0; -- . pop [pop! t1 t0]
04E8 : 66D0; -- ' pop
04E9 : 2801; --   imov t2 1  # default value
04EA : 8675; --   sub  t0 t1
04EB : 20EF; -- . imov [jn!  .test_arith_body_8_0_opskip]
04EC : 3004; -- | imoh
04ED : A003; -- ' j_op
04EE : 2800; --   imov t2 0
04EF : 5D80; -- . push [push! t2]
04F0 : 2601; -- . imov [imov! t0 1]
04F1 : 3600; -- ' imoh
04F2 : 5D60; --   push t0
04F3 : 67D0; -- . pop [pop! t1 t0]
04F4 : 66D0; -- ' pop
04F5 : 2801; --   imov t2 1  # default value
04F6 : 8675; --   sub  t0 t1
04F7 : 20FB; -- . imov [jz!  .test_arith_body_8_1_opskip]
04F8 : 3004; -- | imoh
04F9 : A001; -- ' j_op
04FA : 2800; --   imov t2 0
04FB : 5D80; -- . push [push! t2]
04FC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
04FD : 3680; -- | imoh
04FE : 0660; -- ' load
04FF : 2709; -- . imov [imov!   t1 .test_arith_body_retaddr9]
0500 : 3705; -- ' imoh
0501 : 1670; --   str     t0 t1
0502 : 9614; --   iadd    t0 1
0503 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0504 : 3080; -- | imoh
0505 : 1060; -- ' str
0506 : 2003; -- . imov [jmp!    .assert]
0507 : 3002; -- | imoh
0508 : A000; -- ' j_op
0509 : 2611; -- . imov [imov! t0 .string_alloc_14]
050A : 3601; -- ' imoh
050B : 5D60; -- . push [push! t0]
050C : 2607; -- . imov [imov! t0 7]
050D : 3600; -- ' imoh
050E : 5D60; --   push t0
050F : 2607; -- . imov [imov! t0 7]
0510 : 3600; -- ' imoh
0511 : 5D60; --   push t0
0512 : 67D0; -- . pop [pop! t1 t0]
0513 : 66D0; -- ' pop
0514 : 2801; --   imov t2 1  # default value
0515 : 8675; --   sub  t0 t1
0516 : 201A; -- . imov [jn!  .test_arith_body_9_0_opskip]
0517 : 3005; -- | imoh
0518 : A003; -- ' j_op
0519 : 2800; --   imov t2 0
051A : 5D80; -- . push [push! t2]
051B : 2600; -- . imov [imov! t0 0]
051C : 3600; -- ' imoh
051D : 5D60; --   push t0
051E : 67D0; -- . pop [pop! t1 t0]
051F : 66D0; -- ' pop
0520 : 2801; --   imov t2 1  # default value
0521 : 8675; --   sub  t0 t1
0522 : 2026; -- . imov [jz!  .test_arith_body_9_1_opskip]
0523 : 3005; -- | imoh
0524 : A001; -- ' j_op
0525 : 2800; --   imov t2 0
0526 : 5D80; -- . push [push! t2]
0527 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0528 : 3680; -- | imoh
0529 : 0660; -- ' load
052A : 2734; -- . imov [imov!   t1 .test_arith_body_retaddr10]
052B : 3705; -- ' imoh
052C : 1670; --   str     t0 t1
052D : 9614; --   iadd    t0 1
052E : 2003; -- . imov [str!    .ret_stack_ptr t0]
052F : 3080; -- | imoh
0530 : 1060; -- ' str
0531 : 2003; -- . imov [jmp!    .assert]
0532 : 3002; -- | imoh
0533 : A000; -- ' j_op
0534 : 266B; -- . imov [imov! t0 .string_alloc_15]
0535 : 3600; -- ' imoh
0536 : 5D60; -- . push [push! t0]
0537 : 2608; -- . imov [imov! t0 8]
0538 : 3600; -- ' imoh
0539 : 5D60; --   push t0
053A : 2607; -- . imov [imov! t0 7]
053B : 3600; -- ' imoh
053C : 5D60; --   push t0
053D : 67D0; -- . pop [pop! t1 t0]
053E : 66D0; -- ' pop
053F : 2801; --   imov t2 1  # default value
0540 : 8675; --   sub  t0 t1
0541 : 2045; -- . imov [jn!  .test_arith_body_10_0_opskip]
0542 : 3005; -- | imoh
0543 : A003; -- ' j_op
0544 : 2800; --   imov t2 0
0545 : 5D80; -- . push [push! t2]
0546 : 2600; -- . imov [imov! t0 0]
0547 : 3600; -- ' imoh
0548 : 5D60; --   push t0
0549 : 67D0; -- . pop [pop! t1 t0]
054A : 66D0; -- ' pop
054B : 2801; --   imov t2 1  # default value
054C : 8675; --   sub  t0 t1
054D : 2051; -- . imov [jz!  .test_arith_body_10_1_opskip]
054E : 3005; -- | imoh
054F : A001; -- ' j_op
0550 : 2800; --   imov t2 0
0551 : 5D80; -- . push [push! t2]
0552 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0553 : 3680; -- | imoh
0554 : 0660; -- ' load
0555 : 275F; -- . imov [imov!   t1 .test_arith_body_retaddr11]
0556 : 3705; -- ' imoh
0557 : 1670; --   str     t0 t1
0558 : 9614; --   iadd    t0 1
0559 : 2003; -- . imov [str!    .ret_stack_ptr t0]
055A : 3080; -- | imoh
055B : 1060; -- ' str
055C : 2003; -- . imov [jmp!    .assert]
055D : 3002; -- | imoh
055E : A000; -- ' j_op
055F : 26BF; -- . imov [imov! t0 .string_alloc_16]
0560 : 3600; -- ' imoh
0561 : 5D60; -- . push [push! t0]
0562 : 2606; -- . imov [imov! t0 6]
0563 : 3600; -- ' imoh
0564 : 5D60; --   push t0
0565 : 2607; -- . imov [imov! t0 7]
0566 : 3600; -- ' imoh
0567 : 5D60; --   push t0
0568 : 67D0; -- . pop [pop! t1 t0]
0569 : 66D0; -- ' pop
056A : 2800; --   imov t2 0  # default value
056B : 8675; --   sub  t0 t1
056C : 2070; -- . imov [jp!  .test_arith_body_11_0_opskip]
056D : 3005; -- | imoh
056E : A004; -- ' j_op
056F : 2801; --   imov t2 1
0570 : 5D80; -- . push [push! t2]
0571 : 2601; -- . imov [imov! t0 1]
0572 : 3600; -- ' imoh
0573 : 5D60; --   push t0
0574 : 67D0; -- . pop [pop! t1 t0]
0575 : 66D0; -- ' pop
0576 : 2801; --   imov t2 1  # default value
0577 : 8675; --   sub  t0 t1
0578 : 207C; -- . imov [jz!  .test_arith_body_11_1_opskip]
0579 : 3005; -- | imoh
057A : A001; -- ' j_op
057B : 2800; --   imov t2 0
057C : 5D80; -- . push [push! t2]
057D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
057E : 3680; -- | imoh
057F : 0660; -- ' load
0580 : 278A; -- . imov [imov!   t1 .test_arith_body_retaddr12]
0581 : 3705; -- ' imoh
0582 : 1670; --   str     t0 t1
0583 : 9614; --   iadd    t0 1
0584 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0585 : 3080; -- | imoh
0586 : 1060; -- ' str
0587 : 2003; -- . imov [jmp!    .assert]
0588 : 3002; -- | imoh
0589 : A000; -- ' j_op
058A : 2627; -- . imov [imov! t0 .string_alloc_17]
058B : 3600; -- ' imoh
058C : 5D60; -- . push [push! t0]
058D : 2607; -- . imov [imov! t0 7]
058E : 3600; -- ' imoh
058F : 5D60; --   push t0
0590 : 2607; -- . imov [imov! t0 7]
0591 : 3600; -- ' imoh
0592 : 5D60; --   push t0
0593 : 67D0; -- . pop [pop! t1 t0]
0594 : 66D0; -- ' pop
0595 : 2800; --   imov t2 0  # default value
0596 : 8675; --   sub  t0 t1
0597 : 209B; -- . imov [jp!  .test_arith_body_12_0_opskip]
0598 : 3005; -- | imoh
0599 : A004; -- ' j_op
059A : 2801; --   imov t2 1
059B : 5D80; -- . push [push! t2]
059C : 2601; -- . imov [imov! t0 1]
059D : 3600; -- ' imoh
059E : 5D60; --   push t0
059F : 67D0; -- . pop [pop! t1 t0]
05A0 : 66D0; -- ' pop
05A1 : 2801; --   imov t2 1  # default value
05A2 : 8675; --   sub  t0 t1
05A3 : 20A7; -- . imov [jz!  .test_arith_body_12_1_opskip]
05A4 : 3005; -- | imoh
05A5 : A001; -- ' j_op
05A6 : 2800; --   imov t2 0
05A7 : 5D80; -- . push [push! t2]
05A8 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05A9 : 3680; -- | imoh
05AA : 0660; -- ' load
05AB : 27B5; -- . imov [imov!   t1 .test_arith_body_retaddr13]
05AC : 3705; -- ' imoh
05AD : 1670; --   str     t0 t1
05AE : 9614; --   iadd    t0 1
05AF : 2003; -- . imov [str!    .ret_stack_ptr t0]
05B0 : 3080; -- | imoh
05B1 : 1060; -- ' str
05B2 : 2003; -- . imov [jmp!    .assert]
05B3 : 3002; -- | imoh
05B4 : A000; -- ' j_op
05B5 : 2634; -- . imov [imov! t0 .string_alloc_18]
05B6 : 3600; -- ' imoh
05B7 : 5D60; -- . push [push! t0]
05B8 : 2608; -- . imov [imov! t0 8]
05B9 : 3600; -- ' imoh
05BA : 5D60; --   push t0
05BB : 2607; -- . imov [imov! t0 7]
05BC : 3600; -- ' imoh
05BD : 5D60; --   push t0
05BE : 67D0; -- . pop [pop! t1 t0]
05BF : 66D0; -- ' pop
05C0 : 2800; --   imov t2 0  # default value
05C1 : 8675; --   sub  t0 t1
05C2 : 20C6; -- . imov [jp!  .test_arith_body_13_0_opskip]
05C3 : 3005; -- | imoh
05C4 : A004; -- ' j_op
05C5 : 2801; --   imov t2 1
05C6 : 5D80; -- . push [push! t2]
05C7 : 2600; -- . imov [imov! t0 0]
05C8 : 3600; -- ' imoh
05C9 : 5D60; --   push t0
05CA : 67D0; -- . pop [pop! t1 t0]
05CB : 66D0; -- ' pop
05CC : 2801; --   imov t2 1  # default value
05CD : 8675; --   sub  t0 t1
05CE : 20D2; -- . imov [jz!  .test_arith_body_13_1_opskip]
05CF : 3005; -- | imoh
05D0 : A001; -- ' j_op
05D1 : 2800; --   imov t2 0
05D2 : 5D80; -- . push [push! t2]
05D3 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05D4 : 3680; -- | imoh
05D5 : 0660; -- ' load
05D6 : 27E0; -- . imov [imov!   t1 .test_arith_body_retaddr14]
05D7 : 3705; -- ' imoh
05D8 : 1670; --   str     t0 t1
05D9 : 9614; --   iadd    t0 1
05DA : 2003; -- . imov [str!    .ret_stack_ptr t0]
05DB : 3080; -- | imoh
05DC : 1060; -- ' str
05DD : 2003; -- . imov [jmp!    .assert]
05DE : 3002; -- | imoh
05DF : A000; -- ' j_op
05E0 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05E1 : 3680; -- | imoh
05E2 : 0660; -- ' load
05E3 : 9615; --   isub    t0 1
05E4 : 0760; --   load    t1 t0
05E5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
05E6 : 3080; -- | imoh
05E7 : 1060; -- ' str
05E8 : A700; --   jmp     t1
05E9 : 2686; -- . imov [imov! t0 .string_alloc_19]
05EA : 3600; -- ' imoh
05EB : 5D60; -- . push [push! t0]
05EC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
05ED : 3680; -- | imoh
05EE : 0660; -- ' load
05EF : 27F9; -- . imov [imov!   t1 .test_logical_body_retaddr0]
05F0 : 3705; -- ' imoh
05F1 : 1670; --   str     t0 t1
05F2 : 9614; --   iadd    t0 1
05F3 : 2003; -- . imov [str!    .ret_stack_ptr t0]
05F4 : 3080; -- | imoh
05F5 : 1060; -- ' str
05F6 : 20D0; -- . imov [jmp!    .ps]
05F7 : 3001; -- | imoh
05F8 : A000; -- ' j_op
05F9 : 2685; -- . imov [imov! t0 .string_alloc_20]
05FA : 3601; -- ' imoh
05FB : 5D60; -- . push [push! t0]
05FC : 2601; -- . imov [imov! t0 1]
05FD : 3600; -- ' imoh
05FE : 5D60; --   push t0
05FF : 2601; -- . imov [imov! t0 1]
0600 : 3600; -- ' imoh
0601 : 5D60; --   push t0
0602 : 67D0; -- . pop [pop! t1 t0]
0603 : 66D0; -- ' pop
0604 : 2800; --   imov t2 0
0605 : 9607; --   tst  t0
0606 : 200E; -- . imov [jz! .test_logical_body_0_0_andfalse]
0607 : 3006; -- | imoh
0608 : A001; -- ' j_op
0609 : 9707; --   tst  t1
060A : 200E; -- . imov [jz! .test_logical_body_0_0_andfalse]
060B : 3006; -- | imoh
060C : A001; -- ' j_op
060D : 2801; --   imov t2 1
060E : 5D80; -- . push [push! t2]
060F : 2601; -- . imov [imov! t0 1]
0610 : 3600; -- ' imoh
0611 : 5D60; --   push t0
0612 : 67D0; -- . pop [pop! t1 t0]
0613 : 66D0; -- ' pop
0614 : 2801; --   imov t2 1  # default value
0615 : 8675; --   sub  t0 t1
0616 : 201A; -- . imov [jz!  .test_logical_body_0_1_opskip]
0617 : 3006; -- | imoh
0618 : A001; -- ' j_op
0619 : 2800; --   imov t2 0
061A : 5D80; -- . push [push! t2]
061B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
061C : 3680; -- | imoh
061D : 0660; -- ' load
061E : 2728; -- . imov [imov!   t1 .test_logical_body_retaddr1]
061F : 3706; -- ' imoh
0620 : 1670; --   str     t0 t1
0621 : 9614; --   iadd    t0 1
0622 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0623 : 3080; -- | imoh
0624 : 1060; -- ' str
0625 : 2003; -- . imov [jmp!    .assert]
0626 : 3002; -- | imoh
0627 : A000; -- ' j_op
0628 : 264C; -- . imov [imov! t0 .string_alloc_21]
0629 : 3601; -- ' imoh
062A : 5D60; -- . push [push! t0]
062B : 2600; -- . imov [imov! t0 0]
062C : 3600; -- ' imoh
062D : 5D60; --   push t0
062E : 2601; -- . imov [imov! t0 1]
062F : 3600; -- ' imoh
0630 : 5D60; --   push t0
0631 : 67D0; -- . pop [pop! t1 t0]
0632 : 66D0; -- ' pop
0633 : 2800; --   imov t2 0
0634 : 9607; --   tst  t0
0635 : 203D; -- . imov [jz! .test_logical_body_1_0_andfalse]
0636 : 3006; -- | imoh
0637 : A001; -- ' j_op
0638 : 9707; --   tst  t1
0639 : 203D; -- . imov [jz! .test_logical_body_1_0_andfalse]
063A : 3006; -- | imoh
063B : A001; -- ' j_op
063C : 2801; --   imov t2 1
063D : 5D80; -- . push [push! t2]
063E : 2600; -- . imov [imov! t0 0]
063F : 3600; -- ' imoh
0640 : 5D60; --   push t0
0641 : 67D0; -- . pop [pop! t1 t0]
0642 : 66D0; -- ' pop
0643 : 2801; --   imov t2 1  # default value
0644 : 8675; --   sub  t0 t1
0645 : 2049; -- . imov [jz!  .test_logical_body_1_1_opskip]
0646 : 3006; -- | imoh
0647 : A001; -- ' j_op
0648 : 2800; --   imov t2 0
0649 : 5D80; -- . push [push! t2]
064A : 2603; -- . imov [load!   t0 .ret_stack_ptr]
064B : 3680; -- | imoh
064C : 0660; -- ' load
064D : 2757; -- . imov [imov!   t1 .test_logical_body_retaddr2]
064E : 3706; -- ' imoh
064F : 1670; --   str     t0 t1
0650 : 9614; --   iadd    t0 1
0651 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0652 : 3080; -- | imoh
0653 : 1060; -- ' str
0654 : 2003; -- . imov [jmp!    .assert]
0655 : 3002; -- | imoh
0656 : A000; -- ' j_op
0657 : 2601; -- . imov [imov! t0 .string_alloc_22]
0658 : 3601; -- ' imoh
0659 : 5D60; -- . push [push! t0]
065A : 2600; -- . imov [imov! t0 0]
065B : 3600; -- ' imoh
065C : 5D60; --   push t0
065D : 2600; -- . imov [imov! t0 0]
065E : 3600; -- ' imoh
065F : 5D60; --   push t0
0660 : 67D0; -- . pop [pop! t1 t0]
0661 : 66D0; -- ' pop
0662 : 2801; --   imov t2 1
0663 : 9607; --   tst  t0
0664 : 206C; -- . imov [jnz! .test_logical_body_2_0_ortrue]
0665 : 3006; -- | imoh
0666 : A002; -- ' j_op
0667 : 9707; --   tst  t1
0668 : 206C; -- . imov [jnz! .test_logical_body_2_0_ortrue]
0669 : 3006; -- | imoh
066A : A002; -- ' j_op
066B : 2800; --   imov t2 0
066C : 5D80; -- . push [push! t2]
066D : 2600; -- . imov [imov! t0 0]
066E : 3600; -- ' imoh
066F : 5D60; --   push t0
0670 : 67D0; -- . pop [pop! t1 t0]
0671 : 66D0; -- ' pop
0672 : 2801; --   imov t2 1  # default value
0673 : 8675; --   sub  t0 t1
0674 : 2078; -- . imov [jz!  .test_logical_body_2_1_opskip]
0675 : 3006; -- | imoh
0676 : A001; -- ' j_op
0677 : 2800; --   imov t2 0
0678 : 5D80; -- . push [push! t2]
0679 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
067A : 3680; -- | imoh
067B : 0660; -- ' load
067C : 2786; -- . imov [imov!   t1 .test_logical_body_retaddr3]
067D : 3706; -- ' imoh
067E : 1670; --   str     t0 t1
067F : 9614; --   iadd    t0 1
0680 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0681 : 3080; -- | imoh
0682 : 1060; -- ' str
0683 : 2003; -- . imov [jmp!    .assert]
0684 : 3002; -- | imoh
0685 : A000; -- ' j_op
0686 : 2679; -- . imov [imov! t0 .string_alloc_23]
0687 : 3600; -- ' imoh
0688 : 5D60; -- . push [push! t0]
0689 : 2601; -- . imov [imov! t0 1]
068A : 3600; -- ' imoh
068B : 5D60; --   push t0
068C : 2600; -- . imov [imov! t0 0]
068D : 3600; -- ' imoh
068E : 5D60; --   push t0
068F : 67D0; -- . pop [pop! t1 t0]
0690 : 66D0; -- ' pop
0691 : 2801; --   imov t2 1
0692 : 9607; --   tst  t0
0693 : 209B; -- . imov [jnz! .test_logical_body_3_0_ortrue]
0694 : 3006; -- | imoh
0695 : A002; -- ' j_op
0696 : 9707; --   tst  t1
0697 : 209B; -- . imov [jnz! .test_logical_body_3_0_ortrue]
0698 : 3006; -- | imoh
0699 : A002; -- ' j_op
069A : 2800; --   imov t2 0
069B : 5D80; -- . push [push! t2]
069C : 2601; -- . imov [imov! t0 1]
069D : 3600; -- ' imoh
069E : 5D60; --   push t0
069F : 67D0; -- . pop [pop! t1 t0]
06A0 : 66D0; -- ' pop
06A1 : 2801; --   imov t2 1  # default value
06A2 : 8675; --   sub  t0 t1
06A3 : 20A7; -- . imov [jz!  .test_logical_body_3_1_opskip]
06A4 : 3006; -- | imoh
06A5 : A001; -- ' j_op
06A6 : 2800; --   imov t2 0
06A7 : 5D80; -- . push [push! t2]
06A8 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
06A9 : 3680; -- | imoh
06AA : 0660; -- ' load
06AB : 27B5; -- . imov [imov!   t1 .test_logical_body_retaddr4]
06AC : 3706; -- ' imoh
06AD : 1670; --   str     t0 t1
06AE : 9614; --   iadd    t0 1
06AF : 2003; -- . imov [str!    .ret_stack_ptr t0]
06B0 : 3080; -- | imoh
06B1 : 1060; -- ' str
06B2 : 2003; -- . imov [jmp!    .assert]
06B3 : 3002; -- | imoh
06B4 : A000; -- ' j_op
06B5 : 2645; -- . imov [imov! t0 .string_alloc_24]
06B6 : 3601; -- ' imoh
06B7 : 5D60; -- . push [push! t0]
06B8 : 2601; -- . imov [imov! t0 1]
06B9 : 3600; -- ' imoh
06BA : 5D60; --   push t0
06BB : 66D0; -- . pop [pop! t0]
06BC : 2701; --   imov t1 1
06BD : 9607; --   tst  t0
06BE : 20C2; -- . imov [jz! .test_logical_body_4_0_nottrue]
06BF : 3006; -- | imoh
06C0 : A001; -- ' j_op
06C1 : 2700; --   imov t1 0
06C2 : 5D70; -- . push [push! t1]
06C3 : 2600; -- . imov [imov! t0 0]
06C4 : 3600; -- ' imoh
06C5 : 5D60; --   push t0
06C6 : 67D0; -- . pop [pop! t1 t0]
06C7 : 66D0; -- ' pop
06C8 : 2801; --   imov t2 1  # default value
06C9 : 8675; --   sub  t0 t1
06CA : 20CE; -- . imov [jz!  .test_logical_body_4_1_opskip]
06CB : 3006; -- | imoh
06CC : A001; -- ' j_op
06CD : 2800; --   imov t2 0
06CE : 5D80; -- . push [push! t2]
06CF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
06D0 : 3680; -- | imoh
06D1 : 0660; -- ' load
06D2 : 27DC; -- . imov [imov!   t1 .test_logical_body_retaddr5]
06D3 : 3706; -- ' imoh
06D4 : 1670; --   str     t0 t1
06D5 : 9614; --   iadd    t0 1
06D6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
06D7 : 3080; -- | imoh
06D8 : 1060; -- ' str
06D9 : 2003; -- . imov [jmp!    .assert]
06DA : 3002; -- | imoh
06DB : A000; -- ' j_op
06DC : 2623; -- . imov [imov! t0 .string_alloc_25]
06DD : 3601; -- ' imoh
06DE : 5D60; -- . push [push! t0]
06DF : 2600; -- . imov [imov! t0 0]
06E0 : 3600; -- ' imoh
06E1 : 5D60; --   push t0
06E2 : 66D0; -- . pop [pop! t0]
06E3 : 2701; --   imov t1 1
06E4 : 9607; --   tst  t0
06E5 : 20E9; -- . imov [jz! .test_logical_body_5_0_nottrue]
06E6 : 3006; -- | imoh
06E7 : A001; -- ' j_op
06E8 : 2700; --   imov t1 0
06E9 : 5D70; -- . push [push! t1]
06EA : 2601; -- . imov [imov! t0 1]
06EB : 3600; -- ' imoh
06EC : 5D60; --   push t0
06ED : 67D0; -- . pop [pop! t1 t0]
06EE : 66D0; -- ' pop
06EF : 2801; --   imov t2 1  # default value
06F0 : 8675; --   sub  t0 t1
06F1 : 20F5; -- . imov [jz!  .test_logical_body_5_1_opskip]
06F2 : 3006; -- | imoh
06F3 : A001; -- ' j_op
06F4 : 2800; --   imov t2 0
06F5 : 5D80; -- . push [push! t2]
06F6 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
06F7 : 3680; -- | imoh
06F8 : 0660; -- ' load
06F9 : 2703; -- . imov [imov!   t1 .test_logical_body_retaddr6]
06FA : 3707; -- ' imoh
06FB : 1670; --   str     t0 t1
06FC : 9614; --   iadd    t0 1
06FD : 2003; -- . imov [str!    .ret_stack_ptr t0]
06FE : 3080; -- | imoh
06FF : 1060; -- ' str
0700 : 2003; -- . imov [jmp!    .assert]
0701 : 3002; -- | imoh
0702 : A000; -- ' j_op
0703 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0704 : 3680; -- | imoh
0705 : 0660; -- ' load
0706 : 9615; --   isub    t0 1
0707 : 0760; --   load    t1 t0
0708 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0709 : 3080; -- | imoh
070A : 1060; -- ' str
070B : A700; --   jmp     t1
070C : 66D0; -- . pop [pop! t0]
070D : 5D60; -- . push [push! t0 t0]
070E : 5D60; -- ' push
070F : 66D0; -- . pop [pop! t0]
0710 : 5D60; -- . push [push! t0 t0]
0711 : 5D60; -- ' push
0712 : 66D0; -- . pop [pop! t0]
0713 : 0660; --   load t0 t0
0714 : 5D60; -- . push [push! t0]
0715 : 66D0; -- . pop [pop! t0]
0716 : 9607; --   tst  t0
0717 : 2024; -- . imov [jz!  .strlen_body_0_while_exit]
0718 : 3007; -- | imoh
0719 : A001; -- ' j_op
071A : 2601; -- . imov [imov! t0 1]
071B : 3600; -- ' imoh
071C : 5D60; --   push t0
071D : 67D0; -- . pop [pop!  t1 t0]
071E : 66D0; -- ' pop
071F : 8674; --   add   t0 t1
0720 : 5D60; -- . push [push! t0]
0721 : 200F; -- . imov [jmp! .strlen_body_0_while_eval]
0722 : 3007; -- | imoh
0723 : A000; -- ' j_op
0724 : 66D0; -- . pop [pop! t0 t1]
0725 : 67D0; -- ' pop
0726 : 5D60; -- . push [push! t0 t1]
0727 : 5D70; -- ' push
0728 : 67D0; -- . pop [pop!  t1 t0]
0729 : 66D0; -- ' pop
072A : 8675; --   sub   t0 t1
072B : 5D60; -- . push [push! t0]
072C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
072D : 3680; -- | imoh
072E : 0660; -- ' load
072F : 9615; --   isub    t0 1
0730 : 0760; --   load    t1 t0
0731 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0732 : 3080; -- | imoh
0733 : 1060; -- ' str
0734 : A700; --   jmp     t1
0735 : 26A8; -- . imov [imov! t0 .string_alloc_26]
0736 : 3601; -- ' imoh
0737 : 5D60; -- . push [push! t0]
0738 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0739 : 3680; -- | imoh
073A : 0660; -- ' load
073B : 2745; -- . imov [imov!   t1 .test_strlen_body_retaddr0]
073C : 3707; -- ' imoh
073D : 1670; --   str     t0 t1
073E : 9614; --   iadd    t0 1
073F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0740 : 3080; -- | imoh
0741 : 1060; -- ' str
0742 : 20D0; -- . imov [jmp!    .ps]
0743 : 3001; -- | imoh
0744 : A000; -- ' j_op
0745 : 26C6; -- . imov [imov! t0 .string_alloc_27]
0746 : 3600; -- ' imoh
0747 : 5D60; -- . push [push! t0]
0748 : 2671; -- . imov [imov! t0 .string_alloc_28]
0749 : 3600; -- ' imoh
074A : 5D60; -- . push [push! t0]
074B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
074C : 3680; -- | imoh
074D : 0660; -- ' load
074E : 2758; -- . imov [imov!   t1 .test_strlen_body_0_retaddr0]
074F : 3707; -- ' imoh
0750 : 1670; --   str     t0 t1
0751 : 9614; --   iadd    t0 1
0752 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0753 : 3080; -- | imoh
0754 : 1060; -- ' str
0755 : 200C; -- . imov [jmp!    .strlen]
0756 : 3007; -- | imoh
0757 : A000; -- ' j_op
0758 : 2604; -- . imov [imov! t0 4]
0759 : 3600; -- ' imoh
075A : 5D60; --   push t0
075B : 67D0; -- . pop [pop! t1 t0]
075C : 66D0; -- ' pop
075D : 2801; --   imov t2 1  # default value
075E : 8675; --   sub  t0 t1
075F : 2063; -- . imov [jz!  .test_strlen_body_0_0_opskip]
0760 : 3007; -- | imoh
0761 : A001; -- ' j_op
0762 : 2800; --   imov t2 0
0763 : 5D80; -- . push [push! t2]
0764 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0765 : 3680; -- | imoh
0766 : 0660; -- ' load
0767 : 2771; -- . imov [imov!   t1 .test_strlen_body_retaddr1]
0768 : 3707; -- ' imoh
0769 : 1670; --   str     t0 t1
076A : 9614; --   iadd    t0 1
076B : 2003; -- . imov [str!    .ret_stack_ptr t0]
076C : 3080; -- | imoh
076D : 1060; -- ' str
076E : 2003; -- . imov [jmp!    .assert]
076F : 3002; -- | imoh
0770 : A000; -- ' j_op
0771 : 2617; -- . imov [imov! t0 .string_alloc_29]
0772 : 3601; -- ' imoh
0773 : 5D60; -- . push [push! t0]
0774 : 2622; -- . imov [imov! t0 .string_alloc_30]
0775 : 3601; -- ' imoh
0776 : 5D60; -- . push [push! t0]
0777 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0778 : 3680; -- | imoh
0779 : 0660; -- ' load
077A : 2784; -- . imov [imov!   t1 .test_strlen_body_1_retaddr0]
077B : 3707; -- ' imoh
077C : 1670; --   str     t0 t1
077D : 9614; --   iadd    t0 1
077E : 2003; -- . imov [str!    .ret_stack_ptr t0]
077F : 3080; -- | imoh
0780 : 1060; -- ' str
0781 : 200C; -- . imov [jmp!    .strlen]
0782 : 3007; -- | imoh
0783 : A000; -- ' j_op
0784 : 2600; -- . imov [imov! t0 0]
0785 : 3600; -- ' imoh
0786 : 5D60; --   push t0
0787 : 67D0; -- . pop [pop! t1 t0]
0788 : 66D0; -- ' pop
0789 : 2801; --   imov t2 1  # default value
078A : 8675; --   sub  t0 t1
078B : 208F; -- . imov [jz!  .test_strlen_body_1_0_opskip]
078C : 3007; -- | imoh
078D : A001; -- ' j_op
078E : 2800; --   imov t2 0
078F : 5D80; -- . push [push! t2]
0790 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0791 : 3680; -- | imoh
0792 : 0660; -- ' load
0793 : 279D; -- . imov [imov!   t1 .test_strlen_body_retaddr2]
0794 : 3707; -- ' imoh
0795 : 1670; --   str     t0 t1
0796 : 9614; --   iadd    t0 1
0797 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0798 : 3080; -- | imoh
0799 : 1060; -- ' str
079A : 2003; -- . imov [jmp!    .assert]
079B : 3002; -- | imoh
079C : A000; -- ' j_op
079D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
079E : 3680; -- | imoh
079F : 0660; -- ' load
07A0 : 9615; --   isub    t0 1
07A1 : 0760; --   load    t1 t0
07A2 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07A3 : 3080; -- | imoh
07A4 : 1060; -- ' str
07A5 : A700; --   jmp     t1
07A6 : 265B; -- . imov [imov! t0 .string_alloc_31]
07A7 : 3600; -- ' imoh
07A8 : 5D60; -- . push [push! t0]
07A9 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07AA : 3680; -- | imoh
07AB : 0660; -- ' load
07AC : 27B6; -- . imov [imov!   t1 .test_let_body_retaddr0]
07AD : 3707; -- ' imoh
07AE : 1670; --   str     t0 t1
07AF : 9614; --   iadd    t0 1
07B0 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07B1 : 3080; -- | imoh
07B2 : 1060; -- ' str
07B3 : 20D0; -- . imov [jmp!    .ps]
07B4 : 3001; -- | imoh
07B5 : A000; -- ' j_op
07B6 : 260B; -- . imov [imov! t0 11]
07B7 : 3600; -- ' imoh
07B8 : 5D60; --   push t0
07B9 : 260A; -- . imov [imov! t0 10]
07BA : 3600; -- ' imoh
07BB : 5D60; --   push t0
07BC : 260B; -- . imov [imov! t0 11]
07BD : 3600; -- ' imoh
07BE : 5D60; --   push t0
07BF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07C0 : 3680; -- | imoh
07C1 : 0660; -- ' load
07C2 : 67D0; -- . pop [pop!    t1]
07C3 : 1670; --   str     t0 t1
07C4 : 9614; --   iadd    t0 1
07C5 : 67D0; -- . pop [pop!    t1]
07C6 : 1670; --   str     t0 t1
07C7 : 9614; --   iadd    t0 1
07C8 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07C9 : 3080; -- | imoh
07CA : 1060; -- ' str
07CB : 260B; -- . imov [imov! t0 11]
07CC : 3600; -- ' imoh
07CD : 5D60; --   push t0
07CE : 67D0; -- . pop [pop! t1 t0]
07CF : 66D0; -- ' pop
07D0 : 2801; --   imov t2 1  # default value
07D1 : 8675; --   sub  t0 t1
07D2 : 20D6; -- . imov [jz!  .test_let_body_0_let_block_0_0_opskip]
07D3 : 3007; -- | imoh
07D4 : A001; -- ' j_op
07D5 : 2800; --   imov t2 0
07D6 : 5D80; -- . push [push! t2]
07D7 : 2668; -- . imov [imov! t0 .string_alloc_32]
07D8 : 3600; -- ' imoh
07D9 : 5D60; -- . push [push! t0]
07DA : 66D0; -- . pop [pop! t0 t1]
07DB : 67D0; -- ' pop
07DC : 5D60; -- . push [push! t0 t1]
07DD : 5D70; -- ' push
07DE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07DF : 3680; -- | imoh
07E0 : 0660; -- ' load
07E1 : 27EB; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr0]
07E2 : 3707; -- ' imoh
07E3 : 1670; --   str     t0 t1
07E4 : 9614; --   iadd    t0 1
07E5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
07E6 : 3080; -- | imoh
07E7 : 1060; -- ' str
07E8 : 2003; -- . imov [jmp!    .assert]
07E9 : 3002; -- | imoh
07EA : A000; -- ' j_op
07EB : 26CD; -- . imov [imov! t0 .string_alloc_33]
07EC : 3601; -- ' imoh
07ED : 5D60; -- . push [push! t0]
07EE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
07EF : 3680; -- | imoh
07F0 : 0660; -- ' load
07F1 : 2701; -- . imov [imov!   t1 1]
07F2 : 3700; -- ' imoh
07F3 : 8675; --   sub     t0 t1
07F4 : 5D60; -- . push [push!   t0]
07F5 : 66D0; -- . pop [pop! t0]
07F6 : 0660; --   load t0 t0
07F7 : 5D60; -- . push [push! t0]
07F8 : 260A; -- . imov [imov! t0 10]
07F9 : 3600; -- ' imoh
07FA : 5D60; --   push t0
07FB : 67D0; -- . pop [pop! t1 t0]
07FC : 66D0; -- ' pop
07FD : 2801; --   imov t2 1  # default value
07FE : 8675; --   sub  t0 t1
07FF : 2003; -- . imov [jz!  .test_let_body_0_let_block_1_0_opskip]
0800 : 3008; -- | imoh
0801 : A001; -- ' j_op
0802 : 2800; --   imov t2 0
0803 : 5D80; -- . push [push! t2]
0804 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0805 : 3680; -- | imoh
0806 : 0660; -- ' load
0807 : 2711; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr1]
0808 : 3708; -- ' imoh
0809 : 1670; --   str     t0 t1
080A : 9614; --   iadd    t0 1
080B : 2003; -- . imov [str!    .ret_stack_ptr t0]
080C : 3080; -- | imoh
080D : 1060; -- ' str
080E : 2003; -- . imov [jmp!    .assert]
080F : 3002; -- | imoh
0810 : A000; -- ' j_op
0811 : 2649; -- . imov [imov! t0 .string_alloc_34]
0812 : 3601; -- ' imoh
0813 : 5D60; -- . push [push! t0]
0814 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0815 : 3680; -- | imoh
0816 : 0660; -- ' load
0817 : 2702; -- . imov [imov!   t1 2]
0818 : 3700; -- ' imoh
0819 : 8675; --   sub     t0 t1
081A : 5D60; -- . push [push!   t0]
081B : 66D0; -- . pop [pop! t0]
081C : 0660; --   load t0 t0
081D : 5D60; -- . push [push! t0]
081E : 260B; -- . imov [imov! t0 11]
081F : 3600; -- ' imoh
0820 : 5D60; --   push t0
0821 : 67D0; -- . pop [pop! t1 t0]
0822 : 66D0; -- ' pop
0823 : 2801; --   imov t2 1  # default value
0824 : 8675; --   sub  t0 t1
0825 : 2029; -- . imov [jz!  .test_let_body_0_let_block_2_0_opskip]
0826 : 3008; -- | imoh
0827 : A001; -- ' j_op
0828 : 2800; --   imov t2 0
0829 : 5D80; -- . push [push! t2]
082A : 2603; -- . imov [load!   t0 .ret_stack_ptr]
082B : 3680; -- | imoh
082C : 0660; -- ' load
082D : 2737; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr2]
082E : 3708; -- ' imoh
082F : 1670; --   str     t0 t1
0830 : 9614; --   iadd    t0 1
0831 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0832 : 3080; -- | imoh
0833 : 1060; -- ' str
0834 : 2003; -- . imov [jmp!    .assert]
0835 : 3002; -- | imoh
0836 : A000; -- ' j_op
0837 : 260C; -- . imov [imov! t0 12]
0838 : 3600; -- ' imoh
0839 : 5D60; --   push t0
083A : 260D; -- . imov [imov! t0 13]
083B : 3600; -- ' imoh
083C : 5D60; --   push t0
083D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
083E : 3680; -- | imoh
083F : 0660; -- ' load
0840 : 67D0; -- . pop [pop!    t1]
0841 : 1670; --   str     t0 t1
0842 : 9614; --   iadd    t0 1
0843 : 67D0; -- . pop [pop!    t1]
0844 : 1670; --   str     t0 t1
0845 : 9614; --   iadd    t0 1
0846 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0847 : 3080; -- | imoh
0848 : 1060; -- ' str
0849 : 26DC; -- . imov [imov! t0 .string_alloc_35]
084A : 3600; -- ' imoh
084B : 5D60; -- . push [push! t0]
084C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
084D : 3680; -- | imoh
084E : 0660; -- ' load
084F : 2703; -- . imov [imov!   t1 3]
0850 : 3700; -- ' imoh
0851 : 8675; --   sub     t0 t1
0852 : 5D60; -- . push [push!   t0]
0853 : 66D0; -- . pop [pop! t0]
0854 : 0660; --   load t0 t0
0855 : 5D60; -- . push [push! t0]
0856 : 260A; -- . imov [imov! t0 10]
0857 : 3600; -- ' imoh
0858 : 5D60; --   push t0
0859 : 67D0; -- . pop [pop! t1 t0]
085A : 66D0; -- ' pop
085B : 2801; --   imov t2 1  # default value
085C : 8675; --   sub  t0 t1
085D : 2061; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_0_0_opskip]
085E : 3008; -- | imoh
085F : A001; -- ' j_op
0860 : 2800; --   imov t2 0
0861 : 5D80; -- . push [push! t2]
0862 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0863 : 3680; -- | imoh
0864 : 0660; -- ' load
0865 : 276F; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr0]
0866 : 3708; -- ' imoh
0867 : 1670; --   str     t0 t1
0868 : 9614; --   iadd    t0 1
0869 : 2003; -- . imov [str!    .ret_stack_ptr t0]
086A : 3080; -- | imoh
086B : 1060; -- ' str
086C : 2003; -- . imov [jmp!    .assert]
086D : 3002; -- | imoh
086E : A000; -- ' j_op
086F : 2608; -- . imov [imov! t0 .string_alloc_36]
0870 : 3601; -- ' imoh
0871 : 5D60; -- . push [push! t0]
0872 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0873 : 3680; -- | imoh
0874 : 0660; -- ' load
0875 : 2701; -- . imov [imov!   t1 1]
0876 : 3700; -- ' imoh
0877 : 8675; --   sub     t0 t1
0878 : 5D60; -- . push [push!   t0]
0879 : 66D0; -- . pop [pop! t0]
087A : 0660; --   load t0 t0
087B : 5D60; -- . push [push! t0]
087C : 260C; -- . imov [imov! t0 12]
087D : 3600; -- ' imoh
087E : 5D60; --   push t0
087F : 67D0; -- . pop [pop! t1 t0]
0880 : 66D0; -- ' pop
0881 : 2801; --   imov t2 1  # default value
0882 : 8675; --   sub  t0 t1
0883 : 2087; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_1_0_opskip]
0884 : 3008; -- | imoh
0885 : A001; -- ' j_op
0886 : 2800; --   imov t2 0
0887 : 5D80; -- . push [push! t2]
0888 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0889 : 3680; -- | imoh
088A : 0660; -- ' load
088B : 2795; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr1]
088C : 3708; -- ' imoh
088D : 1670; --   str     t0 t1
088E : 9614; --   iadd    t0 1
088F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0890 : 3080; -- | imoh
0891 : 1060; -- ' str
0892 : 2003; -- . imov [jmp!    .assert]
0893 : 3002; -- | imoh
0894 : A000; -- ' j_op
0895 : 2676; -- . imov [imov! t0 .string_alloc_37]
0896 : 3600; -- ' imoh
0897 : 5D60; -- . push [push! t0]
0898 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0899 : 3680; -- | imoh
089A : 0660; -- ' load
089B : 2702; -- . imov [imov!   t1 2]
089C : 3700; -- ' imoh
089D : 8675; --   sub     t0 t1
089E : 5D60; -- . push [push!   t0]
089F : 66D0; -- . pop [pop! t0]
08A0 : 0660; --   load t0 t0
08A1 : 5D60; -- . push [push! t0]
08A2 : 260D; -- . imov [imov! t0 13]
08A3 : 3600; -- ' imoh
08A4 : 5D60; --   push t0
08A5 : 67D0; -- . pop [pop! t1 t0]
08A6 : 66D0; -- ' pop
08A7 : 2801; --   imov t2 1  # default value
08A8 : 8675; --   sub  t0 t1
08A9 : 20AD; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_2_0_opskip]
08AA : 3008; -- | imoh
08AB : A001; -- ' j_op
08AC : 2800; --   imov t2 0
08AD : 5D80; -- . push [push! t2]
08AE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08AF : 3680; -- | imoh
08B0 : 0660; -- ' load
08B1 : 27BB; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr2]
08B2 : 3708; -- ' imoh
08B3 : 1670; --   str     t0 t1
08B4 : 9614; --   iadd    t0 1
08B5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08B6 : 3080; -- | imoh
08B7 : 1060; -- ' str
08B8 : 2003; -- . imov [jmp!    .assert]
08B9 : 3002; -- | imoh
08BA : A000; -- ' j_op
08BB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08BC : 3680; -- | imoh
08BD : 0660; -- ' load
08BE : 2702; -- . imov [imov!   t1 2]
08BF : 3700; -- ' imoh
08C0 : 8675; --   sub     t0 t1
08C1 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08C2 : 3080; -- | imoh
08C3 : 1060; -- ' str
08C4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08C5 : 3680; -- | imoh
08C6 : 0660; -- ' load
08C7 : 2702; -- . imov [imov!   t1 2]
08C8 : 3700; -- ' imoh
08C9 : 8675; --   sub     t0 t1
08CA : 2003; -- . imov [str!    .ret_stack_ptr t0]
08CB : 3080; -- | imoh
08CC : 1060; -- ' str
08CD : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08CE : 3680; -- | imoh
08CF : 0660; -- ' load
08D0 : 9615; --   isub    t0 1
08D1 : 0760; --   load    t1 t0
08D2 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08D3 : 3080; -- | imoh
08D4 : 1060; -- ' str
08D5 : A700; --   jmp     t1
08D6 : 269B; -- . imov [imov! t0 .string_alloc_38]
08D7 : 3601; -- ' imoh
08D8 : 5D60; -- . push [push! t0]
08D9 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08DA : 3680; -- | imoh
08DB : 0660; -- ' load
08DC : 27E6; -- . imov [imov!   t1 .test_mul_body_retaddr0]
08DD : 3708; -- ' imoh
08DE : 1670; --   str     t0 t1
08DF : 9614; --   iadd    t0 1
08E0 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08E1 : 3080; -- | imoh
08E2 : 1060; -- ' str
08E3 : 20D0; -- . imov [jmp!    .ps]
08E4 : 3001; -- | imoh
08E5 : A000; -- ' j_op
08E6 : 2680; -- . imov [imov! t0 .string_alloc_39]
08E7 : 3600; -- ' imoh
08E8 : 5D60; -- . push [push! t0]
08E9 : 2601; -- . imov [imov! t0 1]
08EA : 3600; -- ' imoh
08EB : 5D60; --   push t0
08EC : 2602; -- . imov [imov! t0 2]
08ED : 3600; -- ' imoh
08EE : 5D60; --   push t0
08EF : 2603; -- . imov [load!   t0 .ret_stack_ptr]
08F0 : 3680; -- | imoh
08F1 : 0660; -- ' load
08F2 : 27FC; -- . imov [imov!   t1 .test_mul_body_0_retaddr0]
08F3 : 3708; -- ' imoh
08F4 : 1670; --   str     t0 t1
08F5 : 9614; --   iadd    t0 1
08F6 : 2003; -- . imov [str!    .ret_stack_ptr t0]
08F7 : 3080; -- | imoh
08F8 : 1060; -- ' str
08F9 : 207A; -- . imov [jmp!    .mul]
08FA : 3002; -- | imoh
08FB : A000; -- ' j_op
08FC : 2602; -- . imov [imov! t0 2]
08FD : 3600; -- ' imoh
08FE : 5D60; --   push t0
08FF : 67D0; -- . pop [pop! t1 t0]
0900 : 66D0; -- ' pop
0901 : 2801; --   imov t2 1  # default value
0902 : 8675; --   sub  t0 t1
0903 : 2007; -- . imov [jz!  .test_mul_body_0_0_opskip]
0904 : 3009; -- | imoh
0905 : A001; -- ' j_op
0906 : 2800; --   imov t2 0
0907 : 5D80; -- . push [push! t2]
0908 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0909 : 3680; -- | imoh
090A : 0660; -- ' load
090B : 2715; -- . imov [imov!   t1 .test_mul_body_retaddr1]
090C : 3709; -- ' imoh
090D : 1670; --   str     t0 t1
090E : 9614; --   iadd    t0 1
090F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0910 : 3080; -- | imoh
0911 : 1060; -- ' str
0912 : 2003; -- . imov [jmp!    .assert]
0913 : 3002; -- | imoh
0914 : A000; -- ' j_op
0915 : 2679; -- . imov [imov! t0 .string_alloc_40]
0916 : 3601; -- ' imoh
0917 : 5D60; -- . push [push! t0]
0918 : 2602; -- . imov [imov! t0 2]
0919 : 3600; -- ' imoh
091A : 5D60; --   push t0
091B : 2605; -- . imov [imov! t0 5]
091C : 3600; -- ' imoh
091D : 5D60; --   push t0
091E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
091F : 3680; -- | imoh
0920 : 0660; -- ' load
0921 : 272B; -- . imov [imov!   t1 .test_mul_body_1_retaddr0]
0922 : 3709; -- ' imoh
0923 : 1670; --   str     t0 t1
0924 : 9614; --   iadd    t0 1
0925 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0926 : 3080; -- | imoh
0927 : 1060; -- ' str
0928 : 207A; -- . imov [jmp!    .mul]
0929 : 3002; -- | imoh
092A : A000; -- ' j_op
092B : 260A; -- . imov [imov! t0 10]
092C : 3600; -- ' imoh
092D : 5D60; --   push t0
092E : 67D0; -- . pop [pop! t1 t0]
092F : 66D0; -- ' pop
0930 : 2801; --   imov t2 1  # default value
0931 : 8675; --   sub  t0 t1
0932 : 2036; -- . imov [jz!  .test_mul_body_1_0_opskip]
0933 : 3009; -- | imoh
0934 : A001; -- ' j_op
0935 : 2800; --   imov t2 0
0936 : 5D80; -- . push [push! t2]
0937 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0938 : 3680; -- | imoh
0939 : 0660; -- ' load
093A : 2744; -- . imov [imov!   t1 .test_mul_body_retaddr2]
093B : 3709; -- ' imoh
093C : 1670; --   str     t0 t1
093D : 9614; --   iadd    t0 1
093E : 2003; -- . imov [str!    .ret_stack_ptr t0]
093F : 3080; -- | imoh
0940 : 1060; -- ' str
0941 : 2003; -- . imov [jmp!    .assert]
0942 : 3002; -- | imoh
0943 : A000; -- ' j_op
0944 : 26D5; -- . imov [imov! t0 .string_alloc_41]
0945 : 3600; -- ' imoh
0946 : 5D60; -- . push [push! t0]
0947 : 2600; -- . imov [imov! t0 0]
0948 : 3600; -- ' imoh
0949 : 5D60; --   push t0
094A : 260A; -- . imov [imov! t0 10]
094B : 3600; -- ' imoh
094C : 5D60; --   push t0
094D : 2603; -- . imov [load!   t0 .ret_stack_ptr]
094E : 3680; -- | imoh
094F : 0660; -- ' load
0950 : 275A; -- . imov [imov!   t1 .test_mul_body_2_retaddr0]
0951 : 3709; -- ' imoh
0952 : 1670; --   str     t0 t1
0953 : 9614; --   iadd    t0 1
0954 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0955 : 3080; -- | imoh
0956 : 1060; -- ' str
0957 : 207A; -- . imov [jmp!    .mul]
0958 : 3002; -- | imoh
0959 : A000; -- ' j_op
095A : 2600; -- . imov [imov! t0 0]
095B : 3600; -- ' imoh
095C : 5D60; --   push t0
095D : 67D0; -- . pop [pop! t1 t0]
095E : 66D0; -- ' pop
095F : 2801; --   imov t2 1  # default value
0960 : 8675; --   sub  t0 t1
0961 : 2065; -- . imov [jz!  .test_mul_body_2_0_opskip]
0962 : 3009; -- | imoh
0963 : A001; -- ' j_op
0964 : 2800; --   imov t2 0
0965 : 5D80; -- . push [push! t2]
0966 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0967 : 3680; -- | imoh
0968 : 0660; -- ' load
0969 : 2773; -- . imov [imov!   t1 .test_mul_body_retaddr3]
096A : 3709; -- ' imoh
096B : 1670; --   str     t0 t1
096C : 9614; --   iadd    t0 1
096D : 2003; -- . imov [str!    .ret_stack_ptr t0]
096E : 3080; -- | imoh
096F : 1060; -- ' str
0970 : 2003; -- . imov [jmp!    .assert]
0971 : 3002; -- | imoh
0972 : A000; -- ' j_op
0973 : 2697; -- . imov [imov! t0 .string_alloc_42]
0974 : 3600; -- ' imoh
0975 : 5D60; -- . push [push! t0]
0976 : 260A; -- . imov [imov! t0 10]
0977 : 3600; -- ' imoh
0978 : 5D60; --   push t0
0979 : 2600; -- . imov [imov! t0 0]
097A : 3600; -- ' imoh
097B : 5D60; --   push t0
097C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
097D : 3680; -- | imoh
097E : 0660; -- ' load
097F : 2789; -- . imov [imov!   t1 .test_mul_body_3_retaddr0]
0980 : 3709; -- ' imoh
0981 : 1670; --   str     t0 t1
0982 : 9614; --   iadd    t0 1
0983 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0984 : 3080; -- | imoh
0985 : 1060; -- ' str
0986 : 207A; -- . imov [jmp!    .mul]
0987 : 3002; -- | imoh
0988 : A000; -- ' j_op
0989 : 2600; -- . imov [imov! t0 0]
098A : 3600; -- ' imoh
098B : 5D60; --   push t0
098C : 67D0; -- . pop [pop! t1 t0]
098D : 66D0; -- ' pop
098E : 2801; --   imov t2 1  # default value
098F : 8675; --   sub  t0 t1
0990 : 2094; -- . imov [jz!  .test_mul_body_3_0_opskip]
0991 : 3009; -- | imoh
0992 : A001; -- ' j_op
0993 : 2800; --   imov t2 0
0994 : 5D80; -- . push [push! t2]
0995 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0996 : 3680; -- | imoh
0997 : 0660; -- ' load
0998 : 27A2; -- . imov [imov!   t1 .test_mul_body_retaddr4]
0999 : 3709; -- ' imoh
099A : 1670; --   str     t0 t1
099B : 9614; --   iadd    t0 1
099C : 2003; -- . imov [str!    .ret_stack_ptr t0]
099D : 3080; -- | imoh
099E : 1060; -- ' str
099F : 2003; -- . imov [jmp!    .assert]
09A0 : 3002; -- | imoh
09A1 : A000; -- ' j_op
09A2 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09A3 : 3680; -- | imoh
09A4 : 0660; -- ' load
09A5 : 9615; --   isub    t0 1
09A6 : 0760; --   load    t1 t0
09A7 : 2003; -- . imov [str!    .ret_stack_ptr t0]
09A8 : 3080; -- | imoh
09A9 : 1060; -- ' str
09AA : A700; --   jmp     t1
09AB : 26B8; -- . imov [imov! t0 .string_alloc_43]
09AC : 3601; -- ' imoh
09AD : 5D60; -- . push [push! t0]
09AE : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09AF : 3680; -- | imoh
09B0 : 0660; -- ' load
09B1 : 27BB; -- . imov [imov!   t1 .test_global_body_retaddr0]
09B2 : 3709; -- ' imoh
09B3 : 1670; --   str     t0 t1
09B4 : 9614; --   iadd    t0 1
09B5 : 2003; -- . imov [str!    .ret_stack_ptr t0]
09B6 : 3080; -- | imoh
09B7 : 1060; -- ' str
09B8 : 20D0; -- . imov [jmp!    .ps]
09B9 : 3001; -- | imoh
09BA : A000; -- ' j_op
09BB : 2636; -- . imov [imov! t0 .string_alloc_44]
09BC : 3601; -- ' imoh
09BD : 5D60; -- . push [push! t0]
09BE : 2600; -- . imov [imov! t0 .variable_alloc_var1]
09BF : 3680; -- ' imoh
09C0 : 5D60; -- . push [push! t0]
09C1 : 66D0; -- . pop [pop! t0]
09C2 : 0660; --   load t0 t0
09C3 : 5D60; -- . push [push! t0]
09C4 : 26AD; -- . imov [imov! t0 57005]
09C5 : 36DE; -- ' imoh
09C6 : 5D60; --   push t0
09C7 : 67D0; -- . pop [pop! t1 t0]
09C8 : 66D0; -- ' pop
09C9 : 2801; --   imov t2 1  # default value
09CA : 8675; --   sub  t0 t1
09CB : 20CF; -- . imov [jz!  .test_global_body_0_0_opskip]
09CC : 3009; -- | imoh
09CD : A001; -- ' j_op
09CE : 2800; --   imov t2 0
09CF : 5D80; -- . push [push! t2]
09D0 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09D1 : 3680; -- | imoh
09D2 : 0660; -- ' load
09D3 : 27DD; -- . imov [imov!   t1 .test_global_body_retaddr1]
09D4 : 3709; -- ' imoh
09D5 : 1670; --   str     t0 t1
09D6 : 9614; --   iadd    t0 1
09D7 : 2003; -- . imov [str!    .ret_stack_ptr t0]
09D8 : 3080; -- | imoh
09D9 : 1060; -- ' str
09DA : 2003; -- . imov [jmp!    .assert]
09DB : 3002; -- | imoh
09DC : A000; -- ' j_op
09DD : 269E; -- . imov [imov! t0 .string_alloc_45]
09DE : 3600; -- ' imoh
09DF : 5D60; -- . push [push! t0]
09E0 : 260A; -- . imov [imov! t0 10]
09E1 : 3600; -- ' imoh
09E2 : 5D60; --   push t0
09E3 : 2600; -- . imov [imov! t0 .variable_alloc_var1]
09E4 : 3680; -- ' imoh
09E5 : 5D60; -- . push [push! t0]
09E6 : 67D0; -- . pop [pop! t1 t0]
09E7 : 66D0; -- ' pop
09E8 : 1760; --   str  t1 t0
09E9 : 2600; -- . imov [imov! t0 .variable_alloc_var1]
09EA : 3680; -- ' imoh
09EB : 5D60; -- . push [push! t0]
09EC : 66D0; -- . pop [pop! t0]
09ED : 0660; --   load t0 t0
09EE : 5D60; -- . push [push! t0]
09EF : 260A; -- . imov [imov! t0 10]
09F0 : 3600; -- ' imoh
09F1 : 5D60; --   push t0
09F2 : 67D0; -- . pop [pop! t1 t0]
09F3 : 66D0; -- ' pop
09F4 : 2801; --   imov t2 1  # default value
09F5 : 8675; --   sub  t0 t1
09F6 : 20FA; -- . imov [jz!  .test_global_body_1_0_opskip]
09F7 : 3009; -- | imoh
09F8 : A001; -- ' j_op
09F9 : 2800; --   imov t2 0
09FA : 5D80; -- . push [push! t2]
09FB : 2603; -- . imov [load!   t0 .ret_stack_ptr]
09FC : 3680; -- | imoh
09FD : 0660; -- ' load
09FE : 2708; -- . imov [imov!   t1 .test_global_body_retaddr2]
09FF : 370A; -- ' imoh
0A00 : 1670; --   str     t0 t1
0A01 : 9614; --   iadd    t0 1
0A02 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A03 : 3080; -- | imoh
0A04 : 1060; -- ' str
0A05 : 2003; -- . imov [jmp!    .assert]
0A06 : 3002; -- | imoh
0A07 : A000; -- ' j_op
0A08 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A09 : 3680; -- | imoh
0A0A : 0660; -- ' load
0A0B : 9615; --   isub    t0 1
0A0C : 0760; --   load    t1 t0
0A0D : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A0E : 3080; -- | imoh
0A0F : 1060; -- ' str
0A10 : A700; --   jmp     t1
0A11 : 2661; -- . imov [imov! t0 .string_alloc_46]
0A12 : 3601; -- ' imoh
0A13 : 5D60; -- . push [push! t0]
0A14 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A15 : 3680; -- | imoh
0A16 : 0660; -- ' load
0A17 : 2721; -- . imov [imov!   t1 .main_body_retaddr0]
0A18 : 370A; -- ' imoh
0A19 : 1670; --   str     t0 t1
0A1A : 9614; --   iadd    t0 1
0A1B : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A1C : 3080; -- | imoh
0A1D : 1060; -- ' str
0A1E : 20D0; -- . imov [jmp!    .ps]
0A1F : 3001; -- | imoh
0A20 : A000; -- ' j_op
0A21 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A22 : 3680; -- | imoh
0A23 : 0660; -- ' load
0A24 : 272E; -- . imov [imov!   t1 .main_body_retaddr1]
0A25 : 370A; -- ' imoh
0A26 : 1670; --   str     t0 t1
0A27 : 9614; --   iadd    t0 1
0A28 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A29 : 3080; -- | imoh
0A2A : 1060; -- ' str
0A2B : 20F7; -- . imov [jmp!    .test_sum]
0A2C : 3002; -- | imoh
0A2D : A000; -- ' j_op
0A2E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A2F : 3680; -- | imoh
0A30 : 0660; -- ' load
0A31 : 273B; -- . imov [imov!   t1 .main_body_retaddr2]
0A32 : 370A; -- ' imoh
0A33 : 1670; --   str     t0 t1
0A34 : 9614; --   iadd    t0 1
0A35 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A36 : 3080; -- | imoh
0A37 : 1060; -- ' str
0A38 : 2076; -- . imov [jmp!    .test_arith]
0A39 : 3003; -- | imoh
0A3A : A000; -- ' j_op
0A3B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A3C : 3680; -- | imoh
0A3D : 0660; -- ' load
0A3E : 2748; -- . imov [imov!   t1 .main_body_retaddr3]
0A3F : 370A; -- ' imoh
0A40 : 1670; --   str     t0 t1
0A41 : 9614; --   iadd    t0 1
0A42 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A43 : 3080; -- | imoh
0A44 : 1060; -- ' str
0A45 : 20E9; -- . imov [jmp!    .test_logical]
0A46 : 3005; -- | imoh
0A47 : A000; -- ' j_op
0A48 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A49 : 3680; -- | imoh
0A4A : 0660; -- ' load
0A4B : 2755; -- . imov [imov!   t1 .main_body_retaddr4]
0A4C : 370A; -- ' imoh
0A4D : 1670; --   str     t0 t1
0A4E : 9614; --   iadd    t0 1
0A4F : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A50 : 3080; -- | imoh
0A51 : 1060; -- ' str
0A52 : 2035; -- . imov [jmp!    .test_strlen]
0A53 : 3007; -- | imoh
0A54 : A000; -- ' j_op
0A55 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A56 : 3680; -- | imoh
0A57 : 0660; -- ' load
0A58 : 2762; -- . imov [imov!   t1 .main_body_retaddr5]
0A59 : 370A; -- ' imoh
0A5A : 1670; --   str     t0 t1
0A5B : 9614; --   iadd    t0 1
0A5C : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A5D : 3080; -- | imoh
0A5E : 1060; -- ' str
0A5F : 20A6; -- . imov [jmp!    .test_let]
0A60 : 3007; -- | imoh
0A61 : A000; -- ' j_op
0A62 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A63 : 3680; -- | imoh
0A64 : 0660; -- ' load
0A65 : 276F; -- . imov [imov!   t1 .main_body_retaddr6]
0A66 : 370A; -- ' imoh
0A67 : 1670; --   str     t0 t1
0A68 : 9614; --   iadd    t0 1
0A69 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A6A : 3080; -- | imoh
0A6B : 1060; -- ' str
0A6C : 20D6; -- . imov [jmp!    .test_mul]
0A6D : 3008; -- | imoh
0A6E : A000; -- ' j_op
0A6F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A70 : 3680; -- | imoh
0A71 : 0660; -- ' load
0A72 : 277C; -- . imov [imov!   t1 .main_body_retaddr7]
0A73 : 370A; -- ' imoh
0A74 : 1670; --   str     t0 t1
0A75 : 9614; --   iadd    t0 1
0A76 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A77 : 3080; -- | imoh
0A78 : 1060; -- ' str
0A79 : 20AB; -- . imov [jmp!    .test_global]
0A7A : 3009; -- | imoh
0A7B : A000; -- ' j_op
0A7C : 26A8; -- . imov [imov! t0 .string_alloc_47]
0A7D : 3600; -- ' imoh
0A7E : 5D60; -- . push [push! t0]
0A7F : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A80 : 3680; -- | imoh
0A81 : 0660; -- ' load
0A82 : 278C; -- . imov [imov!   t1 .main_body_retaddr8]
0A83 : 370A; -- ' imoh
0A84 : 1670; --   str     t0 t1
0A85 : 9614; --   iadd    t0 1
0A86 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A87 : 3080; -- | imoh
0A88 : 1060; -- ' str
0A89 : 20D0; -- . imov [jmp!    .ps]
0A8A : 3001; -- | imoh
0A8B : A000; -- ' j_op
0A8C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0A8D : 3680; -- | imoh
0A8E : 0660; -- ' load
0A8F : 9615; --   isub    t0 1
0A90 : 0760; --   load    t1 t0
0A91 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0A92 : 3080; -- | imoh
0A93 : 1060; -- ' str
0A94 : A700; --   jmp     t1
0A95 : 66D0; -- . pop [pop! t0]
0A96 : 5D60; -- . push [push! t0 t0]
0A97 : 5D60; -- ' push
0A98 : 260A; -- . imov [imov! t0 10]
0A99 : 3600; -- ' imoh
0A9A : 5D60; --   push t0
0A9B : 67D0; -- . pop [pop! t1 t0]
0A9C : 66D0; -- ' pop
0A9D : 2801; --   imov t2 1  # default value
0A9E : 8675; --   sub  t0 t1
0A9F : 20A3; -- . imov [jz!  .pc_body_0_opskip]
0AA0 : 300A; -- | imoh
0AA1 : A001; -- ' j_op
0AA2 : 2800; --   imov t2 0
0AA3 : 5D80; -- . push [push! t2]
0AA4 : 66D0; -- . pop [pop! t0]
0AA5 : 9607; --   tst  t0
0AA6 : 20CC; -- . imov [jz!  .pc_body_1_else]
0AA7 : 300A; -- | imoh
0AA8 : A001; -- ' j_op
0AA9 : 66D0; -- . pop [pop! t0]
0AAA : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0AAB : 3680; -- ' imoh
0AAC : 5D60; -- . push [push! t0]
0AAD : 66D0; -- . pop [pop! t0]
0AAE : 0660; --   load t0 t0
0AAF : 5D60; -- . push [push! t0]
0AB0 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0AB1 : 3680; -- ' imoh
0AB2 : 5D60; -- . push [push! t0]
0AB3 : 66D0; -- . pop [pop! t0]
0AB4 : 0660; --   load t0 t0
0AB5 : 5D60; -- . push [push! t0]
0AB6 : 67D0; -- . pop [pop!  t1 t0]
0AB7 : 66D0; -- ' pop
0AB8 : 8674; --   add   t0 t1
0AB9 : 5D60; -- . push [push! t0]
0ABA : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0ABB : 3680; -- ' imoh
0ABC : 5D60; -- . push [push! t0]
0ABD : 67D0; -- . pop [pop! t1 t0]
0ABE : 66D0; -- ' pop
0ABF : 1760; --   str  t1 t0
0AC0 : 2664; -- . imov [imov! t0 100]
0AC1 : 3600; -- ' imoh
0AC2 : 5D60; --   push t0
0AC3 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0AC4 : 3680; -- ' imoh
0AC5 : 5D60; -- . push [push! t0]
0AC6 : 67D0; -- . pop [pop! t1 t0]
0AC7 : 66D0; -- ' pop
0AC8 : 1760; --   str  t1 t0
0AC9 : 2020; -- . imov [jmp! .pc_body_1_if_exit]
0ACA : 300B; -- | imoh
0ACB : A000; -- ' j_op
0ACC : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0ACD : 3680; -- ' imoh
0ACE : 5D60; -- . push [push! t0]
0ACF : 66D0; -- . pop [pop! t0]
0AD0 : 0660; --   load t0 t0
0AD1 : 5D60; -- . push [push! t0]
0AD2 : 66D0; -- . pop [pop! t0 t1]
0AD3 : 67D0; -- ' pop
0AD4 : 5D60; -- . push [push! t0 t1]
0AD5 : 5D70; -- ' push
0AD6 : 2600; -- . imov [imov! t0 14336]
0AD7 : 3638; -- ' imoh
0AD8 : 5D60; --   push t0
0AD9 : 67D0; -- . pop [pop!  t1 t0]
0ADA : 66D0; -- ' pop
0ADB : 8672; --   or    t0 t1
0ADC : 5D60; -- . push [push! t0]
0ADD : 66D0; -- . pop [pop! t0 t1]
0ADE : 67D0; -- ' pop
0ADF : 5D70; -- . push [push! t1 t0 t1]
0AE0 : 5D60; -- | push
0AE1 : 5D70; -- ' push
0AE2 : 67D0; -- . pop [pop! t1 t0]
0AE3 : 66D0; -- ' pop
0AE4 : 1760; --   str  t1 t0
0AE5 : 2601; -- . imov [imov! t0 1]
0AE6 : 3600; -- ' imoh
0AE7 : 5D60; --   push t0
0AE8 : 67D0; -- . pop [pop!  t1 t0]
0AE9 : 66D0; -- ' pop
0AEA : 8674; --   add   t0 t1
0AEB : 5D60; -- . push [push! t0]
0AEC : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0AED : 3680; -- ' imoh
0AEE : 5D60; -- . push [push! t0]
0AEF : 67D0; -- . pop [pop! t1 t0]
0AF0 : 66D0; -- ' pop
0AF1 : 1760; --   str  t1 t0
0AF2 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0AF3 : 3680; -- ' imoh
0AF4 : 5D60; -- . push [push! t0]
0AF5 : 66D0; -- . pop [pop! t0]
0AF6 : 0660; --   load t0 t0
0AF7 : 5D60; -- . push [push! t0]
0AF8 : 2601; -- . imov [imov! t0 1]
0AF9 : 3600; -- ' imoh
0AFA : 5D60; --   push t0
0AFB : 67D0; -- . pop [pop!  t1 t0]
0AFC : 66D0; -- ' pop
0AFD : 8675; --   sub   t0 t1
0AFE : 5D60; -- . push [push! t0]
0AFF : 66D0; -- . pop [pop! t0]
0B00 : 5D60; -- . push [push! t0 t0]
0B01 : 5D60; -- ' push
0B02 : 2600; -- . imov [imov! t0 0]
0B03 : 3600; -- ' imoh
0B04 : 5D60; --   push t0
0B05 : 67D0; -- . pop [pop! t1 t0]
0B06 : 66D0; -- ' pop
0B07 : 2801; --   imov t2 1  # default value
0B08 : 8675; --   sub  t0 t1
0B09 : 200D; -- . imov [jz!  .pc_body_1_else_0_opskip]
0B0A : 300B; -- | imoh
0B0B : A001; -- ' j_op
0B0C : 2800; --   imov t2 0
0B0D : 5D80; -- . push [push! t2]
0B0E : 66D0; -- . pop [pop! t0]
0B0F : 9607; --   tst  t0
0B10 : 201A; -- . imov [jz!  .pc_body_1_else_1_else]
0B11 : 300B; -- | imoh
0B12 : A001; -- ' j_op
0B13 : 66D0; -- . pop [pop! t0]
0B14 : 2664; -- . imov [imov! t0 100]
0B15 : 3600; -- ' imoh
0B16 : 5D60; --   push t0
0B17 : 201A; -- . imov [jmp! .pc_body_1_else_1_if_exit]
0B18 : 300B; -- | imoh
0B19 : A000; -- ' j_op
0B1A : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0B1B : 3680; -- ' imoh
0B1C : 5D60; -- . push [push! t0]
0B1D : 67D0; -- . pop [pop! t1 t0]
0B1E : 66D0; -- ' pop
0B1F : 1760; --   str  t1 t0
0B20 : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0B21 : 3680; -- ' imoh
0B22 : 5D60; -- . push [push! t0]
0B23 : 66D0; -- . pop [pop! t0]
0B24 : 0660; --   load t0 t0
0B25 : 5D60; -- . push [push! t0]
0B26 : 2670; -- . imov [imov! t0 6000]
0B27 : 3617; -- ' imoh
0B28 : 5D60; --   push t0
0B29 : 67D0; -- . pop [pop! t1 t0]
0B2A : 66D0; -- ' pop
0B2B : 2800; --   imov t2 0  # default value
0B2C : 8675; --   sub  t0 t1
0B2D : 2031; -- . imov [jn!  .pc_body_2_opskip]
0B2E : 300B; -- | imoh
0B2F : A003; -- ' j_op
0B30 : 2801; --   imov t2 1
0B31 : 5D80; -- . push [push! t2]
0B32 : 66D0; -- . pop [pop! t0]
0B33 : 9607; --   tst  t0
0B34 : 204C; -- . imov [jz!  .pc_body_3_else]
0B35 : 300B; -- | imoh
0B36 : A001; -- ' j_op
0B37 : 2600; -- . imov [imov! t0 0]
0B38 : 3600; -- ' imoh
0B39 : 5D60; --   push t0
0B3A : 2602; -- . imov [imov! t0 .variable_alloc_text_ptr]
0B3B : 3680; -- ' imoh
0B3C : 5D60; -- . push [push! t0]
0B3D : 67D0; -- . pop [pop! t1 t0]
0B3E : 66D0; -- ' pop
0B3F : 1760; --   str  t1 t0
0B40 : 2664; -- . imov [imov! t0 100]
0B41 : 3600; -- ' imoh
0B42 : 5D60; --   push t0
0B43 : 2601; -- . imov [imov! t0 .variable_alloc_text_progress]
0B44 : 3680; -- ' imoh
0B45 : 5D60; -- . push [push! t0]
0B46 : 67D0; -- . pop [pop! t1 t0]
0B47 : 66D0; -- ' pop
0B48 : 1760; --   str  t1 t0
0B49 : 204C; -- . imov [jmp! .pc_body_3_if_exit]
0B4A : 300B; -- | imoh
0B4B : A000; -- ' j_op
0B4C : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B4D : 3680; -- | imoh
0B4E : 0660; -- ' load
0B4F : 9615; --   isub    t0 1
0B50 : 0760; --   load    t1 t0
0B51 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B52 : 3080; -- | imoh
0B53 : 1060; -- ' str
0B54 : A700; --   jmp     t1
0B55 : 66D0; -- . pop [pop! t0]
0B56 : 5D60; -- . push [push! t0 t0]
0B57 : 5D60; -- ' push
0B58 : 260A; -- . imov [imov! t0 10]
0B59 : 3600; -- ' imoh
0B5A : 5D60; --   push t0
0B5B : 67D0; -- . pop [pop! t1 t0]
0B5C : 66D0; -- ' pop
0B5D : 2801; --   imov t2 1  # default value
0B5E : 8675; --   sub  t0 t1
0B5F : 2063; -- . imov [jn!  .ph_body_0_opskip]
0B60 : 300B; -- | imoh
0B61 : A003; -- ' j_op
0B62 : 2800; --   imov t2 0
0B63 : 5D80; -- . push [push! t2]
0B64 : 66D0; -- . pop [pop! t0]
0B65 : 9607; --   tst  t0
0B66 : 2080; -- . imov [jz!  .ph_body_1_else]
0B67 : 300B; -- | imoh
0B68 : A001; -- ' j_op
0B69 : 2630; -- . imov [imov! t0 48]
0B6A : 3600; -- ' imoh
0B6B : 5D60; --   push t0
0B6C : 67D0; -- . pop [pop!  t1 t0]
0B6D : 66D0; -- ' pop
0B6E : 8674; --   add   t0 t1
0B6F : 5D60; -- . push [push! t0]
0B70 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B71 : 3680; -- | imoh
0B72 : 0660; -- ' load
0B73 : 277D; -- . imov [imov!   t1 .ph_body_1_if_retaddr0]
0B74 : 370B; -- ' imoh
0B75 : 1670; --   str     t0 t1
0B76 : 9614; --   iadd    t0 1
0B77 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B78 : 3080; -- | imoh
0B79 : 1060; -- ' str
0B7A : 2095; -- . imov [jmp!    .pc]
0B7B : 300A; -- | imoh
0B7C : A000; -- ' j_op
0B7D : 209B; -- . imov [jmp! .ph_body_1_if_exit]
0B7E : 300B; -- | imoh
0B7F : A000; -- ' j_op
0B80 : 260A; -- . imov [imov! t0 10]
0B81 : 3600; -- ' imoh
0B82 : 5D60; --   push t0
0B83 : 67D0; -- . pop [pop!  t1 t0]
0B84 : 66D0; -- ' pop
0B85 : 8675; --   sub   t0 t1
0B86 : 5D60; -- . push [push! t0]
0B87 : 2641; -- . imov [imov! t0 65]
0B88 : 3600; -- ' imoh
0B89 : 5D60; --   push t0
0B8A : 67D0; -- . pop [pop!  t1 t0]
0B8B : 66D0; -- ' pop
0B8C : 8674; --   add   t0 t1
0B8D : 5D60; -- . push [push! t0]
0B8E : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B8F : 3680; -- | imoh
0B90 : 0660; -- ' load
0B91 : 279B; -- . imov [imov!   t1 .ph_body_1_else_retaddr0]
0B92 : 370B; -- ' imoh
0B93 : 1670; --   str     t0 t1
0B94 : 9614; --   iadd    t0 1
0B95 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0B96 : 3080; -- | imoh
0B97 : 1060; -- ' str
0B98 : 2095; -- . imov [jmp!    .pc]
0B99 : 300A; -- | imoh
0B9A : A000; -- ' j_op
0B9B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0B9C : 3680; -- | imoh
0B9D : 0660; -- ' load
0B9E : 9615; --   isub    t0 1
0B9F : 0760; --   load    t1 t0
0BA0 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BA1 : 3080; -- | imoh
0BA2 : 1060; -- ' str
0BA3 : A700; --   jmp     t1
0BA4 : 66D0; -- . pop [pop! t0]
0BA5 : 5D60; -- . push [push! t0 t0]
0BA6 : 5D60; -- ' push
0BA7 : 2604; -- . imov [imov! t0 4]
0BA8 : 3600; -- ' imoh
0BA9 : 5D60; --   push t0
0BAA : 67D0; -- . pop [pop!  t1 t0]
0BAB : 66D0; -- ' pop
0BAC : 8679; --   sshr  t0 t1
0BAD : 5D60; -- . push [push! t0]
0BAE : 260F; -- . imov [imov! t0 15]
0BAF : 3600; -- ' imoh
0BB0 : 5D60; --   push t0
0BB1 : 67D0; -- . pop [pop!  t1 t0]
0BB2 : 66D0; -- ' pop
0BB3 : 8671; --   and   t0 t1
0BB4 : 5D60; -- . push [push! t0]
0BB5 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BB6 : 3680; -- | imoh
0BB7 : 0660; -- ' load
0BB8 : 27C2; -- . imov [imov!   t1 .pn_body_retaddr0]
0BB9 : 370B; -- ' imoh
0BBA : 1670; --   str     t0 t1
0BBB : 9614; --   iadd    t0 1
0BBC : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BBD : 3080; -- | imoh
0BBE : 1060; -- ' str
0BBF : 2055; -- . imov [jmp!    .ph]
0BC0 : 300B; -- | imoh
0BC1 : A000; -- ' j_op
0BC2 : 66D0; -- . pop [pop! t0]
0BC3 : 5D60; -- . push [push! t0 t0]
0BC4 : 5D60; -- ' push
0BC5 : 260F; -- . imov [imov! t0 15]
0BC6 : 3600; -- ' imoh
0BC7 : 5D60; --   push t0
0BC8 : 67D0; -- . pop [pop!  t1 t0]
0BC9 : 66D0; -- ' pop
0BCA : 8671; --   and   t0 t1
0BCB : 5D60; -- . push [push! t0]
0BCC : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BCD : 3680; -- | imoh
0BCE : 0660; -- ' load
0BCF : 27D9; -- . imov [imov!   t1 .pn_body_retaddr1]
0BD0 : 370B; -- ' imoh
0BD1 : 1670; --   str     t0 t1
0BD2 : 9614; --   iadd    t0 1
0BD3 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BD4 : 3080; -- | imoh
0BD5 : 1060; -- ' str
0BD6 : 2055; -- . imov [jmp!    .ph]
0BD7 : 300B; -- | imoh
0BD8 : A000; -- ' j_op
0BD9 : 66D0; -- . pop [pop! t0]
0BDA : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BDB : 3680; -- | imoh
0BDC : 0660; -- ' load
0BDD : 9615; --   isub    t0 1
0BDE : 0760; --   load    t1 t0
0BDF : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BE0 : 3080; -- | imoh
0BE1 : 1060; -- ' str
0BE2 : A700; --   jmp     t1
0BE3 : 66D0; -- . pop [pop! t0]
0BE4 : 5D60; -- . push [push! t0 t0]
0BE5 : 5D60; -- ' push
0BE6 : 2608; -- . imov [imov! t0 8]
0BE7 : 3600; -- ' imoh
0BE8 : 5D60; --   push t0
0BE9 : 67D0; -- . pop [pop!  t1 t0]
0BEA : 66D0; -- ' pop
0BEB : 8679; --   sshr  t0 t1
0BEC : 5D60; -- . push [push! t0]
0BED : 26FF; -- . imov [imov! t0 255]
0BEE : 3600; -- ' imoh
0BEF : 5D60; --   push t0
0BF0 : 67D0; -- . pop [pop!  t1 t0]
0BF1 : 66D0; -- ' pop
0BF2 : 8671; --   and   t0 t1
0BF3 : 5D60; -- . push [push! t0]
0BF4 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0BF5 : 3680; -- | imoh
0BF6 : 0660; -- ' load
0BF7 : 2701; -- . imov [imov!   t1 .p_body_retaddr0]
0BF8 : 370C; -- ' imoh
0BF9 : 1670; --   str     t0 t1
0BFA : 9614; --   iadd    t0 1
0BFB : 2003; -- . imov [str!    .ret_stack_ptr t0]
0BFC : 3080; -- | imoh
0BFD : 1060; -- ' str
0BFE : 20A4; -- . imov [jmp!    .pn]
0BFF : 300B; -- | imoh
0C00 : A000; -- ' j_op
0C01 : 66D0; -- . pop [pop! t0]
0C02 : 5D60; -- . push [push! t0 t0]
0C03 : 5D60; -- ' push
0C04 : 26FF; -- . imov [imov! t0 255]
0C05 : 3600; -- ' imoh
0C06 : 5D60; --   push t0
0C07 : 67D0; -- . pop [pop!  t1 t0]
0C08 : 66D0; -- ' pop
0C09 : 8671; --   and   t0 t1
0C0A : 5D60; -- . push [push! t0]
0C0B : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C0C : 3680; -- | imoh
0C0D : 0660; -- ' load
0C0E : 2718; -- . imov [imov!   t1 .p_body_retaddr1]
0C0F : 370C; -- ' imoh
0C10 : 1670; --   str     t0 t1
0C11 : 9614; --   iadd    t0 1
0C12 : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C13 : 3080; -- | imoh
0C14 : 1060; -- ' str
0C15 : 20A4; -- . imov [jmp!    .pn]
0C16 : 300B; -- | imoh
0C17 : A000; -- ' j_op
0C18 : 66D0; -- . pop [pop! t0]
0C19 : 2603; -- . imov [load!   t0 .ret_stack_ptr]
0C1A : 3680; -- | imoh
0C1B : 0660; -- ' load
0C1C : 9615; --   isub    t0 1
0C1D : 0760; --   load    t1 t0
0C1E : 2003; -- . imov [str!    .ret_stack_ptr t0]
0C1F : 3080; -- | imoh
0C20 : 1060; -- ' str
0C21 : A700; --   jmp     t1
END;