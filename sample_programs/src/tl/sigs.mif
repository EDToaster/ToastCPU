DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C15; -- . imov [imov!   isr .isr]
0001 : 3C00; -- ' imoh
0002 : 2601; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2000; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 2018; -- . imov [jmp!    .main]
000F : 3000; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 66D0; -- . pop [pop! t0]
0014 : A020; --   jmpr
0015 : 5D00; -- Â· push r0 [isr!]
0016 : 60D0; -- . pop r0 [rti!]
0017 : C000; -- ' rti
0018 : 2601; -- . imov [imov! t0 1]
0019 : 3600; -- ' imoh
001A : 5D60; --   push t0
001B : 66D0; -- . pop [pop! t0]
001C : 5D60; -- . push [push! t0 t0]
001D : 5D60; -- ' push
001E : 66D0; -- . pop [pop! t0]
001F : 9607; --   tst  t0
0020 : 2026; -- . imov [jz!  .main_body_0_while_exit]
0021 : 3000; -- | imoh
0022 : A001; -- ' j_op
0023 : 201B; -- . imov [jmp! .main_body_0_while_eval]
0024 : 3000; -- | imoh
0025 : A000; -- ' j_op
0026 : 66D0; -- . pop [pop! t0]
0027 : 2600; -- . imov [load!   t0 .ret_stack_ptr]
0028 : 3680; -- | imoh
0029 : 0660; -- ' load
002A : 9615; --   isub    t0 1
002B : 0760; --   load    t1 t0
002C : 2000; -- . imov [str!    .ret_stack_ptr t0]
002D : 3080; -- | imoh
002E : 1060; -- ' str
002F : A700; --   jmp     t1
END;