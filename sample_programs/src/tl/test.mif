DEPTH = 32768;                -- The size of memory in words
            WIDTH = 16;                   -- The size of data in bits
            ADDRESS_RADIX = HEX;          -- The radix for address values
            DATA_RADIX = HEX;             -- The radix for data values
            CONTENT                       -- start of (address : data pairs)
            BEGIN
0000 : 2C29; -- . imov [imov!   isr .isr]
0001 : 3C00; -- ' imoh
0002 : 2626; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 20AF; -- . imov [jmp!    .main]
000F : 3010; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 2664; -- . imov [imov!  t0 100]
0014 : 3600; -- ' imoh
0015 : 2000; -- . imov [str!   .variable_alloc_text_progress t0]
0016 : 3080; -- | imoh
0017 : 1060; -- ' str
0018 : 2600; -- . imov [imov!  t0 0]
0019 : 3600; -- ' imoh
001A : 2001; -- . imov [str!   .variable_alloc_text_ptr t0]
001B : 3080; -- | imoh
001C : 1060; -- ' str
001D : 2600; -- . imov [imov!  t0 0]
001E : 3600; -- ' imoh
001F : 2002; -- . imov [str!   .variable_alloc_key_buffer t0]
0020 : 3080; -- | imoh
0021 : 1060; -- ' str
0022 : 26AD; -- . imov [imov!  t0 57005]
0023 : 36DE; -- ' imoh
0024 : 2024; -- . imov [str!   .variable_alloc_var1 t0]
0025 : 3080; -- | imoh
0026 : 1060; -- ' str
0027 : 66D0; -- . pop [pop! t0]
0028 : A020; --   jmpr
0029 : 5D00; -- Â· push r0 [isr!]
002A : 60D0; -- . pop r0 [rti!]
002B : C000; -- ' rti
002C : 0031; -- 0x31
002D : 0020; -- 0x20
002E : 0026; -- 0x26
002F : 0026; -- 0x26
0030 : 0020; -- 0x20
0031 : 0031; -- 0x31
0032 : 0000; -- 0x0
0033 : 0061; -- 0x61
0034 : 0032; -- 0x32
0035 : 0000; -- 0x0
0036 : 0073; -- 0x73
0037 : 0074; -- 0x74
0038 : 0072; -- 0x72
0039 : 0065; -- 0x65
003A : 0071; -- 0x71
003B : 0028; -- 0x28
003C : 0022; -- 0x22
003D : 0061; -- 0x61
003E : 0061; -- 0x61
003F : 0061; -- 0x61
0040 : 0022; -- 0x22
0041 : 002C; -- 0x2C
0042 : 0020; -- 0x20
0043 : 0022; -- 0x22
0044 : 0061; -- 0x61
0045 : 0061; -- 0x61
0046 : 0061; -- 0x61
0047 : 0062; -- 0x62
0048 : 0022; -- 0x22
0049 : 002C; -- 0x2C
004A : 0020; -- 0x20
004B : 0033; -- 0x33
004C : 0029; -- 0x29
004D : 0000; -- 0x0
004E : 0054; -- 0x54
004F : 0065; -- 0x65
0050 : 0073; -- 0x73
0051 : 0074; -- 0x74
0052 : 0069; -- 0x69
0053 : 006E; -- 0x6E
0054 : 0067; -- 0x67
0055 : 0020; -- 0x20
0056 : 004C; -- 0x4C
0057 : 006F; -- 0x6F
0058 : 0067; -- 0x67
0059 : 0069; -- 0x69
005A : 0063; -- 0x63
005B : 0061; -- 0x61
005C : 006C; -- 0x6C
005D : 000A; -- 0xA
005E : 0000; -- 0x0
005F : 0054; -- 0x54
0060 : 0065; -- 0x65
0061 : 0073; -- 0x73
0062 : 0074; -- 0x74
0063 : 0069; -- 0x69
0064 : 006E; -- 0x6E
0065 : 0067; -- 0x67
0066 : 0020; -- 0x20
0067 : 0053; -- 0x53
0068 : 0075; -- 0x75
0069 : 006D; -- 0x6D
006A : 000A; -- 0xA
006B : 0000; -- 0x0
006C : 0073; -- 0x73
006D : 0074; -- 0x74
006E : 0072; -- 0x72
006F : 0065; -- 0x65
0070 : 0071; -- 0x71
0071 : 0028; -- 0x28
0072 : 0022; -- 0x22
0073 : 0061; -- 0x61
0074 : 0061; -- 0x61
0075 : 0061; -- 0x61
0076 : 0022; -- 0x22
0077 : 002C; -- 0x2C
0078 : 0020; -- 0x20
0079 : 0022; -- 0x22
007A : 0061; -- 0x61
007B : 0061; -- 0x61
007C : 0061; -- 0x61
007D : 0062; -- 0x62
007E : 0022; -- 0x22
007F : 002C; -- 0x2C
0080 : 0020; -- 0x20
0081 : 0034; -- 0x34
0082 : 0029; -- 0x29
0083 : 0000; -- 0x0
0084 : 0061; -- 0x61
0085 : 0061; -- 0x61
0086 : 0061; -- 0x61
0087 : 0061; -- 0x61
0088 : 0000; -- 0x0
0089 : 0038; -- 0x38
008A : 0020; -- 0x20
008B : 003C; -- 0x3C
008C : 0020; -- 0x20
008D : 0037; -- 0x37
008E : 0000; -- 0x0
008F : 0063; -- 0x63
0090 : 0032; -- 0x32
0091 : 0000; -- 0x0
0092 : 0061; -- 0x61
0093 : 0031; -- 0x31
0094 : 0000; -- 0x0
0095 : 0062; -- 0x62
0096 : 0000; -- 0x0
0097 : 0038; -- 0x38
0098 : 0020; -- 0x20
0099 : 003E; -- 0x3E
009A : 003D; -- 0x3D
009B : 0020; -- 0x20
009C : 0037; -- 0x37
009D : 0000; -- 0x0
009E : 0036; -- 0x36
009F : 0020; -- 0x20
00A0 : 003C; -- 0x3C
00A1 : 0020; -- 0x20
00A2 : 0037; -- 0x37
00A3 : 0000; -- 0x0
00A4 : 0073; -- 0x73
00A5 : 0074; -- 0x74
00A6 : 0072; -- 0x72
00A7 : 006C; -- 0x6C
00A8 : 0065; -- 0x65
00A9 : 006E; -- 0x6E
00AA : 0028; -- 0x28
00AB : 0022; -- 0x22
00AC : 0022; -- 0x22
00AD : 0029; -- 0x29
00AE : 0000; -- 0x0
00AF : 0038; -- 0x38
00B0 : 0020; -- 0x20
00B1 : 003E; -- 0x3E
00B2 : 0020; -- 0x20
00B3 : 0037; -- 0x37
00B4 : 0000; -- 0x0
00B5 : 0037; -- 0x37
00B6 : 0020; -- 0x20
00B7 : 003E; -- 0x3E
00B8 : 003D; -- 0x3D
00B9 : 0020; -- 0x20
00BA : 0037; -- 0x37
00BB : 0000; -- 0x0
00BC : 0031; -- 0x31
00BD : 0020; -- 0x20
00BE : 007C; -- 0x7C
00BF : 007C; -- 0x7C
00C0 : 0020; -- 0x20
00C1 : 0030; -- 0x30
00C2 : 0000; -- 0x0
00C3 : 0054; -- 0x54
00C4 : 0065; -- 0x65
00C5 : 0073; -- 0x73
00C6 : 0074; -- 0x74
00C7 : 0069; -- 0x69
00C8 : 006E; -- 0x6E
00C9 : 0067; -- 0x67
00CA : 0020; -- 0x20
00CB : 0067; -- 0x67
00CC : 006C; -- 0x6C
00CD : 006F; -- 0x6F
00CE : 0062; -- 0x62
00CF : 0061; -- 0x61
00D0 : 006C; -- 0x6C
00D1 : 0020; -- 0x20
00D2 : 0076; -- 0x76
00D3 : 0061; -- 0x61
00D4 : 0072; -- 0x72
00D5 : 0073; -- 0x73
00D6 : 000A; -- 0xA
00D7 : 0000; -- 0x0
00D8 : 0031; -- 0x31
00D9 : 0030; -- 0x30
00DA : 0020; -- 0x20
00DB : 0078; -- 0x78
00DC : 0020; -- 0x20
00DD : 0030; -- 0x30
00DE : 0000; -- 0x0
00DF : 0036; -- 0x36
00E0 : 0020; -- 0x20
00E1 : 003D; -- 0x3D
00E2 : 0020; -- 0x20
00E3 : 0037; -- 0x37
00E4 : 0000; -- 0x0
00E5 : 0036; -- 0x36
00E6 : 0020; -- 0x20
00E7 : 003E; -- 0x3E
00E8 : 003D; -- 0x3D
00E9 : 0020; -- 0x20
00EA : 0037; -- 0x37
00EB : 0000; -- 0x0
00EC : 0062; -- 0x62
00ED : 0031; -- 0x31
00EE : 0000; -- 0x0
00EF : 0054; -- 0x54
00F0 : 0065; -- 0x65
00F1 : 0073; -- 0x73
00F2 : 0074; -- 0x74
00F3 : 0069; -- 0x69
00F4 : 006E; -- 0x6E
00F5 : 0067; -- 0x67
00F6 : 0020; -- 0x20
00F7 : 0041; -- 0x41
00F8 : 0072; -- 0x72
00F9 : 0069; -- 0x69
00FA : 0074; -- 0x74
00FB : 0068; -- 0x68
00FC : 000A; -- 0xA
00FD : 0000; -- 0x0
00FE : 0037; -- 0x37
00FF : 0020; -- 0x20
0100 : 003D; -- 0x3D
0101 : 0020; -- 0x20
0102 : 0037; -- 0x37
0103 : 0000; -- 0x0
0104 : 0038; -- 0x38
0105 : 0020; -- 0x20
0106 : 003C; -- 0x3C
0107 : 003D; -- 0x3D
0108 : 0020; -- 0x20
0109 : 0037; -- 0x37
010A : 0000; -- 0x0
010B : 0073; -- 0x73
010C : 0074; -- 0x74
010D : 0072; -- 0x72
010E : 0065; -- 0x65
010F : 0071; -- 0x71
0110 : 0028; -- 0x28
0111 : 0022; -- 0x22
0112 : 0022; -- 0x22
0113 : 002C; -- 0x2C
0114 : 0020; -- 0x20
0115 : 0022; -- 0x22
0116 : 0022; -- 0x22
0117 : 002C; -- 0x2C
0118 : 0020; -- 0x20
0119 : 0030; -- 0x30
011A : 0029; -- 0x29
011B : 0000; -- 0x0
011C : 0061; -- 0x61
011D : 0061; -- 0x61
011E : 0061; -- 0x61
011F : 0000; -- 0x0
0120 : 0073; -- 0x73
0121 : 0075; -- 0x75
0122 : 006D; -- 0x6D
0123 : 0028; -- 0x28
0124 : 0037; -- 0x37
0125 : 0029; -- 0x29
0126 : 0020; -- 0x20
0127 : 003D; -- 0x3D
0128 : 003D; -- 0x3D
0129 : 0020; -- 0x20
012A : 0032; -- 0x32
012B : 0031; -- 0x31
012C : 0000; -- 0x0
012D : 0073; -- 0x73
012E : 0074; -- 0x74
012F : 0072; -- 0x72
0130 : 006C; -- 0x6C
0131 : 0065; -- 0x65
0132 : 006E; -- 0x6E
0133 : 0028; -- 0x28
0134 : 0022; -- 0x22
0135 : 0061; -- 0x61
0136 : 0062; -- 0x62
0137 : 0063; -- 0x63
0138 : 0064; -- 0x64
0139 : 0022; -- 0x22
013A : 0029; -- 0x29
013B : 0000; -- 0x0
013C : 0054; -- 0x54
013D : 0065; -- 0x65
013E : 0073; -- 0x73
013F : 0074; -- 0x74
0140 : 0069; -- 0x69
0141 : 006E; -- 0x6E
0142 : 0067; -- 0x67
0143 : 0020; -- 0x20
0144 : 0073; -- 0x73
0145 : 0074; -- 0x74
0146 : 0072; -- 0x72
0147 : 0065; -- 0x65
0148 : 0071; -- 0x71
0149 : 000A; -- 0xA
014A : 0000; -- 0x0
014B : 0030; -- 0x30
014C : 0020; -- 0x20
014D : 007C; -- 0x7C
014E : 007C; -- 0x7C
014F : 0020; -- 0x20
0150 : 0030; -- 0x30
0151 : 0000; -- 0x0
0152 : 0037; -- 0x37
0153 : 0020; -- 0x20
0154 : 003C; -- 0x3C
0155 : 003D; -- 0x3D
0156 : 0020; -- 0x20
0157 : 0037; -- 0x37
0158 : 0000; -- 0x0
0159 : 0054; -- 0x54
015A : 0065; -- 0x65
015B : 0073; -- 0x73
015C : 0074; -- 0x74
015D : 0069; -- 0x69
015E : 006E; -- 0x6E
015F : 0067; -- 0x67
0160 : 0020; -- 0x20
0161 : 006C; -- 0x6C
0162 : 0065; -- 0x65
0163 : 0074; -- 0x74
0164 : 000A; -- 0xA
0165 : 0000; -- 0x0
0166 : 0073; -- 0x73
0167 : 0074; -- 0x74
0168 : 0072; -- 0x72
0169 : 0065; -- 0x65
016A : 0071; -- 0x71
016B : 0028; -- 0x28
016C : 0022; -- 0x22
016D : 0061; -- 0x61
016E : 0022; -- 0x22
016F : 002C; -- 0x2C
0170 : 0020; -- 0x20
0171 : 0022; -- 0x22
0172 : 0061; -- 0x61
0173 : 0022; -- 0x22
0174 : 002C; -- 0x2C
0175 : 0020; -- 0x20
0176 : 0031; -- 0x31
0177 : 0029; -- 0x29
0178 : 0000; -- 0x0
0179 : 0073; -- 0x73
017A : 0074; -- 0x74
017B : 0072; -- 0x72
017C : 0065; -- 0x65
017D : 0071; -- 0x71
017E : 0028; -- 0x28
017F : 0022; -- 0x22
0180 : 0061; -- 0x61
0181 : 0022; -- 0x22
0182 : 002C; -- 0x2C
0183 : 0020; -- 0x20
0184 : 0022; -- 0x22
0185 : 0022; -- 0x22
0186 : 002C; -- 0x2C
0187 : 0020; -- 0x20
0188 : 0030; -- 0x30
0189 : 0029; -- 0x29
018A : 0000; -- 0x0
018B : 0020; -- 0x20
018C : 0020; -- 0x20
018D : 0020; -- 0x20
018E : 0020; -- 0x20
018F : 0020; -- 0x20
0190 : 0020; -- 0x20
0191 : 0020; -- 0x20
0192 : 0020; -- 0x20
0193 : 0020; -- 0x20
0194 : 0020; -- 0x20
0195 : 0020; -- 0x20
0196 : 0020; -- 0x20
0197 : 0020; -- 0x20
0198 : 0020; -- 0x20
0199 : 0060; -- 0x60
019A : 0020; -- 0x20
019B : 0020; -- 0x20
019C : 0020; -- 0x20
019D : 0020; -- 0x20
019E : 0020; -- 0x20
019F : 0020; -- 0x20
01A0 : 0071; -- 0x71
01A1 : 0031; -- 0x31
01A2 : 0020; -- 0x20
01A3 : 0020; -- 0x20
01A4 : 0020; -- 0x20
01A5 : 007A; -- 0x7A
01A6 : 0073; -- 0x73
01A7 : 0061; -- 0x61
01A8 : 0077; -- 0x77
01A9 : 0032; -- 0x32
01AA : 0020; -- 0x20
01AB : 0020; -- 0x20
01AC : 0063; -- 0x63
01AD : 0078; -- 0x78
01AE : 0064; -- 0x64
01AF : 0065; -- 0x65
01B0 : 0034; -- 0x34
01B1 : 0033; -- 0x33
01B2 : 0020; -- 0x20
01B3 : 0020; -- 0x20
01B4 : 0020; -- 0x20
01B5 : 0076; -- 0x76
01B6 : 0066; -- 0x66
01B7 : 0074; -- 0x74
01B8 : 0072; -- 0x72
01B9 : 0035; -- 0x35
01BA : 0020; -- 0x20
01BB : 0020; -- 0x20
01BC : 006E; -- 0x6E
01BD : 0062; -- 0x62
01BE : 0068; -- 0x68
01BF : 0067; -- 0x67
01C0 : 0079; -- 0x79
01C1 : 0036; -- 0x36
01C2 : 0020; -- 0x20
01C3 : 0020; -- 0x20
01C4 : 0020; -- 0x20
01C5 : 006D; -- 0x6D
01C6 : 006A; -- 0x6A
01C7 : 0075; -- 0x75
01C8 : 0037; -- 0x37
01C9 : 0038; -- 0x38
01CA : 0020; -- 0x20
01CB : 0020; -- 0x20
01CC : 002C; -- 0x2C
01CD : 006B; -- 0x6B
01CE : 0069; -- 0x69
01CF : 006F; -- 0x6F
01D0 : 0030; -- 0x30
01D1 : 0039; -- 0x39
01D2 : 0020; -- 0x20
01D3 : 0020; -- 0x20
01D4 : 002E; -- 0x2E
01D5 : 002F; -- 0x2F
01D6 : 006C; -- 0x6C
01D7 : 003B; -- 0x3B
01D8 : 0070; -- 0x70
01D9 : 002D; -- 0x2D
01DA : 0020; -- 0x20
01DB : 0020; -- 0x20
01DC : 0020; -- 0x20
01DD : 0020; -- 0x20
01DE : 0020; -- 0x20
01DF : 005B; -- 0x5B
01E0 : 003D; -- 0x3D
01E1 : 0020; -- 0x20
01E2 : 0020; -- 0x20
01E3 : 0020; -- 0x20
01E4 : 0020; -- 0x20
01E5 : 000A; -- 0xA
01E6 : 005D; -- 0x5D
01E7 : 0020; -- 0x20
01E8 : 005C; -- 0x5C
01E9 : 0020; -- 0x20
01EA : 0020; -- 0x20
01EB : 0020; -- 0x20
01EC : 0020; -- 0x20
01ED : 0020; -- 0x20
01EE : 0020; -- 0x20
01EF : 0020; -- 0x20
01F0 : 0020; -- 0x20
01F1 : 0020; -- 0x20
01F2 : 0020; -- 0x20
01F3 : 0020; -- 0x20
01F4 : 0020; -- 0x20
01F5 : 0020; -- 0x20
01F6 : 0020; -- 0x20
01F7 : 0020; -- 0x20
01F8 : 0020; -- 0x20
01F9 : 0020; -- 0x20
01FA : 0020; -- 0x20
01FB : 0020; -- 0x20
01FC : 0020; -- 0x20
01FD : 0020; -- 0x20
01FE : 0020; -- 0x20
01FF : 0020; -- 0x20
0200 : 0020; -- 0x20
0201 : 0020; -- 0x20
0202 : 0020; -- 0x20
0203 : 0020; -- 0x20
0204 : 0020; -- 0x20
0205 : 0020; -- 0x20
0206 : 0020; -- 0x20
0207 : 0020; -- 0x20
0208 : 0020; -- 0x20
0209 : 0020; -- 0x20
020A : 0020; -- 0x20
020B : 0020; -- 0x20
020C : 0020; -- 0x20
020D : 0020; -- 0x20
020E : 0020; -- 0x20
020F : 0020; -- 0x20
0210 : 0020; -- 0x20
0211 : 0020; -- 0x20
0212 : 0020; -- 0x20
0213 : 0020; -- 0x20
0214 : 0020; -- 0x20
0215 : 0020; -- 0x20
0216 : 0020; -- 0x20
0217 : 0020; -- 0x20
0218 : 0020; -- 0x20
0219 : 0020; -- 0x20
021A : 0020; -- 0x20
021B : 0020; -- 0x20
021C : 0020; -- 0x20
021D : 0020; -- 0x20
021E : 0020; -- 0x20
021F : 0020; -- 0x20
0220 : 0020; -- 0x20
0221 : 0020; -- 0x20
0222 : 0020; -- 0x20
0223 : 0020; -- 0x20
0224 : 0020; -- 0x20
0225 : 0020; -- 0x20
0226 : 0020; -- 0x20
0227 : 0020; -- 0x20
0228 : 0020; -- 0x20
0229 : 0020; -- 0x20
022A : 0020; -- 0x20
022B : 0020; -- 0x20
022C : 0020; -- 0x20
022D : 0020; -- 0x20
022E : 0020; -- 0x20
022F : 0020; -- 0x20
0230 : 0020; -- 0x20
0231 : 0020; -- 0x20
0232 : 0020; -- 0x20
0233 : 0020; -- 0x20
0234 : 0020; -- 0x20
0235 : 0020; -- 0x20
0236 : 0020; -- 0x20
0237 : 0020; -- 0x20
0238 : 0020; -- 0x20
0239 : 0020; -- 0x20
023A : 0020; -- 0x20
023B : 0020; -- 0x20
023C : 0020; -- 0x20
023D : 0020; -- 0x20
023E : 0020; -- 0x20
023F : 0020; -- 0x20
0240 : 0020; -- 0x20
0241 : 0020; -- 0x20
0242 : 0020; -- 0x20
0243 : 0020; -- 0x20
0244 : 0020; -- 0x20
0245 : 0020; -- 0x20
0246 : 0020; -- 0x20
0247 : 0020; -- 0x20
0248 : 0020; -- 0x20
0249 : 0020; -- 0x20
024A : 0020; -- 0x20
024B : 0020; -- 0x20
024C : 0020; -- 0x20
024D : 0020; -- 0x20
024E : 0020; -- 0x20
024F : 0020; -- 0x20
0250 : 0020; -- 0x20
0251 : 0020; -- 0x20
0252 : 0020; -- 0x20
0253 : 0020; -- 0x20
0254 : 0020; -- 0x20
0255 : 0020; -- 0x20
0256 : 0020; -- 0x20
0257 : 0020; -- 0x20
0258 : 0020; -- 0x20
0259 : 0020; -- 0x20
025A : 0020; -- 0x20
025B : 0020; -- 0x20
025C : 0020; -- 0x20
025D : 0020; -- 0x20
025E : 0020; -- 0x20
025F : 0020; -- 0x20
0260 : 0020; -- 0x20
0261 : 0020; -- 0x20
0262 : 0020; -- 0x20
0263 : 0020; -- 0x20
0264 : 0020; -- 0x20
0265 : 0020; -- 0x20
0266 : 0020; -- 0x20
0267 : 0020; -- 0x20
0268 : 0020; -- 0x20
0269 : 0020; -- 0x20
026A : 0020; -- 0x20
026B : 0020; -- 0x20
026C : 0020; -- 0x20
026D : 0020; -- 0x20
026E : 0020; -- 0x20
026F : 0020; -- 0x20
0270 : 0020; -- 0x20
0271 : 0020; -- 0x20
0272 : 0020; -- 0x20
0273 : 0020; -- 0x20
0274 : 0020; -- 0x20
0275 : 0020; -- 0x20
0276 : 0020; -- 0x20
0277 : 0020; -- 0x20
0278 : 0020; -- 0x20
0279 : 0020; -- 0x20
027A : 0020; -- 0x20
027B : 0020; -- 0x20
027C : 0020; -- 0x20
027D : 0020; -- 0x20
027E : 0020; -- 0x20
027F : 0020; -- 0x20
0280 : 0020; -- 0x20
0281 : 0020; -- 0x20
0282 : 0020; -- 0x20
0283 : 0020; -- 0x20
0284 : 0020; -- 0x20
0285 : 0020; -- 0x20
0286 : 0020; -- 0x20
0287 : 0020; -- 0x20
0288 : 0020; -- 0x20
0289 : 0020; -- 0x20
028A : 0020; -- 0x20
028B : 0000; -- 0x0
028C : 0073; -- 0x73
028D : 0075; -- 0x75
028E : 006D; -- 0x6D
028F : 0028; -- 0x28
0290 : 0032; -- 0x32
0291 : 0032; -- 0x32
0292 : 0029; -- 0x29
0293 : 0020; -- 0x20
0294 : 003D; -- 0x3D
0295 : 003D; -- 0x3D
0296 : 0020; -- 0x20
0297 : 0032; -- 0x32
0298 : 0035; -- 0x35
0299 : 0033; -- 0x33
029A : 0000; -- 0x0
029B : 0031; -- 0x31
029C : 0031; -- 0x31
029D : 0000; -- 0x0
029E : 0000; -- 0x0
029F : 0041; -- 0x41
02A0 : 0073; -- 0x73
02A1 : 0073; -- 0x73
02A2 : 0065; -- 0x65
02A3 : 0072; -- 0x72
02A4 : 0074; -- 0x74
02A5 : 0020; -- 0x20
02A6 : 0046; -- 0x46
02A7 : 0061; -- 0x61
02A8 : 0069; -- 0x69
02A9 : 006C; -- 0x6C
02AA : 0065; -- 0x65
02AB : 0064; -- 0x64
02AC : 000A; -- 0xA
02AD : 0000; -- 0x0
02AE : 0030; -- 0x30
02AF : 0020; -- 0x20
02B0 : 0078; -- 0x78
02B1 : 0020; -- 0x20
02B2 : 0031; -- 0x31
02B3 : 0030; -- 0x30
02B4 : 0000; -- 0x0
02B5 : 0076; -- 0x76
02B6 : 0061; -- 0x61
02B7 : 0072; -- 0x72
02B8 : 0031; -- 0x31
02B9 : 0020; -- 0x20
02BA : 003D; -- 0x3D
02BB : 0020; -- 0x20
02BC : 0031; -- 0x31
02BD : 0030; -- 0x30
02BE : 0000; -- 0x0
02BF : 0037; -- 0x37
02C0 : 0020; -- 0x20
02C1 : 003E; -- 0x3E
02C2 : 0020; -- 0x20
02C3 : 0037; -- 0x37
02C4 : 0000; -- 0x0
02C5 : 0036; -- 0x36
02C6 : 0020; -- 0x20
02C7 : 003E; -- 0x3E
02C8 : 0020; -- 0x20
02C9 : 0037; -- 0x37
02CA : 0000; -- 0x0
02CB : 0032; -- 0x32
02CC : 0020; -- 0x20
02CD : 0078; -- 0x78
02CE : 0020; -- 0x20
02CF : 0035; -- 0x35
02D0 : 0000; -- 0x0
02D1 : 0054; -- 0x54
02D2 : 0065; -- 0x65
02D3 : 0073; -- 0x73
02D4 : 0074; -- 0x74
02D5 : 0069; -- 0x69
02D6 : 006E; -- 0x6E
02D7 : 0067; -- 0x67
02D8 : 0020; -- 0x20
02D9 : 0073; -- 0x73
02DA : 0074; -- 0x74
02DB : 0072; -- 0x72
02DC : 006C; -- 0x6C
02DD : 0065; -- 0x65
02DE : 006E; -- 0x6E
02DF : 000A; -- 0xA
02E0 : 0000; -- 0x0
02E1 : 0036; -- 0x36
02E2 : 0020; -- 0x20
02E3 : 003C; -- 0x3C
02E4 : 003D; -- 0x3D
02E5 : 0020; -- 0x20
02E6 : 0037; -- 0x37
02E7 : 0000; -- 0x0
02E8 : 0054; -- 0x54
02E9 : 0065; -- 0x65
02EA : 0073; -- 0x73
02EB : 0074; -- 0x74
02EC : 0069; -- 0x69
02ED : 006E; -- 0x6E
02EE : 0067; -- 0x67
02EF : 0020; -- 0x20
02F0 : 006D; -- 0x6D
02F1 : 0075; -- 0x75
02F2 : 006C; -- 0x6C
02F3 : 000A; -- 0xA
02F4 : 0000; -- 0x0
02F5 : 0061; -- 0x61
02F6 : 0061; -- 0x61
02F7 : 0061; -- 0x61
02F8 : 0062; -- 0x62
02F9 : 0000; -- 0x0
02FA : 0076; -- 0x76
02FB : 0061; -- 0x61
02FC : 0072; -- 0x72
02FD : 0031; -- 0x31
02FE : 0020; -- 0x20
02FF : 003D; -- 0x3D
0300 : 003D; -- 0x3D
0301 : 0020; -- 0x20
0302 : 0030; -- 0x30
0303 : 0078; -- 0x78
0304 : 0044; -- 0x44
0305 : 0045; -- 0x45
0306 : 0041; -- 0x41
0307 : 0044; -- 0x44
0308 : 0000; -- 0x0
0309 : 0030; -- 0x30
030A : 0020; -- 0x20
030B : 0026; -- 0x26
030C : 0026; -- 0x26
030D : 0020; -- 0x20
030E : 0031; -- 0x31
030F : 0000; -- 0x0
0310 : 0050; -- 0x50
0311 : 0061; -- 0x61
0312 : 0073; -- 0x73
0313 : 0073; -- 0x73
0314 : 0065; -- 0x65
0315 : 0064; -- 0x64
0316 : 0020; -- 0x20
0317 : 0041; -- 0x41
0318 : 006C; -- 0x6C
0319 : 006C; -- 0x6C
031A : 0020; -- 0x20
031B : 0054; -- 0x54
031C : 0065; -- 0x65
031D : 0073; -- 0x73
031E : 0074; -- 0x74
031F : 0020; -- 0x20
0320 : 0043; -- 0x43
0321 : 0061; -- 0x61
0322 : 0073; -- 0x73
0323 : 0065; -- 0x65
0324 : 0073; -- 0x73
0325 : 0021; -- 0x21
0326 : 0000; -- 0x0
0327 : 0030; -- 0x30
0328 : 0020; -- 0x20
0329 : 0021; -- 0x21
032A : 0000; -- 0x0
032B : 0061; -- 0x61
032C : 0000; -- 0x0
032D : 0073; -- 0x73
032E : 0074; -- 0x74
032F : 0072; -- 0x72
0330 : 0065; -- 0x65
0331 : 0071; -- 0x71
0332 : 0028; -- 0x28
0333 : 0022; -- 0x22
0334 : 0061; -- 0x61
0335 : 0022; -- 0x22
0336 : 002C; -- 0x2C
0337 : 0020; -- 0x20
0338 : 0022; -- 0x22
0339 : 0062; -- 0x62
033A : 0022; -- 0x22
033B : 002C; -- 0x2C
033C : 0020; -- 0x20
033D : 0031; -- 0x31
033E : 0029; -- 0x29
033F : 0000; -- 0x0
0340 : 0031; -- 0x31
0341 : 0020; -- 0x20
0342 : 0078; -- 0x78
0343 : 0020; -- 0x20
0344 : 0032; -- 0x32
0345 : 0000; -- 0x0
0346 : 0037; -- 0x37
0347 : 0020; -- 0x20
0348 : 003C; -- 0x3C
0349 : 0020; -- 0x20
034A : 0037; -- 0x37
034B : 0000; -- 0x0
034C : 0061; -- 0x61
034D : 0062; -- 0x62
034E : 0063; -- 0x63
034F : 0064; -- 0x64
0350 : 0000; -- 0x0
0351 : 0031; -- 0x31
0352 : 0020; -- 0x20
0353 : 0021; -- 0x21
0354 : 0000; -- 0x0
0355 : 0062; -- 0x62
0356 : 0032; -- 0x32
0357 : 0000; -- 0x0
0358 : 0048; -- 0x48
0359 : 0065; -- 0x65
035A : 006C; -- 0x6C
035B : 006C; -- 0x6C
035C : 006F; -- 0x6F
035D : 0020; -- 0x20
035E : 0066; -- 0x66
035F : 0072; -- 0x72
0360 : 006F; -- 0x6F
0361 : 006D; -- 0x6D
0362 : 0020; -- 0x20
0363 : 0054; -- 0x54
0364 : 006F; -- 0x6F
0365 : 0061; -- 0x61
0366 : 0073; -- 0x73
0367 : 0074; -- 0x74
0368 : 004C; -- 0x4C
0369 : 0061; -- 0x61
036A : 006E; -- 0x6E
036B : 0067; -- 0x67
036C : 0021; -- 0x21
036D : 000A; -- 0xA
036E : 0000; -- 0x0
036F : 2664; -- . imov [imov! t0 100]
0370 : 3600; -- ' imoh
0371 : 5D60; --   push t0
0372 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
0373 : 3680; -- ' imoh
0374 : 5D60; -- . push [push! t0]
0375 : 67D0; -- . pop [pop! t1 t0]
0376 : 66D0; -- ' pop
0377 : 1760; --   str  t1 t0
0378 : 2600; -- . imov [imov! t0 0]
0379 : 3600; -- ' imoh
037A : 5D60; --   push t0
037B : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
037C : 3680; -- ' imoh
037D : 5D60; -- . push [push! t0]
037E : 67D0; -- . pop [pop! t1 t0]
037F : 66D0; -- ' pop
0380 : 1760; --   str  t1 t0
0381 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0382 : 3680; -- | imoh
0383 : 0660; -- ' load
0384 : 9615; --   isub    t0 1
0385 : 0760; --   load    t1 t0
0386 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0387 : 3080; -- | imoh
0388 : 1060; -- ' str
0389 : A700; --   jmp     t1
038A : 66D0; -- . pop [pop! t0]
038B : 5D60; -- . push [push! t0 t0]
038C : 5D60; -- ' push
038D : 260A; -- . imov [imov! t0 10]
038E : 3600; -- ' imoh
038F : 5D60; --   push t0
0390 : 67D0; -- . pop [pop! t1 t0]
0391 : 66D0; -- ' pop
0392 : 2801; --   imov t2 1  # default value
0393 : 8675; --   sub  t0 t1
0394 : 2098; -- . imov [jz!  .print_char_body_0_operator_opskip]
0395 : 3003; -- | imoh
0396 : A001; -- ' j_op
0397 : 2800; --   imov t2 0
0398 : 5D80; -- . push [push! t2]
0399 : 66D0; -- . pop [pop! t0]
039A : 9607; --   tst  t0
039B : 20C1; -- . imov [jz!  .print_char_body_1_else]
039C : 3003; -- | imoh
039D : A001; -- ' j_op
039E : 66D0; -- . pop [pop! t0]
039F : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
03A0 : 3680; -- ' imoh
03A1 : 5D60; -- . push [push! t0]
03A2 : 66D0; -- . pop [pop! t0]
03A3 : 0660; --   load t0 t0
03A4 : 5D60; -- . push [push! t0]
03A5 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
03A6 : 3680; -- ' imoh
03A7 : 5D60; -- . push [push! t0]
03A8 : 66D0; -- . pop [pop! t0]
03A9 : 0660; --   load t0 t0
03AA : 5D60; -- . push [push! t0]
03AB : 67D0; -- . pop [pop!  t1 t0]
03AC : 66D0; -- ' pop
03AD : 8674; --   add   t0 t1
03AE : 5D60; -- . push [push! t0]
03AF : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
03B0 : 3680; -- ' imoh
03B1 : 5D60; -- . push [push! t0]
03B2 : 67D0; -- . pop [pop! t1 t0]
03B3 : 66D0; -- ' pop
03B4 : 1760; --   str  t1 t0
03B5 : 2664; -- . imov [imov! t0 100]
03B6 : 3600; -- ' imoh
03B7 : 5D60; --   push t0
03B8 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
03B9 : 3680; -- ' imoh
03BA : 5D60; -- . push [push! t0]
03BB : 67D0; -- . pop [pop! t1 t0]
03BC : 66D0; -- ' pop
03BD : 1760; --   str  t1 t0
03BE : 2015; -- . imov [jmp! .print_char_body_1_if_exit]
03BF : 3004; -- | imoh
03C0 : A000; -- ' j_op
03C1 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
03C2 : 3680; -- ' imoh
03C3 : 5D60; -- . push [push! t0]
03C4 : 66D0; -- . pop [pop! t0]
03C5 : 0660; --   load t0 t0
03C6 : 5D60; -- . push [push! t0]
03C7 : 66D0; -- . pop [pop! t0 t1]
03C8 : 67D0; -- ' pop
03C9 : 5D60; -- . push [push! t0 t1]
03CA : 5D70; -- ' push
03CB : 2600; -- . imov [imov! t0 14336]
03CC : 3638; -- ' imoh
03CD : 5D60; --   push t0
03CE : 67D0; -- . pop [pop!  t1 t0]
03CF : 66D0; -- ' pop
03D0 : 8672; --   or    t0 t1
03D1 : 5D60; -- . push [push! t0]
03D2 : 66D0; -- . pop [pop! t0 t1]
03D3 : 67D0; -- ' pop
03D4 : 5D70; -- . push [push! t1 t0 t1]
03D5 : 5D60; -- | push
03D6 : 5D70; -- ' push
03D7 : 67D0; -- . pop [pop! t1 t0]
03D8 : 66D0; -- ' pop
03D9 : 1760; --   str  t1 t0
03DA : 2601; -- . imov [imov! t0 1]
03DB : 3600; -- ' imoh
03DC : 5D60; --   push t0
03DD : 67D0; -- . pop [pop!  t1 t0]
03DE : 66D0; -- ' pop
03DF : 8674; --   add   t0 t1
03E0 : 5D60; -- . push [push! t0]
03E1 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
03E2 : 3680; -- ' imoh
03E3 : 5D60; -- . push [push! t0]
03E4 : 67D0; -- . pop [pop! t1 t0]
03E5 : 66D0; -- ' pop
03E6 : 1760; --   str  t1 t0
03E7 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
03E8 : 3680; -- ' imoh
03E9 : 5D60; -- . push [push! t0]
03EA : 66D0; -- . pop [pop! t0]
03EB : 0660; --   load t0 t0
03EC : 5D60; -- . push [push! t0]
03ED : 2601; -- . imov [imov! t0 1]
03EE : 3600; -- ' imoh
03EF : 5D60; --   push t0
03F0 : 67D0; -- . pop [pop!  t1 t0]
03F1 : 66D0; -- ' pop
03F2 : 8675; --   sub   t0 t1
03F3 : 5D60; -- . push [push! t0]
03F4 : 66D0; -- . pop [pop! t0]
03F5 : 5D60; -- . push [push! t0 t0]
03F6 : 5D60; -- ' push
03F7 : 2600; -- . imov [imov! t0 0]
03F8 : 3600; -- ' imoh
03F9 : 5D60; --   push t0
03FA : 67D0; -- . pop [pop! t1 t0]
03FB : 66D0; -- ' pop
03FC : 2801; --   imov t2 1  # default value
03FD : 8675; --   sub  t0 t1
03FE : 2002; -- . imov [jz!  .print_char_body_1_else_3_operator_opskip]
03FF : 3004; -- | imoh
0400 : A001; -- ' j_op
0401 : 2800; --   imov t2 0
0402 : 5D80; -- . push [push! t2]
0403 : 66D0; -- . pop [pop! t0]
0404 : 9607; --   tst  t0
0405 : 200F; -- . imov [jz!  .print_char_body_1_else_4_else]
0406 : 3004; -- | imoh
0407 : A001; -- ' j_op
0408 : 66D0; -- . pop [pop! t0]
0409 : 2664; -- . imov [imov! t0 100]
040A : 3600; -- ' imoh
040B : 5D60; --   push t0
040C : 200F; -- . imov [jmp! .print_char_body_1_else_4_if_exit]
040D : 3004; -- | imoh
040E : A000; -- ' j_op
040F : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
0410 : 3680; -- ' imoh
0411 : 5D60; -- . push [push! t0]
0412 : 67D0; -- . pop [pop! t1 t0]
0413 : 66D0; -- ' pop
0414 : 1760; --   str  t1 t0
0415 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0416 : 3680; -- ' imoh
0417 : 5D60; -- . push [push! t0]
0418 : 66D0; -- . pop [pop! t0]
0419 : 0660; --   load t0 t0
041A : 5D60; -- . push [push! t0]
041B : 2670; -- . imov [imov! t0 6000]
041C : 3617; -- ' imoh
041D : 5D60; --   push t0
041E : 67D0; -- . pop [pop! t1 t0]
041F : 66D0; -- ' pop
0420 : 2800; --   imov t2 0  # default value
0421 : 8675; --   sub  t0 t1
0422 : 2026; -- . imov [jn!  .print_char_body_3_operator_opskip]
0423 : 3004; -- | imoh
0424 : A003; -- ' j_op
0425 : 2801; --   imov t2 1
0426 : 5D80; -- . push [push! t2]
0427 : 66D0; -- . pop [pop! t0]
0428 : 9607; --   tst  t0
0429 : 2042; -- . imov [jz!  .print_char_body_4_else]
042A : 3004; -- | imoh
042B : A001; -- ' j_op
042C : 7000; --   halt
042D : 2600; -- . imov [imov! t0 0]
042E : 3600; -- ' imoh
042F : 5D60; --   push t0
0430 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0431 : 3680; -- ' imoh
0432 : 5D60; -- . push [push! t0]
0433 : 67D0; -- . pop [pop! t1 t0]
0434 : 66D0; -- ' pop
0435 : 1760; --   str  t1 t0
0436 : 2664; -- . imov [imov! t0 100]
0437 : 3600; -- ' imoh
0438 : 5D60; --   push t0
0439 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
043A : 3680; -- ' imoh
043B : 5D60; -- . push [push! t0]
043C : 67D0; -- . pop [pop! t1 t0]
043D : 66D0; -- ' pop
043E : 1760; --   str  t1 t0
043F : 2042; -- . imov [jmp! .print_char_body_4_if_exit]
0440 : 3004; -- | imoh
0441 : A000; -- ' j_op
0442 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0443 : 3680; -- | imoh
0444 : 0660; -- ' load
0445 : 9615; --   isub    t0 1
0446 : 0760; --   load    t1 t0
0447 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0448 : 3080; -- | imoh
0449 : 1060; -- ' str
044A : A700; --   jmp     t1
044B : 66D0; -- . pop [pop! t0]
044C : 5D60; -- . push [push! t0 t0]
044D : 5D60; -- ' push
044E : 260A; -- . imov [imov! t0 10]
044F : 3600; -- ' imoh
0450 : 5D60; --   push t0
0451 : 67D0; -- . pop [pop! t1 t0]
0452 : 66D0; -- ' pop
0453 : 2801; --   imov t2 1  # default value
0454 : 8675; --   sub  t0 t1
0455 : 2059; -- . imov [jn!  .print_hex_body_0_operator_opskip]
0456 : 3004; -- | imoh
0457 : A003; -- ' j_op
0458 : 2800; --   imov t2 0
0459 : 5D80; -- . push [push! t2]
045A : 66D0; -- . pop [pop! t0]
045B : 9607; --   tst  t0
045C : 2076; -- . imov [jz!  .print_hex_body_1_else]
045D : 3004; -- | imoh
045E : A001; -- ' j_op
045F : 2630; -- . imov [imov! t0 48]
0460 : 3600; -- ' imoh
0461 : 5D60; --   push t0
0462 : 67D0; -- . pop [pop!  t1 t0]
0463 : 66D0; -- ' pop
0464 : 8674; --   add   t0 t1
0465 : 5D60; -- . push [push! t0]
0466 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0467 : 3680; -- | imoh
0468 : 0660; -- ' load
0469 : 2773; -- . imov [imov!   t1 .print_hex_body_1_if_retaddr0]
046A : 3704; -- ' imoh
046B : 1670; --   str     t0 t1
046C : 9614; --   iadd    t0 1
046D : 2025; -- . imov [str!    .ret_stack_ptr t0]
046E : 3080; -- | imoh
046F : 1060; -- ' str
0470 : 208A; -- . imov [jmp!    .print_char]
0471 : 3003; -- | imoh
0472 : A000; -- ' j_op
0473 : 2091; -- . imov [jmp! .print_hex_body_1_if_exit]
0474 : 3004; -- | imoh
0475 : A000; -- ' j_op
0476 : 260A; -- . imov [imov! t0 10]
0477 : 3600; -- ' imoh
0478 : 5D60; --   push t0
0479 : 67D0; -- . pop [pop!  t1 t0]
047A : 66D0; -- ' pop
047B : 8675; --   sub   t0 t1
047C : 5D60; -- . push [push! t0]
047D : 2641; -- . imov [imov! t0 65]
047E : 3600; -- ' imoh
047F : 5D60; --   push t0
0480 : 67D0; -- . pop [pop!  t1 t0]
0481 : 66D0; -- ' pop
0482 : 8674; --   add   t0 t1
0483 : 5D60; -- . push [push! t0]
0484 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0485 : 3680; -- | imoh
0486 : 0660; -- ' load
0487 : 2791; -- . imov [imov!   t1 .print_hex_body_1_else_retaddr0]
0488 : 3704; -- ' imoh
0489 : 1670; --   str     t0 t1
048A : 9614; --   iadd    t0 1
048B : 2025; -- . imov [str!    .ret_stack_ptr t0]
048C : 3080; -- | imoh
048D : 1060; -- ' str
048E : 208A; -- . imov [jmp!    .print_char]
048F : 3003; -- | imoh
0490 : A000; -- ' j_op
0491 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0492 : 3680; -- | imoh
0493 : 0660; -- ' load
0494 : 9615; --   isub    t0 1
0495 : 0760; --   load    t1 t0
0496 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0497 : 3080; -- | imoh
0498 : 1060; -- ' str
0499 : A700; --   jmp     t1
049A : 66D0; -- . pop [pop! t0]
049B : 5D60; -- . push [push! t0 t0]
049C : 5D60; -- ' push
049D : 2604; -- . imov [imov! t0 4]
049E : 3600; -- ' imoh
049F : 5D60; --   push t0
04A0 : 67D0; -- . pop [pop!  t1 t0]
04A1 : 66D0; -- ' pop
04A2 : 8679; --   sshr  t0 t1
04A3 : 5D60; -- . push [push! t0]
04A4 : 260F; -- . imov [imov! t0 15]
04A5 : 3600; -- ' imoh
04A6 : 5D60; --   push t0
04A7 : 67D0; -- . pop [pop!  t1 t0]
04A8 : 66D0; -- ' pop
04A9 : 8671; --   and   t0 t1
04AA : 5D60; -- . push [push! t0]
04AB : 2625; -- . imov [load!   t0 .ret_stack_ptr]
04AC : 3680; -- | imoh
04AD : 0660; -- ' load
04AE : 27B8; -- . imov [imov!   t1 .print_nibble_body_retaddr0]
04AF : 3704; -- ' imoh
04B0 : 1670; --   str     t0 t1
04B1 : 9614; --   iadd    t0 1
04B2 : 2025; -- . imov [str!    .ret_stack_ptr t0]
04B3 : 3080; -- | imoh
04B4 : 1060; -- ' str
04B5 : 204B; -- . imov [jmp!    .print_hex]
04B6 : 3004; -- | imoh
04B7 : A000; -- ' j_op
04B8 : 66D0; -- . pop [pop! t0]
04B9 : 5D60; -- . push [push! t0 t0]
04BA : 5D60; -- ' push
04BB : 260F; -- . imov [imov! t0 15]
04BC : 3600; -- ' imoh
04BD : 5D60; --   push t0
04BE : 67D0; -- . pop [pop!  t1 t0]
04BF : 66D0; -- ' pop
04C0 : 8671; --   and   t0 t1
04C1 : 5D60; -- . push [push! t0]
04C2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
04C3 : 3680; -- | imoh
04C4 : 0660; -- ' load
04C5 : 27CF; -- . imov [imov!   t1 .print_nibble_body_retaddr1]
04C6 : 3704; -- ' imoh
04C7 : 1670; --   str     t0 t1
04C8 : 9614; --   iadd    t0 1
04C9 : 2025; -- . imov [str!    .ret_stack_ptr t0]
04CA : 3080; -- | imoh
04CB : 1060; -- ' str
04CC : 204B; -- . imov [jmp!    .print_hex]
04CD : 3004; -- | imoh
04CE : A000; -- ' j_op
04CF : 66D0; -- . pop [pop! t0]
04D0 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
04D1 : 3680; -- | imoh
04D2 : 0660; -- ' load
04D3 : 9615; --   isub    t0 1
04D4 : 0760; --   load    t1 t0
04D5 : 2025; -- . imov [str!    .ret_stack_ptr t0]
04D6 : 3080; -- | imoh
04D7 : 1060; -- ' str
04D8 : A700; --   jmp     t1
04D9 : 66D0; -- . pop [pop! t0]
04DA : 5D60; -- . push [push! t0 t0]
04DB : 5D60; -- ' push
04DC : 2608; -- . imov [imov! t0 8]
04DD : 3600; -- ' imoh
04DE : 5D60; --   push t0
04DF : 67D0; -- . pop [pop!  t1 t0]
04E0 : 66D0; -- ' pop
04E1 : 8679; --   sshr  t0 t1
04E2 : 5D60; -- . push [push! t0]
04E3 : 26FF; -- . imov [imov! t0 255]
04E4 : 3600; -- ' imoh
04E5 : 5D60; --   push t0
04E6 : 67D0; -- . pop [pop!  t1 t0]
04E7 : 66D0; -- ' pop
04E8 : 8671; --   and   t0 t1
04E9 : 5D60; -- . push [push! t0]
04EA : 2625; -- . imov [load!   t0 .ret_stack_ptr]
04EB : 3680; -- | imoh
04EC : 0660; -- ' load
04ED : 27F7; -- . imov [imov!   t1 .print_word_body_retaddr0]
04EE : 3704; -- ' imoh
04EF : 1670; --   str     t0 t1
04F0 : 9614; --   iadd    t0 1
04F1 : 2025; -- . imov [str!    .ret_stack_ptr t0]
04F2 : 3080; -- | imoh
04F3 : 1060; -- ' str
04F4 : 209A; -- . imov [jmp!    .print_nibble]
04F5 : 3004; -- | imoh
04F6 : A000; -- ' j_op
04F7 : 66D0; -- . pop [pop! t0]
04F8 : 5D60; -- . push [push! t0 t0]
04F9 : 5D60; -- ' push
04FA : 26FF; -- . imov [imov! t0 255]
04FB : 3600; -- ' imoh
04FC : 5D60; --   push t0
04FD : 67D0; -- . pop [pop!  t1 t0]
04FE : 66D0; -- ' pop
04FF : 8671; --   and   t0 t1
0500 : 5D60; -- . push [push! t0]
0501 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0502 : 3680; -- | imoh
0503 : 0660; -- ' load
0504 : 270E; -- . imov [imov!   t1 .print_word_body_retaddr1]
0505 : 3705; -- ' imoh
0506 : 1670; --   str     t0 t1
0507 : 9614; --   iadd    t0 1
0508 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0509 : 3080; -- | imoh
050A : 1060; -- ' str
050B : 209A; -- . imov [jmp!    .print_nibble]
050C : 3004; -- | imoh
050D : A000; -- ' j_op
050E : 66D0; -- . pop [pop! t0]
050F : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0510 : 3680; -- | imoh
0511 : 0660; -- ' load
0512 : 9615; --   isub    t0 1
0513 : 0760; --   load    t1 t0
0514 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0515 : 3080; -- | imoh
0516 : 1060; -- ' str
0517 : A700; --   jmp     t1
0518 : 66D0; -- . pop [pop! t0]
0519 : 5D60; -- . push [push! t0 t0]
051A : 5D60; -- ' push
051B : 66D0; -- . pop [pop! t0]
051C : 0660; --   load t0 t0
051D : 5D60; -- . push [push! t0]
051E : 66D0; -- . pop [pop! t0]
051F : 5D60; -- . push [push! t0 t0]
0520 : 5D60; -- ' push
0521 : 66D0; -- . pop [pop! t0]
0522 : 9607; --   tst  t0
0523 : 2040; -- . imov [jz!  .print_string_body_0_while_exit]
0524 : 3005; -- | imoh
0525 : A001; -- ' j_op
0526 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0527 : 3680; -- | imoh
0528 : 0660; -- ' load
0529 : 2733; -- . imov [imov!   t1 .print_string_body_0_while_block_retaddr0]
052A : 3705; -- ' imoh
052B : 1670; --   str     t0 t1
052C : 9614; --   iadd    t0 1
052D : 2025; -- . imov [str!    .ret_stack_ptr t0]
052E : 3080; -- | imoh
052F : 1060; -- ' str
0530 : 208A; -- . imov [jmp!    .print_char]
0531 : 3003; -- | imoh
0532 : A000; -- ' j_op
0533 : 2601; -- . imov [imov! t0 1]
0534 : 3600; -- ' imoh
0535 : 5D60; --   push t0
0536 : 67D0; -- . pop [pop!  t1 t0]
0537 : 66D0; -- ' pop
0538 : 8674; --   add   t0 t1
0539 : 5D60; -- . push [push! t0]
053A : 66D0; -- . pop [pop! t0]
053B : 5D60; -- . push [push! t0 t0]
053C : 5D60; -- ' push
053D : 201B; -- . imov [jmp! .print_string_body_0_while_eval]
053E : 3005; -- | imoh
053F : A000; -- ' j_op
0540 : 66D0; -- . pop [pop! t0]
0541 : 66D0; -- . pop [pop! t0]
0542 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0543 : 3680; -- | imoh
0544 : 0660; -- ' load
0545 : 9615; --   isub    t0 1
0546 : 0760; --   load    t1 t0
0547 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0548 : 3080; -- | imoh
0549 : 1060; -- ' str
054A : A700; --   jmp     t1
054B : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
054C : 3680; -- ' imoh
054D : 5D60; -- . push [push! t0]
054E : 2600; -- . imov [imov! t0 0]
054F : 3600; -- ' imoh
0550 : 5D60; --   push t0
0551 : 2622; -- . imov [imov! t0 34]
0552 : 3600; -- ' imoh
0553 : 5D60; -- . push [push! t0]
0554 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0555 : 3680; -- | imoh
0556 : 0660; -- ' load
0557 : 2761; -- . imov [imov!   t1 .keyboard_init_body_retaddr0]
0558 : 3705; -- ' imoh
0559 : 1670; --   str     t0 t1
055A : 9614; --   iadd    t0 1
055B : 2025; -- . imov [str!    .ret_stack_ptr t0]
055C : 3080; -- | imoh
055D : 1060; -- ' str
055E : 2000; -- . imov [jmp!    .memset]
055F : 3006; -- | imoh
0560 : A000; -- ' j_op
0561 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0562 : 3680; -- | imoh
0563 : 0660; -- ' load
0564 : 9615; --   isub    t0 1
0565 : 0760; --   load    t1 t0
0566 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0567 : 3080; -- | imoh
0568 : 1060; -- ' str
0569 : A700; --   jmp     t1
056A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
056B : 3680; -- | imoh
056C : 0660; -- ' load
056D : 2777; -- . imov [imov!   t1 .keyboard_handle_input_body_retaddr0]
056E : 3705; -- ' imoh
056F : 1670; --   str     t0 t1
0570 : 9614; --   iadd    t0 1
0571 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0572 : 3080; -- | imoh
0573 : 1060; -- ' str
0574 : 20E7; -- . imov [jmp!    .get_keyboard_ascii]
0575 : 3005; -- | imoh
0576 : A000; -- ' j_op
0577 : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
0578 : 3680; -- ' imoh
0579 : 5D60; -- . push [push! t0]
057A : 66D0; -- . pop [pop! t0]
057B : 2702; -- . imov [imov! t1 2]
057C : 3700; -- ' imoh
057D : 8674; --   add  t0 t1
057E : 5D60; -- . push [push! t0]
057F : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
0580 : 3680; -- ' imoh
0581 : 5D60; -- . push [push! t0]
0582 : 66D0; -- . pop [pop! t0]
0583 : 2701; -- . imov [imov! t1 1]
0584 : 3700; -- ' imoh
0585 : 8674; --   add  t0 t1
0586 : 5D60; -- . push [push! t0]
0587 : 66D0; -- . pop [pop! t0]
0588 : 0660; --   load t0 t0
0589 : 5D60; -- . push [push! t0]
058A : 67D0; -- . pop [pop!  t1 t0]
058B : 66D0; -- ' pop
058C : 8674; --   add   t0 t1
058D : 5D60; -- . push [push! t0]
058E : 66D0; -- . pop [pop! t0]
058F : 5D60; -- . push [push! t0 t0]
0590 : 5D60; -- ' push
0591 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0592 : 3680; -- | imoh
0593 : 0660; -- ' load
0594 : 279E; -- . imov [imov!   t1 .keyboard_handle_input_body_retaddr1]
0595 : 3705; -- ' imoh
0596 : 1670; --   str     t0 t1
0597 : 9614; --   iadd    t0 1
0598 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0599 : 3080; -- | imoh
059A : 1060; -- ' str
059B : 20D9; -- . imov [jmp!    .print_word]
059C : 3004; -- | imoh
059D : A000; -- ' j_op
059E : 67D0; -- . pop [pop! t1 t0]
059F : 66D0; -- ' pop
05A0 : 1760; --   str  t1 t0
05A1 : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
05A2 : 3680; -- ' imoh
05A3 : 5D60; -- . push [push! t0]
05A4 : 66D0; -- . pop [pop! t0]
05A5 : 2701; -- . imov [imov! t1 1]
05A6 : 3700; -- ' imoh
05A7 : 8674; --   add  t0 t1
05A8 : 5D60; -- . push [push! t0]
05A9 : 66D0; -- . pop [pop! t0]
05AA : 0660; --   load t0 t0
05AB : 5D60; -- . push [push! t0]
05AC : 2601; -- . imov [imov! t0 1]
05AD : 3600; -- ' imoh
05AE : 5D60; --   push t0
05AF : 67D0; -- . pop [pop!  t1 t0]
05B0 : 66D0; -- ' pop
05B1 : 8674; --   add   t0 t1
05B2 : 5D60; -- . push [push! t0]
05B3 : 261F; -- . imov [imov! t0 31]
05B4 : 3600; -- ' imoh
05B5 : 5D60; --   push t0
05B6 : 67D0; -- . pop [pop!  t1 t0]
05B7 : 66D0; -- ' pop
05B8 : 8671; --   and   t0 t1
05B9 : 5D60; -- . push [push! t0]
05BA : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
05BB : 3680; -- ' imoh
05BC : 5D60; -- . push [push! t0]
05BD : 66D0; -- . pop [pop! t0]
05BE : 2701; -- . imov [imov! t1 1]
05BF : 3700; -- ' imoh
05C0 : 8674; --   add  t0 t1
05C1 : 5D60; -- . push [push! t0]
05C2 : 67D0; -- . pop [pop! t1 t0]
05C3 : 66D0; -- ' pop
05C4 : 1760; --   str  t1 t0
05C5 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
05C6 : 3680; -- | imoh
05C7 : 0660; -- ' load
05C8 : 9615; --   isub    t0 1
05C9 : 0760; --   load    t1 t0
05CA : 2025; -- . imov [str!    .ret_stack_ptr t0]
05CB : 3080; -- | imoh
05CC : 1060; -- ' str
05CD : A700; --   jmp     t1
05CE : 2602; -- . imov [imov! t0 .variable_alloc_key_buffer]
05CF : 3680; -- ' imoh
05D0 : 5D60; -- . push [push! t0]
05D1 : 66D0; -- . pop [pop! t0]
05D2 : 2702; -- . imov [imov! t1 2]
05D3 : 3700; -- ' imoh
05D4 : 8674; --   add  t0 t1
05D5 : 5D60; -- . push [push! t0]
05D6 : 66D0; -- . pop [pop! t0]
05D7 : 2700; -- . imov [imov! t1 0]
05D8 : 3700; -- ' imoh
05D9 : 8674; --   add  t0 t1
05DA : 5D60; -- . push [push! t0]
05DB : 66D0; -- . pop [pop! t0]
05DC : 0660; --   load t0 t0
05DD : 5D60; -- . push [push! t0]
05DE : 2625; -- . imov [load!   t0 .ret_stack_ptr]
05DF : 3680; -- | imoh
05E0 : 0660; -- ' load
05E1 : 9615; --   isub    t0 1
05E2 : 0760; --   load    t1 t0
05E3 : 2025; -- . imov [str!    .ret_stack_ptr t0]
05E4 : 3080; -- | imoh
05E5 : 1060; -- ' str
05E6 : A700; --   jmp     t1
05E7 : 268B; -- . imov [imov! t0 .string_alloc_0]
05E8 : 3601; -- ' imoh
05E9 : 5D60; -- . push [push! t0]
05EA : 26FF; -- . imov [imov! t0 65535]
05EB : 36FF; -- ' imoh
05EC : 5D60; --   push t0
05ED : 66D0; -- . pop [pop! t0]
05EE : 0660; --   load t0 t0
05EF : 5D60; -- . push [push! t0]
05F0 : 67D0; -- . pop [pop!  t1 t0]
05F1 : 66D0; -- ' pop
05F2 : 8674; --   add   t0 t1
05F3 : 5D60; -- . push [push! t0]
05F4 : 66D0; -- . pop [pop! t0]
05F5 : 0660; --   load t0 t0
05F6 : 5D60; -- . push [push! t0]
05F7 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
05F8 : 3680; -- | imoh
05F9 : 0660; -- ' load
05FA : 9615; --   isub    t0 1
05FB : 0760; --   load    t1 t0
05FC : 2025; -- . imov [str!    .ret_stack_ptr t0]
05FD : 3080; -- | imoh
05FE : 1060; -- ' str
05FF : A700; --   jmp     t1
0600 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0601 : 3680; -- | imoh
0602 : 0660; -- ' load
0603 : 67D0; -- . pop [pop!    t1]
0604 : 1670; --   str     t0 t1
0605 : 9614; --   iadd    t0 1
0606 : 67D0; -- . pop [pop!    t1]
0607 : 1670; --   str     t0 t1
0608 : 9614; --   iadd    t0 1
0609 : 67D0; -- . pop [pop!    t1]
060A : 1670; --   str     t0 t1
060B : 9614; --   iadd    t0 1
060C : 2025; -- . imov [str!    .ret_stack_ptr t0]
060D : 3080; -- | imoh
060E : 1060; -- ' str
060F : 2600; -- . imov [imov! t0 0]
0610 : 3600; -- ' imoh
0611 : 5D60; --   push t0
0612 : 66D0; -- . pop [pop! t0]
0613 : 5D60; -- . push [push! t0 t0]
0614 : 5D60; -- ' push
0615 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0616 : 3680; -- | imoh
0617 : 0660; -- ' load
0618 : 2703; -- . imov [imov!   t1 3]
0619 : 3700; -- ' imoh
061A : 8675; --   sub     t0 t1
061B : 5D60; -- . push [push!   t0]
061C : 66D0; -- . pop [pop! t0]
061D : 0660; --   load t0 t0
061E : 5D60; -- . push [push! t0]
061F : 67D0; -- . pop [pop! t1 t0]
0620 : 66D0; -- ' pop
0621 : 2801; --   imov t2 1  # default value
0622 : 8675; --   sub  t0 t1
0623 : 2027; -- . imov [jn!  .memset_body_0_let_block_0_while_eval_0_operator_opskip]
0624 : 3006; -- | imoh
0625 : A003; -- ' j_op
0626 : 2800; --   imov t2 0
0627 : 5D80; -- . push [push! t2]
0628 : 66D0; -- . pop [pop! t0]
0629 : 9607; --   tst  t0
062A : 2057; -- . imov [jz!  .memset_body_0_let_block_0_while_exit]
062B : 3006; -- | imoh
062C : A001; -- ' j_op
062D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
062E : 3680; -- | imoh
062F : 0660; -- ' load
0630 : 2702; -- . imov [imov!   t1 2]
0631 : 3700; -- ' imoh
0632 : 8675; --   sub     t0 t1
0633 : 5D60; -- . push [push!   t0]
0634 : 66D0; -- . pop [pop! t0]
0635 : 0660; --   load t0 t0
0636 : 5D60; -- . push [push! t0]
0637 : 66D0; -- . pop [pop! t0 t1]
0638 : 67D0; -- ' pop
0639 : 5D70; -- . push [push! t1 t0 t1]
063A : 5D60; -- | push
063B : 5D70; -- ' push
063C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
063D : 3680; -- | imoh
063E : 0660; -- ' load
063F : 2701; -- . imov [imov!   t1 1]
0640 : 3700; -- ' imoh
0641 : 8675; --   sub     t0 t1
0642 : 5D60; -- . push [push!   t0]
0643 : 66D0; -- . pop [pop! t0]
0644 : 0660; --   load t0 t0
0645 : 5D60; -- . push [push! t0]
0646 : 67D0; -- . pop [pop!  t1 t0]
0647 : 66D0; -- ' pop
0648 : 8674; --   add   t0 t1
0649 : 5D60; -- . push [push! t0]
064A : 67D0; -- . pop [pop! t1 t0]
064B : 66D0; -- ' pop
064C : 1760; --   str  t1 t0
064D : 2601; -- . imov [imov! t0 1]
064E : 3600; -- ' imoh
064F : 5D60; --   push t0
0650 : 67D0; -- . pop [pop!  t1 t0]
0651 : 66D0; -- ' pop
0652 : 8674; --   add   t0 t1
0653 : 5D60; -- . push [push! t0]
0654 : 2012; -- . imov [jmp! .memset_body_0_let_block_0_while_eval]
0655 : 3006; -- | imoh
0656 : A000; -- ' j_op
0657 : 66D0; -- . pop [pop! t0]
0658 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0659 : 3680; -- | imoh
065A : 0660; -- ' load
065B : 2703; -- . imov [imov!   t1 3]
065C : 3700; -- ' imoh
065D : 8675; --   sub     t0 t1
065E : 2025; -- . imov [str!    .ret_stack_ptr t0]
065F : 3080; -- | imoh
0660 : 1060; -- ' str
0661 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0662 : 3680; -- | imoh
0663 : 0660; -- ' load
0664 : 9615; --   isub    t0 1
0665 : 0760; --   load    t1 t0
0666 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0667 : 3080; -- | imoh
0668 : 1060; -- ' str
0669 : A700; --   jmp     t1
066A : 66D0; -- . pop [pop! t0 t1]
066B : 67D0; -- ' pop
066C : 5D60; -- . push [push! t0 t1]
066D : 5D70; -- ' push
066E : 66D0; -- . pop [pop! t0 t1]
066F : 67D0; -- ' pop
0670 : 5D60; -- . push [push! t0 t1]
0671 : 5D70; -- ' push
0672 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0673 : 3680; -- | imoh
0674 : 0660; -- ' load
0675 : 67D0; -- . pop [pop!    t1]
0676 : 1670; --   str     t0 t1
0677 : 9614; --   iadd    t0 1
0678 : 67D0; -- . pop [pop!    t1]
0679 : 1670; --   str     t0 t1
067A : 9614; --   iadd    t0 1
067B : 2025; -- . imov [str!    .ret_stack_ptr t0]
067C : 3080; -- | imoh
067D : 1060; -- ' str
067E : 2600; -- . imov [imov! t0 0]
067F : 3600; -- ' imoh
0680 : 5D60; --   push t0
0681 : 66D0; -- . pop [pop! t0]
0682 : 5D60; -- . push [push! t0 t0]
0683 : 5D60; -- ' push
0684 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0685 : 3680; -- | imoh
0686 : 0660; -- ' load
0687 : 2702; -- . imov [imov!   t1 2]
0688 : 3700; -- ' imoh
0689 : 8675; --   sub     t0 t1
068A : 5D60; -- . push [push!   t0]
068B : 66D0; -- . pop [pop! t0]
068C : 0660; --   load t0 t0
068D : 5D60; -- . push [push! t0]
068E : 67D0; -- . pop [pop! t1 t0]
068F : 66D0; -- ' pop
0690 : 2801; --   imov t2 1  # default value
0691 : 8675; --   sub  t0 t1
0692 : 2096; -- . imov [jn!  .memdump_body_1_let_block_0_while_eval_0_operator_opskip]
0693 : 3006; -- | imoh
0694 : A003; -- ' j_op
0695 : 2800; --   imov t2 0
0696 : 5D80; -- . push [push! t2]
0697 : 66D0; -- . pop [pop! t0]
0698 : 9607; --   tst  t0
0699 : 20C9; -- . imov [jz!  .memdump_body_1_let_block_0_while_exit]
069A : 3006; -- | imoh
069B : A001; -- ' j_op
069C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
069D : 3680; -- | imoh
069E : 0660; -- ' load
069F : 2701; -- . imov [imov!   t1 1]
06A0 : 3700; -- ' imoh
06A1 : 8675; --   sub     t0 t1
06A2 : 5D60; -- . push [push!   t0]
06A3 : 66D0; -- . pop [pop! t0]
06A4 : 0660; --   load t0 t0
06A5 : 5D60; -- . push [push! t0]
06A6 : 66D0; -- . pop [pop! t0 t1]
06A7 : 67D0; -- ' pop
06A8 : 5D70; -- . push [push! t1 t0 t1]
06A9 : 5D60; -- | push
06AA : 5D70; -- ' push
06AB : 67D0; -- . pop [pop!  t1 t0]
06AC : 66D0; -- ' pop
06AD : 8674; --   add   t0 t1
06AE : 5D60; -- . push [push! t0]
06AF : 66D0; -- . pop [pop! t0]
06B0 : 0660; --   load t0 t0
06B1 : 5D60; -- . push [push! t0]
06B2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
06B3 : 3680; -- | imoh
06B4 : 0660; -- ' load
06B5 : 27BF; -- . imov [imov!   t1 .memdump_body_1_let_block_0_while_block_retaddr0]
06B6 : 3706; -- ' imoh
06B7 : 1670; --   str     t0 t1
06B8 : 9614; --   iadd    t0 1
06B9 : 2025; -- . imov [str!    .ret_stack_ptr t0]
06BA : 3080; -- | imoh
06BB : 1060; -- ' str
06BC : 20D9; -- . imov [jmp!    .print_word]
06BD : 3004; -- | imoh
06BE : A000; -- ' j_op
06BF : 2601; -- . imov [imov! t0 1]
06C0 : 3600; -- ' imoh
06C1 : 5D60; --   push t0
06C2 : 67D0; -- . pop [pop!  t1 t0]
06C3 : 66D0; -- ' pop
06C4 : 8674; --   add   t0 t1
06C5 : 5D60; -- . push [push! t0]
06C6 : 2081; -- . imov [jmp! .memdump_body_1_let_block_0_while_eval]
06C7 : 3006; -- | imoh
06C8 : A000; -- ' j_op
06C9 : 66D0; -- . pop [pop! t0]
06CA : 2625; -- . imov [load!   t0 .ret_stack_ptr]
06CB : 3680; -- | imoh
06CC : 0660; -- ' load
06CD : 2702; -- . imov [imov!   t1 2]
06CE : 3700; -- ' imoh
06CF : 8675; --   sub     t0 t1
06D0 : 2025; -- . imov [str!    .ret_stack_ptr t0]
06D1 : 3080; -- | imoh
06D2 : 1060; -- ' str
06D3 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
06D4 : 3680; -- | imoh
06D5 : 0660; -- ' load
06D6 : 9615; --   isub    t0 1
06D7 : 0760; --   load    t1 t0
06D8 : 2025; -- . imov [str!    .ret_stack_ptr t0]
06D9 : 3080; -- | imoh
06DA : 1060; -- ' str
06DB : A700; --   jmp     t1
06DC : 66D0; -- . pop [pop! t0]
06DD : 5D60; -- . push [push! t0 t0]
06DE : 5D60; -- ' push
06DF : 66D0; -- . pop [pop! t0]
06E0 : 5D60; -- . push [push! t0 t0]
06E1 : 5D60; -- ' push
06E2 : 66D0; -- . pop [pop! t0]
06E3 : 0660; --   load t0 t0
06E4 : 5D60; -- . push [push! t0]
06E5 : 66D0; -- . pop [pop! t0]
06E6 : 9607; --   tst  t0
06E7 : 20F4; -- . imov [jz!  .strlen_body_0_while_exit]
06E8 : 3006; -- | imoh
06E9 : A001; -- ' j_op
06EA : 2601; -- . imov [imov! t0 1]
06EB : 3600; -- ' imoh
06EC : 5D60; --   push t0
06ED : 67D0; -- . pop [pop!  t1 t0]
06EE : 66D0; -- ' pop
06EF : 8674; --   add   t0 t1
06F0 : 5D60; -- . push [push! t0]
06F1 : 20DF; -- . imov [jmp! .strlen_body_0_while_eval]
06F2 : 3006; -- | imoh
06F3 : A000; -- ' j_op
06F4 : 66D0; -- . pop [pop! t0 t1]
06F5 : 67D0; -- ' pop
06F6 : 5D60; -- . push [push! t0 t1]
06F7 : 5D70; -- ' push
06F8 : 67D0; -- . pop [pop!  t1 t0]
06F9 : 66D0; -- ' pop
06FA : 8675; --   sub   t0 t1
06FB : 5D60; -- . push [push! t0]
06FC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
06FD : 3680; -- | imoh
06FE : 0660; -- ' load
06FF : 9615; --   isub    t0 1
0700 : 0760; --   load    t1 t0
0701 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0702 : 3080; -- | imoh
0703 : 1060; -- ' str
0704 : A700; --   jmp     t1
0705 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0706 : 3680; -- | imoh
0707 : 0660; -- ' load
0708 : 67D0; -- . pop [pop!    t1]
0709 : 1670; --   str     t0 t1
070A : 9614; --   iadd    t0 1
070B : 2025; -- . imov [str!    .ret_stack_ptr t0]
070C : 3080; -- | imoh
070D : 1060; -- ' str
070E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
070F : 3680; -- | imoh
0710 : 0660; -- ' load
0711 : 2701; -- . imov [imov!   t1 1]
0712 : 3700; -- ' imoh
0713 : 8675; --   sub     t0 t1
0714 : 5D60; -- . push [push!   t0]
0715 : 66D0; -- . pop [pop! t0]
0716 : 0660; --   load t0 t0
0717 : 5D60; -- . push [push! t0]
0718 : 2600; -- . imov [imov! t0 0]
0719 : 3600; -- ' imoh
071A : 5D60; --   push t0
071B : 67D0; -- . pop [pop! t1 t0]
071C : 66D0; -- ' pop
071D : 2801; --   imov t2 1  # default value
071E : 8675; --   sub  t0 t1
071F : 2023; -- . imov [jp!  .streq_body_0_let_block_0_while_eval_0_operator_opskip]
0720 : 3007; -- | imoh
0721 : A004; -- ' j_op
0722 : 2800; --   imov t2 0
0723 : 5D80; -- . push [push! t2]
0724 : 66D0; -- . pop [pop! t0]
0725 : 9607; --   tst  t0
0726 : 209E; -- . imov [jz!  .streq_body_0_let_block_0_while_exit]
0727 : 3007; -- | imoh
0728 : A001; -- ' j_op
0729 : 66D0; -- . pop [pop! t0 t1]
072A : 67D0; -- ' pop
072B : 5D70; -- . push [push! t1 t0 t1]
072C : 5D60; -- | push
072D : 5D70; -- ' push
072E : 66D0; -- . pop [pop! t0]
072F : 0660; --   load t0 t0
0730 : 5D60; -- . push [push! t0]
0731 : 66D0; -- . pop [pop! t0 t1]
0732 : 67D0; -- ' pop
0733 : 5D70; -- . push [push! t1 t0 t1]
0734 : 5D60; -- | push
0735 : 5D70; -- ' push
0736 : 66D0; -- . pop [pop! t0]
0737 : 0660; --   load t0 t0
0738 : 5D60; -- . push [push! t0]
0739 : 67D0; -- . pop [pop! t1 t0]
073A : 66D0; -- ' pop
073B : 2801; --   imov t2 1  # default value
073C : 8675; --   sub  t0 t1
073D : 2041; -- . imov [jz!  .streq_body_0_let_block_0_while_block_0_operator_opskip]
073E : 3007; -- | imoh
073F : A001; -- ' j_op
0740 : 2800; --   imov t2 0
0741 : 5D80; -- . push [push! t2]
0742 : 66D0; -- . pop [pop! t0]
0743 : 2701; --   imov t1 1
0744 : 9607; --   tst  t0
0745 : 2049; -- . imov [jz! .streq_body_0_let_block_0_while_block_1_operator_nottrue]
0746 : 3007; -- | imoh
0747 : A001; -- ' j_op
0748 : 2700; --   imov t1 0
0749 : 5D70; -- . push [push! t1]
074A : 66D0; -- . pop [pop! t0]
074B : 9607; --   tst  t0
074C : 206A; -- . imov [jz!  .streq_body_0_let_block_0_while_block_2_else]
074D : 3007; -- | imoh
074E : A001; -- ' j_op
074F : 66D0; -- . pop [pop! t0]
0750 : 66D0; -- . pop [pop! t0]
0751 : 2600; -- . imov [imov! t0 0]
0752 : 3600; -- ' imoh
0753 : 5D60; --   push t0
0754 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0755 : 3680; -- | imoh
0756 : 0660; -- ' load
0757 : 2701; -- . imov [imov!   t1 1]
0758 : 3700; -- ' imoh
0759 : 8675; --   sub     t0 t1
075A : 2025; -- . imov [str!    .ret_stack_ptr t0]
075B : 3080; -- | imoh
075C : 1060; -- ' str
075D : 20AC; -- . imov [jmp!  .streq_exit]
075E : 3007; -- | imoh
075F : A000; -- ' j_op
0760 : 66D0; -- . pop [pop! t0]
0761 : 2600; -- . imov [imov! t0 0]
0762 : 3600; -- ' imoh
0763 : 5D60; --   push t0
0764 : 2600; -- . imov [imov! t0 0]
0765 : 3600; -- ' imoh
0766 : 5D60; --   push t0
0767 : 206A; -- . imov [jmp! .streq_body_0_let_block_0_while_block_2_if_exit]
0768 : 3007; -- | imoh
0769 : A000; -- ' j_op
076A : 2601; -- . imov [imov! t0 1]
076B : 3600; -- ' imoh
076C : 5D60; --   push t0
076D : 67D0; -- . pop [pop!  t1 t0]
076E : 66D0; -- ' pop
076F : 8674; --   add   t0 t1
0770 : 5D60; -- . push [push! t0]
0771 : 66D0; -- . pop [pop! t0 t1]
0772 : 67D0; -- ' pop
0773 : 5D60; -- . push [push! t0 t1]
0774 : 5D70; -- ' push
0775 : 2601; -- . imov [imov! t0 1]
0776 : 3600; -- ' imoh
0777 : 5D60; --   push t0
0778 : 67D0; -- . pop [pop!  t1 t0]
0779 : 66D0; -- ' pop
077A : 8674; --   add   t0 t1
077B : 5D60; -- . push [push! t0]
077C : 66D0; -- . pop [pop! t0 t1]
077D : 67D0; -- ' pop
077E : 5D60; -- . push [push! t0 t1]
077F : 5D70; -- ' push
0780 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0781 : 3680; -- | imoh
0782 : 0660; -- ' load
0783 : 2701; -- . imov [imov!   t1 1]
0784 : 3700; -- ' imoh
0785 : 8675; --   sub     t0 t1
0786 : 5D60; -- . push [push!   t0]
0787 : 66D0; -- . pop [pop! t0]
0788 : 0660; --   load t0 t0
0789 : 5D60; -- . push [push! t0]
078A : 2601; -- . imov [imov! t0 1]
078B : 3600; -- ' imoh
078C : 5D60; --   push t0
078D : 67D0; -- . pop [pop!  t1 t0]
078E : 66D0; -- ' pop
078F : 8675; --   sub   t0 t1
0790 : 5D60; -- . push [push! t0]
0791 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0792 : 3680; -- | imoh
0793 : 0660; -- ' load
0794 : 2701; -- . imov [imov!   t1 1]
0795 : 3700; -- ' imoh
0796 : 8675; --   sub     t0 t1
0797 : 5D60; -- . push [push!   t0]
0798 : 67D0; -- . pop [pop! t1 t0]
0799 : 66D0; -- ' pop
079A : 1760; --   str  t1 t0
079B : 200E; -- . imov [jmp! .streq_body_0_let_block_0_while_eval]
079C : 3007; -- | imoh
079D : A000; -- ' j_op
079E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
079F : 3680; -- | imoh
07A0 : 0660; -- ' load
07A1 : 2701; -- . imov [imov!   t1 1]
07A2 : 3700; -- ' imoh
07A3 : 8675; --   sub     t0 t1
07A4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07A5 : 3080; -- | imoh
07A6 : 1060; -- ' str
07A7 : 66D0; -- . pop [pop! t0]
07A8 : 66D0; -- . pop [pop! t0]
07A9 : 2601; -- . imov [imov! t0 1]
07AA : 3600; -- ' imoh
07AB : 5D60; --   push t0
07AC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
07AD : 3680; -- | imoh
07AE : 0660; -- ' load
07AF : 9615; --   isub    t0 1
07B0 : 0760; --   load    t1 t0
07B1 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07B2 : 3080; -- | imoh
07B3 : 1060; -- ' str
07B4 : A700; --   jmp     t1
07B5 : 66D0; -- . pop [pop! t0]
07B6 : 9607; --   tst  t0
07B7 : 20BD; -- . imov [jz!  .assert_body_0_else]
07B8 : 3007; -- | imoh
07B9 : A001; -- ' j_op
07BA : 20EE; -- . imov [jmp! .assert_body_0_if_exit]
07BB : 3007; -- | imoh
07BC : A000; -- ' j_op
07BD : 66D0; -- . pop [pop! t0]
07BE : 5D60; -- . push [push! t0 t0]
07BF : 5D60; -- ' push
07C0 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
07C1 : 3680; -- | imoh
07C2 : 0660; -- ' load
07C3 : 27CD; -- . imov [imov!   t1 .assert_body_0_else_retaddr0]
07C4 : 3707; -- ' imoh
07C5 : 1670; --   str     t0 t1
07C6 : 9614; --   iadd    t0 1
07C7 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07C8 : 3080; -- | imoh
07C9 : 1060; -- ' str
07CA : 2018; -- . imov [jmp!    .print_string]
07CB : 3005; -- | imoh
07CC : A000; -- ' j_op
07CD : 2620; -- . imov [imov! t0 32]
07CE : 3600; -- ' imoh
07CF : 5D60; --   push t0
07D0 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
07D1 : 3680; -- | imoh
07D2 : 0660; -- ' load
07D3 : 27DD; -- . imov [imov!   t1 .assert_body_0_else_retaddr1]
07D4 : 3707; -- ' imoh
07D5 : 1670; --   str     t0 t1
07D6 : 9614; --   iadd    t0 1
07D7 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07D8 : 3080; -- | imoh
07D9 : 1060; -- ' str
07DA : 208A; -- . imov [jmp!    .print_char]
07DB : 3003; -- | imoh
07DC : A000; -- ' j_op
07DD : 269F; -- . imov [imov! t0 .string_alloc_1]
07DE : 3602; -- ' imoh
07DF : 5D60; -- . push [push! t0]
07E0 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
07E1 : 3680; -- | imoh
07E2 : 0660; -- ' load
07E3 : 27ED; -- . imov [imov!   t1 .assert_body_0_else_retaddr2]
07E4 : 3707; -- ' imoh
07E5 : 1670; --   str     t0 t1
07E6 : 9614; --   iadd    t0 1
07E7 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07E8 : 3080; -- | imoh
07E9 : 1060; -- ' str
07EA : 2018; -- . imov [jmp!    .print_string]
07EB : 3005; -- | imoh
07EC : A000; -- ' j_op
07ED : 7000; --   halt
07EE : 66D0; -- . pop [pop! t0]
07EF : 2625; -- . imov [load!   t0 .ret_stack_ptr]
07F0 : 3680; -- | imoh
07F1 : 0660; -- ' load
07F2 : 9615; --   isub    t0 1
07F3 : 0760; --   load    t1 t0
07F4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
07F5 : 3080; -- | imoh
07F6 : 1060; -- ' str
07F7 : A700; --   jmp     t1
07F8 : 2600; -- . imov [imov! t0 0]
07F9 : 3600; -- ' imoh
07FA : 5D60; --   push t0
07FB : 66D0; -- . pop [pop! t0 t1]
07FC : 67D0; -- ' pop
07FD : 5D60; -- . push [push! t0 t1]
07FE : 5D70; -- ' push
07FF : 66D0; -- . pop [pop! t0]
0800 : 5D60; -- . push [push! t0 t0]
0801 : 5D60; -- ' push
0802 : 66D0; -- . pop [pop! t0]
0803 : 9607; --   tst  t0
0804 : 2022; -- . imov [jz!  .sum_body_0_while_exit]
0805 : 3008; -- | imoh
0806 : A001; -- ' j_op
0807 : 66D0; -- . pop [pop! t0 t1]
0808 : 67D0; -- ' pop
0809 : 5D60; -- . push [push! t0 t1]
080A : 5D70; -- ' push
080B : 66D0; -- . pop [pop! t0 t1]
080C : 67D0; -- ' pop
080D : 5D70; -- . push [push! t1 t0 t1]
080E : 5D60; -- | push
080F : 5D70; -- ' push
0810 : 67D0; -- . pop [pop!  t1 t0]
0811 : 66D0; -- ' pop
0812 : 8674; --   add   t0 t1
0813 : 5D60; -- . push [push! t0]
0814 : 66D0; -- . pop [pop! t0 t1]
0815 : 67D0; -- ' pop
0816 : 5D60; -- . push [push! t0 t1]
0817 : 5D70; -- ' push
0818 : 2601; -- . imov [imov! t0 1]
0819 : 3600; -- ' imoh
081A : 5D60; --   push t0
081B : 67D0; -- . pop [pop!  t1 t0]
081C : 66D0; -- ' pop
081D : 8675; --   sub   t0 t1
081E : 5D60; -- . push [push! t0]
081F : 20FF; -- . imov [jmp! .sum_body_0_while_eval]
0820 : 3007; -- | imoh
0821 : A000; -- ' j_op
0822 : 66D0; -- . pop [pop! t0]
0823 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0824 : 3680; -- | imoh
0825 : 0660; -- ' load
0826 : 9615; --   isub    t0 1
0827 : 0760; --   load    t1 t0
0828 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0829 : 3080; -- | imoh
082A : 1060; -- ' str
082B : A700; --   jmp     t1
082C : 2600; -- . imov [imov! t0 0]
082D : 3600; -- ' imoh
082E : 5D60; --   push t0
082F : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0830 : 3680; -- | imoh
0831 : 0660; -- ' load
0832 : 67D0; -- . pop [pop!    t1]
0833 : 1670; --   str     t0 t1
0834 : 9614; --   iadd    t0 1
0835 : 67D0; -- . pop [pop!    t1]
0836 : 1670; --   str     t0 t1
0837 : 9614; --   iadd    t0 1
0838 : 67D0; -- . pop [pop!    t1]
0839 : 1670; --   str     t0 t1
083A : 9614; --   iadd    t0 1
083B : 2025; -- . imov [str!    .ret_stack_ptr t0]
083C : 3080; -- | imoh
083D : 1060; -- ' str
083E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
083F : 3680; -- | imoh
0840 : 0660; -- ' load
0841 : 2702; -- . imov [imov!   t1 2]
0842 : 3700; -- ' imoh
0843 : 8675; --   sub     t0 t1
0844 : 5D60; -- . push [push!   t0]
0845 : 66D0; -- . pop [pop! t0]
0846 : 0660; --   load t0 t0
0847 : 5D60; -- . push [push! t0]
0848 : 66D0; -- . pop [pop! t0]
0849 : 9607; --   tst  t0
084A : 208D; -- . imov [jz!  .mul_body_0_let_block_0_while_exit]
084B : 3008; -- | imoh
084C : A001; -- ' j_op
084D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
084E : 3680; -- | imoh
084F : 0660; -- ' load
0850 : 2703; -- . imov [imov!   t1 3]
0851 : 3700; -- ' imoh
0852 : 8675; --   sub     t0 t1
0853 : 5D60; -- . push [push!   t0]
0854 : 66D0; -- . pop [pop! t0]
0855 : 0660; --   load t0 t0
0856 : 5D60; -- . push [push! t0]
0857 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0858 : 3680; -- | imoh
0859 : 0660; -- ' load
085A : 2701; -- . imov [imov!   t1 1]
085B : 3700; -- ' imoh
085C : 8675; --   sub     t0 t1
085D : 5D60; -- . push [push!   t0]
085E : 66D0; -- . pop [pop! t0]
085F : 0660; --   load t0 t0
0860 : 5D60; -- . push [push! t0]
0861 : 67D0; -- . pop [pop!  t1 t0]
0862 : 66D0; -- ' pop
0863 : 8674; --   add   t0 t1
0864 : 5D60; -- . push [push! t0]
0865 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0866 : 3680; -- | imoh
0867 : 0660; -- ' load
0868 : 2703; -- . imov [imov!   t1 3]
0869 : 3700; -- ' imoh
086A : 8675; --   sub     t0 t1
086B : 5D60; -- . push [push!   t0]
086C : 67D0; -- . pop [pop! t1 t0]
086D : 66D0; -- ' pop
086E : 1760; --   str  t1 t0
086F : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0870 : 3680; -- | imoh
0871 : 0660; -- ' load
0872 : 2702; -- . imov [imov!   t1 2]
0873 : 3700; -- ' imoh
0874 : 8675; --   sub     t0 t1
0875 : 5D60; -- . push [push!   t0]
0876 : 66D0; -- . pop [pop! t0]
0877 : 0660; --   load t0 t0
0878 : 5D60; -- . push [push! t0]
0879 : 2601; -- . imov [imov! t0 1]
087A : 3600; -- ' imoh
087B : 5D60; --   push t0
087C : 67D0; -- . pop [pop!  t1 t0]
087D : 66D0; -- ' pop
087E : 8675; --   sub   t0 t1
087F : 5D60; -- . push [push! t0]
0880 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0881 : 3680; -- | imoh
0882 : 0660; -- ' load
0883 : 2702; -- . imov [imov!   t1 2]
0884 : 3700; -- ' imoh
0885 : 8675; --   sub     t0 t1
0886 : 5D60; -- . push [push!   t0]
0887 : 67D0; -- . pop [pop! t1 t0]
0888 : 66D0; -- ' pop
0889 : 1760; --   str  t1 t0
088A : 203E; -- . imov [jmp! .mul_body_0_let_block_0_while_eval]
088B : 3008; -- | imoh
088C : A000; -- ' j_op
088D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
088E : 3680; -- | imoh
088F : 0660; -- ' load
0890 : 2703; -- . imov [imov!   t1 3]
0891 : 3700; -- ' imoh
0892 : 8675; --   sub     t0 t1
0893 : 5D60; -- . push [push!   t0]
0894 : 66D0; -- . pop [pop! t0]
0895 : 0660; --   load t0 t0
0896 : 5D60; -- . push [push! t0]
0897 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0898 : 3680; -- | imoh
0899 : 0660; -- ' load
089A : 2703; -- . imov [imov!   t1 3]
089B : 3700; -- ' imoh
089C : 8675; --   sub     t0 t1
089D : 2025; -- . imov [str!    .ret_stack_ptr t0]
089E : 3080; -- | imoh
089F : 1060; -- ' str
08A0 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
08A1 : 3680; -- | imoh
08A2 : 0660; -- ' load
08A3 : 9615; --   isub    t0 1
08A4 : 0760; --   load    t1 t0
08A5 : 2025; -- . imov [str!    .ret_stack_ptr t0]
08A6 : 3080; -- | imoh
08A7 : 1060; -- ' str
08A8 : A700; --   jmp     t1
08A9 : 265F; -- . imov [imov! t0 .string_alloc_2]
08AA : 3600; -- ' imoh
08AB : 5D60; -- . push [push! t0]
08AC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
08AD : 3680; -- | imoh
08AE : 0660; -- ' load
08AF : 27B9; -- . imov [imov!   t1 .test_sum_body_retaddr0]
08B0 : 3708; -- ' imoh
08B1 : 1670; --   str     t0 t1
08B2 : 9614; --   iadd    t0 1
08B3 : 2025; -- . imov [str!    .ret_stack_ptr t0]
08B4 : 3080; -- | imoh
08B5 : 1060; -- ' str
08B6 : 2018; -- . imov [jmp!    .print_string]
08B7 : 3005; -- | imoh
08B8 : A000; -- ' j_op
08B9 : 2620; -- . imov [imov! t0 .string_alloc_3]
08BA : 3601; -- ' imoh
08BB : 5D60; -- . push [push! t0]
08BC : 2607; -- . imov [imov! t0 7]
08BD : 3600; -- ' imoh
08BE : 5D60; --   push t0
08BF : 2625; -- . imov [load!   t0 .ret_stack_ptr]
08C0 : 3680; -- | imoh
08C1 : 0660; -- ' load
08C2 : 27CC; -- . imov [imov!   t1 .test_sum_body_0_retaddr0]
08C3 : 3708; -- ' imoh
08C4 : 1670; --   str     t0 t1
08C5 : 9614; --   iadd    t0 1
08C6 : 2025; -- . imov [str!    .ret_stack_ptr t0]
08C7 : 3080; -- | imoh
08C8 : 1060; -- ' str
08C9 : 20F8; -- . imov [jmp!    .sum]
08CA : 3007; -- | imoh
08CB : A000; -- ' j_op
08CC : 261C; -- . imov [imov! t0 28]
08CD : 3600; -- ' imoh
08CE : 5D60; --   push t0
08CF : 67D0; -- . pop [pop!  t1 t0]
08D0 : 66D0; -- ' pop
08D1 : 8675; --   sub   t0 t1
08D2 : 5D60; -- . push [push! t0]
08D3 : 2600; -- . imov [imov! t0 0]
08D4 : 3600; -- ' imoh
08D5 : 5D60; --   push t0
08D6 : 67D0; -- . pop [pop! t1 t0]
08D7 : 66D0; -- ' pop
08D8 : 2801; --   imov t2 1  # default value
08D9 : 8675; --   sub  t0 t1
08DA : 20DE; -- . imov [jz!  .test_sum_body_0_1_operator_opskip]
08DB : 3008; -- | imoh
08DC : A001; -- ' j_op
08DD : 2800; --   imov t2 0
08DE : 5D80; -- . push [push! t2]
08DF : 2625; -- . imov [load!   t0 .ret_stack_ptr]
08E0 : 3680; -- | imoh
08E1 : 0660; -- ' load
08E2 : 27EC; -- . imov [imov!   t1 .test_sum_body_retaddr1]
08E3 : 3708; -- ' imoh
08E4 : 1670; --   str     t0 t1
08E5 : 9614; --   iadd    t0 1
08E6 : 2025; -- . imov [str!    .ret_stack_ptr t0]
08E7 : 3080; -- | imoh
08E8 : 1060; -- ' str
08E9 : 20B5; -- . imov [jmp!    .assert]
08EA : 3007; -- | imoh
08EB : A000; -- ' j_op
08EC : 268C; -- . imov [imov! t0 .string_alloc_4]
08ED : 3602; -- ' imoh
08EE : 5D60; -- . push [push! t0]
08EF : 2616; -- . imov [imov! t0 22]
08F0 : 3600; -- ' imoh
08F1 : 5D60; --   push t0
08F2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
08F3 : 3680; -- | imoh
08F4 : 0660; -- ' load
08F5 : 27FF; -- . imov [imov!   t1 .test_sum_body_1_retaddr0]
08F6 : 3708; -- ' imoh
08F7 : 1670; --   str     t0 t1
08F8 : 9614; --   iadd    t0 1
08F9 : 2025; -- . imov [str!    .ret_stack_ptr t0]
08FA : 3080; -- | imoh
08FB : 1060; -- ' str
08FC : 20F8; -- . imov [jmp!    .sum]
08FD : 3007; -- | imoh
08FE : A000; -- ' j_op
08FF : 26FD; -- . imov [imov! t0 253]
0900 : 3600; -- ' imoh
0901 : 5D60; --   push t0
0902 : 67D0; -- . pop [pop!  t1 t0]
0903 : 66D0; -- ' pop
0904 : 8675; --   sub   t0 t1
0905 : 5D60; -- . push [push! t0]
0906 : 2600; -- . imov [imov! t0 0]
0907 : 3600; -- ' imoh
0908 : 5D60; --   push t0
0909 : 67D0; -- . pop [pop! t1 t0]
090A : 66D0; -- ' pop
090B : 2801; --   imov t2 1  # default value
090C : 8675; --   sub  t0 t1
090D : 2011; -- . imov [jz!  .test_sum_body_1_1_operator_opskip]
090E : 3009; -- | imoh
090F : A001; -- ' j_op
0910 : 2800; --   imov t2 0
0911 : 5D80; -- . push [push! t2]
0912 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0913 : 3680; -- | imoh
0914 : 0660; -- ' load
0915 : 271F; -- . imov [imov!   t1 .test_sum_body_retaddr2]
0916 : 3709; -- ' imoh
0917 : 1670; --   str     t0 t1
0918 : 9614; --   iadd    t0 1
0919 : 2025; -- . imov [str!    .ret_stack_ptr t0]
091A : 3080; -- | imoh
091B : 1060; -- ' str
091C : 20B5; -- . imov [jmp!    .assert]
091D : 3007; -- | imoh
091E : A000; -- ' j_op
091F : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0920 : 3680; -- | imoh
0921 : 0660; -- ' load
0922 : 9615; --   isub    t0 1
0923 : 0760; --   load    t1 t0
0924 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0925 : 3080; -- | imoh
0926 : 1060; -- ' str
0927 : A700; --   jmp     t1
0928 : 26EF; -- . imov [imov! t0 .string_alloc_5]
0929 : 3600; -- ' imoh
092A : 5D60; -- . push [push! t0]
092B : 2625; -- . imov [load!   t0 .ret_stack_ptr]
092C : 3680; -- | imoh
092D : 0660; -- ' load
092E : 2738; -- . imov [imov!   t1 .test_arith_body_retaddr0]
092F : 3709; -- ' imoh
0930 : 1670; --   str     t0 t1
0931 : 9614; --   iadd    t0 1
0932 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0933 : 3080; -- | imoh
0934 : 1060; -- ' str
0935 : 2018; -- . imov [jmp!    .print_string]
0936 : 3005; -- | imoh
0937 : A000; -- ' j_op
0938 : 26FE; -- . imov [imov! t0 .string_alloc_6]
0939 : 3600; -- ' imoh
093A : 5D60; -- . push [push! t0]
093B : 2607; -- . imov [imov! t0 7]
093C : 3600; -- ' imoh
093D : 5D60; --   push t0
093E : 2607; -- . imov [imov! t0 7]
093F : 3600; -- ' imoh
0940 : 5D60; --   push t0
0941 : 67D0; -- . pop [pop! t1 t0]
0942 : 66D0; -- ' pop
0943 : 2801; --   imov t2 1  # default value
0944 : 8675; --   sub  t0 t1
0945 : 2049; -- . imov [jz!  .test_arith_body_0_0_operator_opskip]
0946 : 3009; -- | imoh
0947 : A001; -- ' j_op
0948 : 2800; --   imov t2 0
0949 : 5D80; -- . push [push! t2]
094A : 2601; -- . imov [imov! t0 1]
094B : 3600; -- ' imoh
094C : 5D60; --   push t0
094D : 67D0; -- . pop [pop! t1 t0]
094E : 66D0; -- ' pop
094F : 2801; --   imov t2 1  # default value
0950 : 8675; --   sub  t0 t1
0951 : 2055; -- . imov [jz!  .test_arith_body_0_1_operator_opskip]
0952 : 3009; -- | imoh
0953 : A001; -- ' j_op
0954 : 2800; --   imov t2 0
0955 : 5D80; -- . push [push! t2]
0956 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0957 : 3680; -- | imoh
0958 : 0660; -- ' load
0959 : 2763; -- . imov [imov!   t1 .test_arith_body_retaddr1]
095A : 3709; -- ' imoh
095B : 1670; --   str     t0 t1
095C : 9614; --   iadd    t0 1
095D : 2025; -- . imov [str!    .ret_stack_ptr t0]
095E : 3080; -- | imoh
095F : 1060; -- ' str
0960 : 20B5; -- . imov [jmp!    .assert]
0961 : 3007; -- | imoh
0962 : A000; -- ' j_op
0963 : 26DF; -- . imov [imov! t0 .string_alloc_7]
0964 : 3600; -- ' imoh
0965 : 5D60; -- . push [push! t0]
0966 : 2606; -- . imov [imov! t0 6]
0967 : 3600; -- ' imoh
0968 : 5D60; --   push t0
0969 : 2607; -- . imov [imov! t0 7]
096A : 3600; -- ' imoh
096B : 5D60; --   push t0
096C : 67D0; -- . pop [pop! t1 t0]
096D : 66D0; -- ' pop
096E : 2801; --   imov t2 1  # default value
096F : 8675; --   sub  t0 t1
0970 : 2074; -- . imov [jz!  .test_arith_body_1_0_operator_opskip]
0971 : 3009; -- | imoh
0972 : A001; -- ' j_op
0973 : 2800; --   imov t2 0
0974 : 5D80; -- . push [push! t2]
0975 : 2600; -- . imov [imov! t0 0]
0976 : 3600; -- ' imoh
0977 : 5D60; --   push t0
0978 : 67D0; -- . pop [pop! t1 t0]
0979 : 66D0; -- ' pop
097A : 2801; --   imov t2 1  # default value
097B : 8675; --   sub  t0 t1
097C : 2080; -- . imov [jz!  .test_arith_body_1_1_operator_opskip]
097D : 3009; -- | imoh
097E : A001; -- ' j_op
097F : 2800; --   imov t2 0
0980 : 5D80; -- . push [push! t2]
0981 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0982 : 3680; -- | imoh
0983 : 0660; -- ' load
0984 : 278E; -- . imov [imov!   t1 .test_arith_body_retaddr2]
0985 : 3709; -- ' imoh
0986 : 1670; --   str     t0 t1
0987 : 9614; --   iadd    t0 1
0988 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0989 : 3080; -- | imoh
098A : 1060; -- ' str
098B : 20B5; -- . imov [jmp!    .assert]
098C : 3007; -- | imoh
098D : A000; -- ' j_op
098E : 26C5; -- . imov [imov! t0 .string_alloc_8]
098F : 3602; -- ' imoh
0990 : 5D60; -- . push [push! t0]
0991 : 2606; -- . imov [imov! t0 6]
0992 : 3600; -- ' imoh
0993 : 5D60; --   push t0
0994 : 2607; -- . imov [imov! t0 7]
0995 : 3600; -- ' imoh
0996 : 5D60; --   push t0
0997 : 67D0; -- . pop [pop! t1 t0]
0998 : 66D0; -- ' pop
0999 : 2801; --   imov t2 1  # default value
099A : 8675; --   sub  t0 t1
099B : 209F; -- . imov [jp!  .test_arith_body_2_0_operator_opskip]
099C : 3009; -- | imoh
099D : A004; -- ' j_op
099E : 2800; --   imov t2 0
099F : 5D80; -- . push [push! t2]
09A0 : 2600; -- . imov [imov! t0 0]
09A1 : 3600; -- ' imoh
09A2 : 5D60; --   push t0
09A3 : 67D0; -- . pop [pop! t1 t0]
09A4 : 66D0; -- ' pop
09A5 : 2801; --   imov t2 1  # default value
09A6 : 8675; --   sub  t0 t1
09A7 : 20AB; -- . imov [jz!  .test_arith_body_2_1_operator_opskip]
09A8 : 3009; -- | imoh
09A9 : A001; -- ' j_op
09AA : 2800; --   imov t2 0
09AB : 5D80; -- . push [push! t2]
09AC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
09AD : 3680; -- | imoh
09AE : 0660; -- ' load
09AF : 27B9; -- . imov [imov!   t1 .test_arith_body_retaddr3]
09B0 : 3709; -- ' imoh
09B1 : 1670; --   str     t0 t1
09B2 : 9614; --   iadd    t0 1
09B3 : 2025; -- . imov [str!    .ret_stack_ptr t0]
09B4 : 3080; -- | imoh
09B5 : 1060; -- ' str
09B6 : 20B5; -- . imov [jmp!    .assert]
09B7 : 3007; -- | imoh
09B8 : A000; -- ' j_op
09B9 : 26BF; -- . imov [imov! t0 .string_alloc_9]
09BA : 3602; -- ' imoh
09BB : 5D60; -- . push [push! t0]
09BC : 2607; -- . imov [imov! t0 7]
09BD : 3600; -- ' imoh
09BE : 5D60; --   push t0
09BF : 2607; -- . imov [imov! t0 7]
09C0 : 3600; -- ' imoh
09C1 : 5D60; --   push t0
09C2 : 67D0; -- . pop [pop! t1 t0]
09C3 : 66D0; -- ' pop
09C4 : 2801; --   imov t2 1  # default value
09C5 : 8675; --   sub  t0 t1
09C6 : 20CA; -- . imov [jp!  .test_arith_body_3_0_operator_opskip]
09C7 : 3009; -- | imoh
09C8 : A004; -- ' j_op
09C9 : 2800; --   imov t2 0
09CA : 5D80; -- . push [push! t2]
09CB : 2600; -- . imov [imov! t0 0]
09CC : 3600; -- ' imoh
09CD : 5D60; --   push t0
09CE : 67D0; -- . pop [pop! t1 t0]
09CF : 66D0; -- ' pop
09D0 : 2801; --   imov t2 1  # default value
09D1 : 8675; --   sub  t0 t1
09D2 : 20D6; -- . imov [jz!  .test_arith_body_3_1_operator_opskip]
09D3 : 3009; -- | imoh
09D4 : A001; -- ' j_op
09D5 : 2800; --   imov t2 0
09D6 : 5D80; -- . push [push! t2]
09D7 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
09D8 : 3680; -- | imoh
09D9 : 0660; -- ' load
09DA : 27E4; -- . imov [imov!   t1 .test_arith_body_retaddr4]
09DB : 3709; -- ' imoh
09DC : 1670; --   str     t0 t1
09DD : 9614; --   iadd    t0 1
09DE : 2025; -- . imov [str!    .ret_stack_ptr t0]
09DF : 3080; -- | imoh
09E0 : 1060; -- ' str
09E1 : 20B5; -- . imov [jmp!    .assert]
09E2 : 3007; -- | imoh
09E3 : A000; -- ' j_op
09E4 : 26AF; -- . imov [imov! t0 .string_alloc_10]
09E5 : 3600; -- ' imoh
09E6 : 5D60; -- . push [push! t0]
09E7 : 2608; -- . imov [imov! t0 8]
09E8 : 3600; -- ' imoh
09E9 : 5D60; --   push t0
09EA : 2607; -- . imov [imov! t0 7]
09EB : 3600; -- ' imoh
09EC : 5D60; --   push t0
09ED : 67D0; -- . pop [pop! t1 t0]
09EE : 66D0; -- ' pop
09EF : 2801; --   imov t2 1  # default value
09F0 : 8675; --   sub  t0 t1
09F1 : 20F5; -- . imov [jp!  .test_arith_body_4_0_operator_opskip]
09F2 : 3009; -- | imoh
09F3 : A004; -- ' j_op
09F4 : 2800; --   imov t2 0
09F5 : 5D80; -- . push [push! t2]
09F6 : 2601; -- . imov [imov! t0 1]
09F7 : 3600; -- ' imoh
09F8 : 5D60; --   push t0
09F9 : 67D0; -- . pop [pop! t1 t0]
09FA : 66D0; -- ' pop
09FB : 2801; --   imov t2 1  # default value
09FC : 8675; --   sub  t0 t1
09FD : 2001; -- . imov [jz!  .test_arith_body_4_1_operator_opskip]
09FE : 300A; -- | imoh
09FF : A001; -- ' j_op
0A00 : 2800; --   imov t2 0
0A01 : 5D80; -- . push [push! t2]
0A02 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0A03 : 3680; -- | imoh
0A04 : 0660; -- ' load
0A05 : 270F; -- . imov [imov!   t1 .test_arith_body_retaddr5]
0A06 : 370A; -- ' imoh
0A07 : 1670; --   str     t0 t1
0A08 : 9614; --   iadd    t0 1
0A09 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0A0A : 3080; -- | imoh
0A0B : 1060; -- ' str
0A0C : 20B5; -- . imov [jmp!    .assert]
0A0D : 3007; -- | imoh
0A0E : A000; -- ' j_op
0A0F : 26E5; -- . imov [imov! t0 .string_alloc_11]
0A10 : 3600; -- ' imoh
0A11 : 5D60; -- . push [push! t0]
0A12 : 2606; -- . imov [imov! t0 6]
0A13 : 3600; -- ' imoh
0A14 : 5D60; --   push t0
0A15 : 2607; -- . imov [imov! t0 7]
0A16 : 3600; -- ' imoh
0A17 : 5D60; --   push t0
0A18 : 67D0; -- . pop [pop! t1 t0]
0A19 : 66D0; -- ' pop
0A1A : 2800; --   imov t2 0  # default value
0A1B : 8675; --   sub  t0 t1
0A1C : 2020; -- . imov [jn!  .test_arith_body_5_0_operator_opskip]
0A1D : 300A; -- | imoh
0A1E : A003; -- ' j_op
0A1F : 2801; --   imov t2 1
0A20 : 5D80; -- . push [push! t2]
0A21 : 2600; -- . imov [imov! t0 0]
0A22 : 3600; -- ' imoh
0A23 : 5D60; --   push t0
0A24 : 67D0; -- . pop [pop! t1 t0]
0A25 : 66D0; -- ' pop
0A26 : 2801; --   imov t2 1  # default value
0A27 : 8675; --   sub  t0 t1
0A28 : 202C; -- . imov [jz!  .test_arith_body_5_1_operator_opskip]
0A29 : 300A; -- | imoh
0A2A : A001; -- ' j_op
0A2B : 2800; --   imov t2 0
0A2C : 5D80; -- . push [push! t2]
0A2D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0A2E : 3680; -- | imoh
0A2F : 0660; -- ' load
0A30 : 273A; -- . imov [imov!   t1 .test_arith_body_retaddr6]
0A31 : 370A; -- ' imoh
0A32 : 1670; --   str     t0 t1
0A33 : 9614; --   iadd    t0 1
0A34 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0A35 : 3080; -- | imoh
0A36 : 1060; -- ' str
0A37 : 20B5; -- . imov [jmp!    .assert]
0A38 : 3007; -- | imoh
0A39 : A000; -- ' j_op
0A3A : 26B5; -- . imov [imov! t0 .string_alloc_12]
0A3B : 3600; -- ' imoh
0A3C : 5D60; -- . push [push! t0]
0A3D : 2607; -- . imov [imov! t0 7]
0A3E : 3600; -- ' imoh
0A3F : 5D60; --   push t0
0A40 : 2607; -- . imov [imov! t0 7]
0A41 : 3600; -- ' imoh
0A42 : 5D60; --   push t0
0A43 : 67D0; -- . pop [pop! t1 t0]
0A44 : 66D0; -- ' pop
0A45 : 2800; --   imov t2 0  # default value
0A46 : 8675; --   sub  t0 t1
0A47 : 204B; -- . imov [jn!  .test_arith_body_6_0_operator_opskip]
0A48 : 300A; -- | imoh
0A49 : A003; -- ' j_op
0A4A : 2801; --   imov t2 1
0A4B : 5D80; -- . push [push! t2]
0A4C : 2601; -- . imov [imov! t0 1]
0A4D : 3600; -- ' imoh
0A4E : 5D60; --   push t0
0A4F : 67D0; -- . pop [pop! t1 t0]
0A50 : 66D0; -- ' pop
0A51 : 2801; --   imov t2 1  # default value
0A52 : 8675; --   sub  t0 t1
0A53 : 2057; -- . imov [jz!  .test_arith_body_6_1_operator_opskip]
0A54 : 300A; -- | imoh
0A55 : A001; -- ' j_op
0A56 : 2800; --   imov t2 0
0A57 : 5D80; -- . push [push! t2]
0A58 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0A59 : 3680; -- | imoh
0A5A : 0660; -- ' load
0A5B : 2765; -- . imov [imov!   t1 .test_arith_body_retaddr7]
0A5C : 370A; -- ' imoh
0A5D : 1670; --   str     t0 t1
0A5E : 9614; --   iadd    t0 1
0A5F : 2025; -- . imov [str!    .ret_stack_ptr t0]
0A60 : 3080; -- | imoh
0A61 : 1060; -- ' str
0A62 : 20B5; -- . imov [jmp!    .assert]
0A63 : 3007; -- | imoh
0A64 : A000; -- ' j_op
0A65 : 2697; -- . imov [imov! t0 .string_alloc_13]
0A66 : 3600; -- ' imoh
0A67 : 5D60; -- . push [push! t0]
0A68 : 2608; -- . imov [imov! t0 8]
0A69 : 3600; -- ' imoh
0A6A : 5D60; --   push t0
0A6B : 2607; -- . imov [imov! t0 7]
0A6C : 3600; -- ' imoh
0A6D : 5D60; --   push t0
0A6E : 67D0; -- . pop [pop! t1 t0]
0A6F : 66D0; -- ' pop
0A70 : 2800; --   imov t2 0  # default value
0A71 : 8675; --   sub  t0 t1
0A72 : 2076; -- . imov [jn!  .test_arith_body_7_0_operator_opskip]
0A73 : 300A; -- | imoh
0A74 : A003; -- ' j_op
0A75 : 2801; --   imov t2 1
0A76 : 5D80; -- . push [push! t2]
0A77 : 2601; -- . imov [imov! t0 1]
0A78 : 3600; -- ' imoh
0A79 : 5D60; --   push t0
0A7A : 67D0; -- . pop [pop! t1 t0]
0A7B : 66D0; -- ' pop
0A7C : 2801; --   imov t2 1  # default value
0A7D : 8675; --   sub  t0 t1
0A7E : 2082; -- . imov [jz!  .test_arith_body_7_1_operator_opskip]
0A7F : 300A; -- | imoh
0A80 : A001; -- ' j_op
0A81 : 2800; --   imov t2 0
0A82 : 5D80; -- . push [push! t2]
0A83 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0A84 : 3680; -- | imoh
0A85 : 0660; -- ' load
0A86 : 2790; -- . imov [imov!   t1 .test_arith_body_retaddr8]
0A87 : 370A; -- ' imoh
0A88 : 1670; --   str     t0 t1
0A89 : 9614; --   iadd    t0 1
0A8A : 2025; -- . imov [str!    .ret_stack_ptr t0]
0A8B : 3080; -- | imoh
0A8C : 1060; -- ' str
0A8D : 20B5; -- . imov [jmp!    .assert]
0A8E : 3007; -- | imoh
0A8F : A000; -- ' j_op
0A90 : 269E; -- . imov [imov! t0 .string_alloc_14]
0A91 : 3600; -- ' imoh
0A92 : 5D60; -- . push [push! t0]
0A93 : 2606; -- . imov [imov! t0 6]
0A94 : 3600; -- ' imoh
0A95 : 5D60; --   push t0
0A96 : 2607; -- . imov [imov! t0 7]
0A97 : 3600; -- ' imoh
0A98 : 5D60; --   push t0
0A99 : 67D0; -- . pop [pop! t1 t0]
0A9A : 66D0; -- ' pop
0A9B : 2801; --   imov t2 1  # default value
0A9C : 8675; --   sub  t0 t1
0A9D : 20A1; -- . imov [jn!  .test_arith_body_8_0_operator_opskip]
0A9E : 300A; -- | imoh
0A9F : A003; -- ' j_op
0AA0 : 2800; --   imov t2 0
0AA1 : 5D80; -- . push [push! t2]
0AA2 : 2601; -- . imov [imov! t0 1]
0AA3 : 3600; -- ' imoh
0AA4 : 5D60; --   push t0
0AA5 : 67D0; -- . pop [pop! t1 t0]
0AA6 : 66D0; -- ' pop
0AA7 : 2801; --   imov t2 1  # default value
0AA8 : 8675; --   sub  t0 t1
0AA9 : 20AD; -- . imov [jz!  .test_arith_body_8_1_operator_opskip]
0AAA : 300A; -- | imoh
0AAB : A001; -- ' j_op
0AAC : 2800; --   imov t2 0
0AAD : 5D80; -- . push [push! t2]
0AAE : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0AAF : 3680; -- | imoh
0AB0 : 0660; -- ' load
0AB1 : 27BB; -- . imov [imov!   t1 .test_arith_body_retaddr9]
0AB2 : 370A; -- ' imoh
0AB3 : 1670; --   str     t0 t1
0AB4 : 9614; --   iadd    t0 1
0AB5 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0AB6 : 3080; -- | imoh
0AB7 : 1060; -- ' str
0AB8 : 20B5; -- . imov [jmp!    .assert]
0AB9 : 3007; -- | imoh
0ABA : A000; -- ' j_op
0ABB : 2646; -- . imov [imov! t0 .string_alloc_15]
0ABC : 3603; -- ' imoh
0ABD : 5D60; -- . push [push! t0]
0ABE : 2607; -- . imov [imov! t0 7]
0ABF : 3600; -- ' imoh
0AC0 : 5D60; --   push t0
0AC1 : 2607; -- . imov [imov! t0 7]
0AC2 : 3600; -- ' imoh
0AC3 : 5D60; --   push t0
0AC4 : 67D0; -- . pop [pop! t1 t0]
0AC5 : 66D0; -- ' pop
0AC6 : 2801; --   imov t2 1  # default value
0AC7 : 8675; --   sub  t0 t1
0AC8 : 20CC; -- . imov [jn!  .test_arith_body_9_0_operator_opskip]
0AC9 : 300A; -- | imoh
0ACA : A003; -- ' j_op
0ACB : 2800; --   imov t2 0
0ACC : 5D80; -- . push [push! t2]
0ACD : 2600; -- . imov [imov! t0 0]
0ACE : 3600; -- ' imoh
0ACF : 5D60; --   push t0
0AD0 : 67D0; -- . pop [pop! t1 t0]
0AD1 : 66D0; -- ' pop
0AD2 : 2801; --   imov t2 1  # default value
0AD3 : 8675; --   sub  t0 t1
0AD4 : 20D8; -- . imov [jz!  .test_arith_body_9_1_operator_opskip]
0AD5 : 300A; -- | imoh
0AD6 : A001; -- ' j_op
0AD7 : 2800; --   imov t2 0
0AD8 : 5D80; -- . push [push! t2]
0AD9 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0ADA : 3680; -- | imoh
0ADB : 0660; -- ' load
0ADC : 27E6; -- . imov [imov!   t1 .test_arith_body_retaddr10]
0ADD : 370A; -- ' imoh
0ADE : 1670; --   str     t0 t1
0ADF : 9614; --   iadd    t0 1
0AE0 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0AE1 : 3080; -- | imoh
0AE2 : 1060; -- ' str
0AE3 : 20B5; -- . imov [jmp!    .assert]
0AE4 : 3007; -- | imoh
0AE5 : A000; -- ' j_op
0AE6 : 2689; -- . imov [imov! t0 .string_alloc_16]
0AE7 : 3600; -- ' imoh
0AE8 : 5D60; -- . push [push! t0]
0AE9 : 2608; -- . imov [imov! t0 8]
0AEA : 3600; -- ' imoh
0AEB : 5D60; --   push t0
0AEC : 2607; -- . imov [imov! t0 7]
0AED : 3600; -- ' imoh
0AEE : 5D60; --   push t0
0AEF : 67D0; -- . pop [pop! t1 t0]
0AF0 : 66D0; -- ' pop
0AF1 : 2801; --   imov t2 1  # default value
0AF2 : 8675; --   sub  t0 t1
0AF3 : 20F7; -- . imov [jn!  .test_arith_body_10_0_operator_opskip]
0AF4 : 300A; -- | imoh
0AF5 : A003; -- ' j_op
0AF6 : 2800; --   imov t2 0
0AF7 : 5D80; -- . push [push! t2]
0AF8 : 2600; -- . imov [imov! t0 0]
0AF9 : 3600; -- ' imoh
0AFA : 5D60; --   push t0
0AFB : 67D0; -- . pop [pop! t1 t0]
0AFC : 66D0; -- ' pop
0AFD : 2801; --   imov t2 1  # default value
0AFE : 8675; --   sub  t0 t1
0AFF : 2003; -- . imov [jz!  .test_arith_body_10_1_operator_opskip]
0B00 : 300B; -- | imoh
0B01 : A001; -- ' j_op
0B02 : 2800; --   imov t2 0
0B03 : 5D80; -- . push [push! t2]
0B04 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B05 : 3680; -- | imoh
0B06 : 0660; -- ' load
0B07 : 2711; -- . imov [imov!   t1 .test_arith_body_retaddr11]
0B08 : 370B; -- ' imoh
0B09 : 1670; --   str     t0 t1
0B0A : 9614; --   iadd    t0 1
0B0B : 2025; -- . imov [str!    .ret_stack_ptr t0]
0B0C : 3080; -- | imoh
0B0D : 1060; -- ' str
0B0E : 20B5; -- . imov [jmp!    .assert]
0B0F : 3007; -- | imoh
0B10 : A000; -- ' j_op
0B11 : 26E1; -- . imov [imov! t0 .string_alloc_17]
0B12 : 3602; -- ' imoh
0B13 : 5D60; -- . push [push! t0]
0B14 : 2606; -- . imov [imov! t0 6]
0B15 : 3600; -- ' imoh
0B16 : 5D60; --   push t0
0B17 : 2607; -- . imov [imov! t0 7]
0B18 : 3600; -- ' imoh
0B19 : 5D60; --   push t0
0B1A : 67D0; -- . pop [pop! t1 t0]
0B1B : 66D0; -- ' pop
0B1C : 2800; --   imov t2 0  # default value
0B1D : 8675; --   sub  t0 t1
0B1E : 2022; -- . imov [jp!  .test_arith_body_11_0_operator_opskip]
0B1F : 300B; -- | imoh
0B20 : A004; -- ' j_op
0B21 : 2801; --   imov t2 1
0B22 : 5D80; -- . push [push! t2]
0B23 : 2601; -- . imov [imov! t0 1]
0B24 : 3600; -- ' imoh
0B25 : 5D60; --   push t0
0B26 : 67D0; -- . pop [pop! t1 t0]
0B27 : 66D0; -- ' pop
0B28 : 2801; --   imov t2 1  # default value
0B29 : 8675; --   sub  t0 t1
0B2A : 202E; -- . imov [jz!  .test_arith_body_11_1_operator_opskip]
0B2B : 300B; -- | imoh
0B2C : A001; -- ' j_op
0B2D : 2800; --   imov t2 0
0B2E : 5D80; -- . push [push! t2]
0B2F : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B30 : 3680; -- | imoh
0B31 : 0660; -- ' load
0B32 : 273C; -- . imov [imov!   t1 .test_arith_body_retaddr12]
0B33 : 370B; -- ' imoh
0B34 : 1670; --   str     t0 t1
0B35 : 9614; --   iadd    t0 1
0B36 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0B37 : 3080; -- | imoh
0B38 : 1060; -- ' str
0B39 : 20B5; -- . imov [jmp!    .assert]
0B3A : 3007; -- | imoh
0B3B : A000; -- ' j_op
0B3C : 2652; -- . imov [imov! t0 .string_alloc_18]
0B3D : 3601; -- ' imoh
0B3E : 5D60; -- . push [push! t0]
0B3F : 2607; -- . imov [imov! t0 7]
0B40 : 3600; -- ' imoh
0B41 : 5D60; --   push t0
0B42 : 2607; -- . imov [imov! t0 7]
0B43 : 3600; -- ' imoh
0B44 : 5D60; --   push t0
0B45 : 67D0; -- . pop [pop! t1 t0]
0B46 : 66D0; -- ' pop
0B47 : 2800; --   imov t2 0  # default value
0B48 : 8675; --   sub  t0 t1
0B49 : 204D; -- . imov [jp!  .test_arith_body_12_0_operator_opskip]
0B4A : 300B; -- | imoh
0B4B : A004; -- ' j_op
0B4C : 2801; --   imov t2 1
0B4D : 5D80; -- . push [push! t2]
0B4E : 2601; -- . imov [imov! t0 1]
0B4F : 3600; -- ' imoh
0B50 : 5D60; --   push t0
0B51 : 67D0; -- . pop [pop! t1 t0]
0B52 : 66D0; -- ' pop
0B53 : 2801; --   imov t2 1  # default value
0B54 : 8675; --   sub  t0 t1
0B55 : 2059; -- . imov [jz!  .test_arith_body_12_1_operator_opskip]
0B56 : 300B; -- | imoh
0B57 : A001; -- ' j_op
0B58 : 2800; --   imov t2 0
0B59 : 5D80; -- . push [push! t2]
0B5A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B5B : 3680; -- | imoh
0B5C : 0660; -- ' load
0B5D : 2767; -- . imov [imov!   t1 .test_arith_body_retaddr13]
0B5E : 370B; -- ' imoh
0B5F : 1670; --   str     t0 t1
0B60 : 9614; --   iadd    t0 1
0B61 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0B62 : 3080; -- | imoh
0B63 : 1060; -- ' str
0B64 : 20B5; -- . imov [jmp!    .assert]
0B65 : 3007; -- | imoh
0B66 : A000; -- ' j_op
0B67 : 2604; -- . imov [imov! t0 .string_alloc_19]
0B68 : 3601; -- ' imoh
0B69 : 5D60; -- . push [push! t0]
0B6A : 2608; -- . imov [imov! t0 8]
0B6B : 3600; -- ' imoh
0B6C : 5D60; --   push t0
0B6D : 2607; -- . imov [imov! t0 7]
0B6E : 3600; -- ' imoh
0B6F : 5D60; --   push t0
0B70 : 67D0; -- . pop [pop! t1 t0]
0B71 : 66D0; -- ' pop
0B72 : 2800; --   imov t2 0  # default value
0B73 : 8675; --   sub  t0 t1
0B74 : 2078; -- . imov [jp!  .test_arith_body_13_0_operator_opskip]
0B75 : 300B; -- | imoh
0B76 : A004; -- ' j_op
0B77 : 2801; --   imov t2 1
0B78 : 5D80; -- . push [push! t2]
0B79 : 2600; -- . imov [imov! t0 0]
0B7A : 3600; -- ' imoh
0B7B : 5D60; --   push t0
0B7C : 67D0; -- . pop [pop! t1 t0]
0B7D : 66D0; -- ' pop
0B7E : 2801; --   imov t2 1  # default value
0B7F : 8675; --   sub  t0 t1
0B80 : 2084; -- . imov [jz!  .test_arith_body_13_1_operator_opskip]
0B81 : 300B; -- | imoh
0B82 : A001; -- ' j_op
0B83 : 2800; --   imov t2 0
0B84 : 5D80; -- . push [push! t2]
0B85 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B86 : 3680; -- | imoh
0B87 : 0660; -- ' load
0B88 : 2792; -- . imov [imov!   t1 .test_arith_body_retaddr14]
0B89 : 370B; -- ' imoh
0B8A : 1670; --   str     t0 t1
0B8B : 9614; --   iadd    t0 1
0B8C : 2025; -- . imov [str!    .ret_stack_ptr t0]
0B8D : 3080; -- | imoh
0B8E : 1060; -- ' str
0B8F : 20B5; -- . imov [jmp!    .assert]
0B90 : 3007; -- | imoh
0B91 : A000; -- ' j_op
0B92 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B93 : 3680; -- | imoh
0B94 : 0660; -- ' load
0B95 : 9615; --   isub    t0 1
0B96 : 0760; --   load    t1 t0
0B97 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0B98 : 3080; -- | imoh
0B99 : 1060; -- ' str
0B9A : A700; --   jmp     t1
0B9B : 264E; -- . imov [imov! t0 .string_alloc_20]
0B9C : 3600; -- ' imoh
0B9D : 5D60; -- . push [push! t0]
0B9E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0B9F : 3680; -- | imoh
0BA0 : 0660; -- ' load
0BA1 : 27AB; -- . imov [imov!   t1 .test_logical_body_retaddr0]
0BA2 : 370B; -- ' imoh
0BA3 : 1670; --   str     t0 t1
0BA4 : 9614; --   iadd    t0 1
0BA5 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0BA6 : 3080; -- | imoh
0BA7 : 1060; -- ' str
0BA8 : 2018; -- . imov [jmp!    .print_string]
0BA9 : 3005; -- | imoh
0BAA : A000; -- ' j_op
0BAB : 262C; -- . imov [imov! t0 .string_alloc_21]
0BAC : 3600; -- ' imoh
0BAD : 5D60; -- . push [push! t0]
0BAE : 2601; -- . imov [imov! t0 1]
0BAF : 3600; -- ' imoh
0BB0 : 5D60; --   push t0
0BB1 : 2601; -- . imov [imov! t0 1]
0BB2 : 3600; -- ' imoh
0BB3 : 5D60; --   push t0
0BB4 : 67D0; -- . pop [pop! t1 t0]
0BB5 : 66D0; -- ' pop
0BB6 : 2800; --   imov t2 0
0BB7 : 9607; --   tst  t0
0BB8 : 20C0; -- . imov [jz! .test_logical_body_0_0_operator_andfalse]
0BB9 : 300B; -- | imoh
0BBA : A001; -- ' j_op
0BBB : 9707; --   tst  t1
0BBC : 20C0; -- . imov [jz! .test_logical_body_0_0_operator_andfalse]
0BBD : 300B; -- | imoh
0BBE : A001; -- ' j_op
0BBF : 2801; --   imov t2 1
0BC0 : 5D80; -- . push [push! t2]
0BC1 : 2601; -- . imov [imov! t0 1]
0BC2 : 3600; -- ' imoh
0BC3 : 5D60; --   push t0
0BC4 : 67D0; -- . pop [pop! t1 t0]
0BC5 : 66D0; -- ' pop
0BC6 : 2801; --   imov t2 1  # default value
0BC7 : 8675; --   sub  t0 t1
0BC8 : 20CC; -- . imov [jz!  .test_logical_body_0_1_operator_opskip]
0BC9 : 300B; -- | imoh
0BCA : A001; -- ' j_op
0BCB : 2800; --   imov t2 0
0BCC : 5D80; -- . push [push! t2]
0BCD : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0BCE : 3680; -- | imoh
0BCF : 0660; -- ' load
0BD0 : 27DA; -- . imov [imov!   t1 .test_logical_body_retaddr1]
0BD1 : 370B; -- ' imoh
0BD2 : 1670; --   str     t0 t1
0BD3 : 9614; --   iadd    t0 1
0BD4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0BD5 : 3080; -- | imoh
0BD6 : 1060; -- ' str
0BD7 : 20B5; -- . imov [jmp!    .assert]
0BD8 : 3007; -- | imoh
0BD9 : A000; -- ' j_op
0BDA : 2609; -- . imov [imov! t0 .string_alloc_22]
0BDB : 3603; -- ' imoh
0BDC : 5D60; -- . push [push! t0]
0BDD : 2600; -- . imov [imov! t0 0]
0BDE : 3600; -- ' imoh
0BDF : 5D60; --   push t0
0BE0 : 2601; -- . imov [imov! t0 1]
0BE1 : 3600; -- ' imoh
0BE2 : 5D60; --   push t0
0BE3 : 67D0; -- . pop [pop! t1 t0]
0BE4 : 66D0; -- ' pop
0BE5 : 2800; --   imov t2 0
0BE6 : 9607; --   tst  t0
0BE7 : 20EF; -- . imov [jz! .test_logical_body_1_0_operator_andfalse]
0BE8 : 300B; -- | imoh
0BE9 : A001; -- ' j_op
0BEA : 9707; --   tst  t1
0BEB : 20EF; -- . imov [jz! .test_logical_body_1_0_operator_andfalse]
0BEC : 300B; -- | imoh
0BED : A001; -- ' j_op
0BEE : 2801; --   imov t2 1
0BEF : 5D80; -- . push [push! t2]
0BF0 : 2600; -- . imov [imov! t0 0]
0BF1 : 3600; -- ' imoh
0BF2 : 5D60; --   push t0
0BF3 : 67D0; -- . pop [pop! t1 t0]
0BF4 : 66D0; -- ' pop
0BF5 : 2801; --   imov t2 1  # default value
0BF6 : 8675; --   sub  t0 t1
0BF7 : 20FB; -- . imov [jz!  .test_logical_body_1_1_operator_opskip]
0BF8 : 300B; -- | imoh
0BF9 : A001; -- ' j_op
0BFA : 2800; --   imov t2 0
0BFB : 5D80; -- . push [push! t2]
0BFC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0BFD : 3680; -- | imoh
0BFE : 0660; -- ' load
0BFF : 2709; -- . imov [imov!   t1 .test_logical_body_retaddr2]
0C00 : 370C; -- ' imoh
0C01 : 1670; --   str     t0 t1
0C02 : 9614; --   iadd    t0 1
0C03 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0C04 : 3080; -- | imoh
0C05 : 1060; -- ' str
0C06 : 20B5; -- . imov [jmp!    .assert]
0C07 : 3007; -- | imoh
0C08 : A000; -- ' j_op
0C09 : 264B; -- . imov [imov! t0 .string_alloc_23]
0C0A : 3601; -- ' imoh
0C0B : 5D60; -- . push [push! t0]
0C0C : 2600; -- . imov [imov! t0 0]
0C0D : 3600; -- ' imoh
0C0E : 5D60; --   push t0
0C0F : 2600; -- . imov [imov! t0 0]
0C10 : 3600; -- ' imoh
0C11 : 5D60; --   push t0
0C12 : 67D0; -- . pop [pop! t1 t0]
0C13 : 66D0; -- ' pop
0C14 : 2801; --   imov t2 1
0C15 : 9607; --   tst  t0
0C16 : 201E; -- . imov [jnz! .test_logical_body_2_0_operator_ortrue]
0C17 : 300C; -- | imoh
0C18 : A002; -- ' j_op
0C19 : 9707; --   tst  t1
0C1A : 201E; -- . imov [jnz! .test_logical_body_2_0_operator_ortrue]
0C1B : 300C; -- | imoh
0C1C : A002; -- ' j_op
0C1D : 2800; --   imov t2 0
0C1E : 5D80; -- . push [push! t2]
0C1F : 2600; -- . imov [imov! t0 0]
0C20 : 3600; -- ' imoh
0C21 : 5D60; --   push t0
0C22 : 67D0; -- . pop [pop! t1 t0]
0C23 : 66D0; -- ' pop
0C24 : 2801; --   imov t2 1  # default value
0C25 : 8675; --   sub  t0 t1
0C26 : 202A; -- . imov [jz!  .test_logical_body_2_1_operator_opskip]
0C27 : 300C; -- | imoh
0C28 : A001; -- ' j_op
0C29 : 2800; --   imov t2 0
0C2A : 5D80; -- . push [push! t2]
0C2B : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0C2C : 3680; -- | imoh
0C2D : 0660; -- ' load
0C2E : 2738; -- . imov [imov!   t1 .test_logical_body_retaddr3]
0C2F : 370C; -- ' imoh
0C30 : 1670; --   str     t0 t1
0C31 : 9614; --   iadd    t0 1
0C32 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0C33 : 3080; -- | imoh
0C34 : 1060; -- ' str
0C35 : 20B5; -- . imov [jmp!    .assert]
0C36 : 3007; -- | imoh
0C37 : A000; -- ' j_op
0C38 : 26BC; -- . imov [imov! t0 .string_alloc_24]
0C39 : 3600; -- ' imoh
0C3A : 5D60; -- . push [push! t0]
0C3B : 2601; -- . imov [imov! t0 1]
0C3C : 3600; -- ' imoh
0C3D : 5D60; --   push t0
0C3E : 2600; -- . imov [imov! t0 0]
0C3F : 3600; -- ' imoh
0C40 : 5D60; --   push t0
0C41 : 67D0; -- . pop [pop! t1 t0]
0C42 : 66D0; -- ' pop
0C43 : 2801; --   imov t2 1
0C44 : 9607; --   tst  t0
0C45 : 204D; -- . imov [jnz! .test_logical_body_3_0_operator_ortrue]
0C46 : 300C; -- | imoh
0C47 : A002; -- ' j_op
0C48 : 9707; --   tst  t1
0C49 : 204D; -- . imov [jnz! .test_logical_body_3_0_operator_ortrue]
0C4A : 300C; -- | imoh
0C4B : A002; -- ' j_op
0C4C : 2800; --   imov t2 0
0C4D : 5D80; -- . push [push! t2]
0C4E : 2601; -- . imov [imov! t0 1]
0C4F : 3600; -- ' imoh
0C50 : 5D60; --   push t0
0C51 : 67D0; -- . pop [pop! t1 t0]
0C52 : 66D0; -- ' pop
0C53 : 2801; --   imov t2 1  # default value
0C54 : 8675; --   sub  t0 t1
0C55 : 2059; -- . imov [jz!  .test_logical_body_3_1_operator_opskip]
0C56 : 300C; -- | imoh
0C57 : A001; -- ' j_op
0C58 : 2800; --   imov t2 0
0C59 : 5D80; -- . push [push! t2]
0C5A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0C5B : 3680; -- | imoh
0C5C : 0660; -- ' load
0C5D : 2767; -- . imov [imov!   t1 .test_logical_body_retaddr4]
0C5E : 370C; -- ' imoh
0C5F : 1670; --   str     t0 t1
0C60 : 9614; --   iadd    t0 1
0C61 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0C62 : 3080; -- | imoh
0C63 : 1060; -- ' str
0C64 : 20B5; -- . imov [jmp!    .assert]
0C65 : 3007; -- | imoh
0C66 : A000; -- ' j_op
0C67 : 2651; -- . imov [imov! t0 .string_alloc_25]
0C68 : 3603; -- ' imoh
0C69 : 5D60; -- . push [push! t0]
0C6A : 2601; -- . imov [imov! t0 1]
0C6B : 3600; -- ' imoh
0C6C : 5D60; --   push t0
0C6D : 66D0; -- . pop [pop! t0]
0C6E : 2701; --   imov t1 1
0C6F : 9607; --   tst  t0
0C70 : 2074; -- . imov [jz! .test_logical_body_4_0_operator_nottrue]
0C71 : 300C; -- | imoh
0C72 : A001; -- ' j_op
0C73 : 2700; --   imov t1 0
0C74 : 5D70; -- . push [push! t1]
0C75 : 2600; -- . imov [imov! t0 0]
0C76 : 3600; -- ' imoh
0C77 : 5D60; --   push t0
0C78 : 67D0; -- . pop [pop! t1 t0]
0C79 : 66D0; -- ' pop
0C7A : 2801; --   imov t2 1  # default value
0C7B : 8675; --   sub  t0 t1
0C7C : 2080; -- . imov [jz!  .test_logical_body_4_1_operator_opskip]
0C7D : 300C; -- | imoh
0C7E : A001; -- ' j_op
0C7F : 2800; --   imov t2 0
0C80 : 5D80; -- . push [push! t2]
0C81 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0C82 : 3680; -- | imoh
0C83 : 0660; -- ' load
0C84 : 278E; -- . imov [imov!   t1 .test_logical_body_retaddr5]
0C85 : 370C; -- ' imoh
0C86 : 1670; --   str     t0 t1
0C87 : 9614; --   iadd    t0 1
0C88 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0C89 : 3080; -- | imoh
0C8A : 1060; -- ' str
0C8B : 20B5; -- . imov [jmp!    .assert]
0C8C : 3007; -- | imoh
0C8D : A000; -- ' j_op
0C8E : 2627; -- . imov [imov! t0 .string_alloc_26]
0C8F : 3603; -- ' imoh
0C90 : 5D60; -- . push [push! t0]
0C91 : 2600; -- . imov [imov! t0 0]
0C92 : 3600; -- ' imoh
0C93 : 5D60; --   push t0
0C94 : 66D0; -- . pop [pop! t0]
0C95 : 2701; --   imov t1 1
0C96 : 9607; --   tst  t0
0C97 : 209B; -- . imov [jz! .test_logical_body_5_0_operator_nottrue]
0C98 : 300C; -- | imoh
0C99 : A001; -- ' j_op
0C9A : 2700; --   imov t1 0
0C9B : 5D70; -- . push [push! t1]
0C9C : 2601; -- . imov [imov! t0 1]
0C9D : 3600; -- ' imoh
0C9E : 5D60; --   push t0
0C9F : 67D0; -- . pop [pop! t1 t0]
0CA0 : 66D0; -- ' pop
0CA1 : 2801; --   imov t2 1  # default value
0CA2 : 8675; --   sub  t0 t1
0CA3 : 20A7; -- . imov [jz!  .test_logical_body_5_1_operator_opskip]
0CA4 : 300C; -- | imoh
0CA5 : A001; -- ' j_op
0CA6 : 2800; --   imov t2 0
0CA7 : 5D80; -- . push [push! t2]
0CA8 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0CA9 : 3680; -- | imoh
0CAA : 0660; -- ' load
0CAB : 27B5; -- . imov [imov!   t1 .test_logical_body_retaddr6]
0CAC : 370C; -- ' imoh
0CAD : 1670; --   str     t0 t1
0CAE : 9614; --   iadd    t0 1
0CAF : 2025; -- . imov [str!    .ret_stack_ptr t0]
0CB0 : 3080; -- | imoh
0CB1 : 1060; -- ' str
0CB2 : 20B5; -- . imov [jmp!    .assert]
0CB3 : 3007; -- | imoh
0CB4 : A000; -- ' j_op
0CB5 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0CB6 : 3680; -- | imoh
0CB7 : 0660; -- ' load
0CB8 : 9615; --   isub    t0 1
0CB9 : 0760; --   load    t1 t0
0CBA : 2025; -- . imov [str!    .ret_stack_ptr t0]
0CBB : 3080; -- | imoh
0CBC : 1060; -- ' str
0CBD : A700; --   jmp     t1
0CBE : 26D1; -- . imov [imov! t0 .string_alloc_27]
0CBF : 3602; -- ' imoh
0CC0 : 5D60; -- . push [push! t0]
0CC1 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0CC2 : 3680; -- | imoh
0CC3 : 0660; -- ' load
0CC4 : 27CE; -- . imov [imov!   t1 .test_strlen_body_retaddr0]
0CC5 : 370C; -- ' imoh
0CC6 : 1670; --   str     t0 t1
0CC7 : 9614; --   iadd    t0 1
0CC8 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0CC9 : 3080; -- | imoh
0CCA : 1060; -- ' str
0CCB : 2018; -- . imov [jmp!    .print_string]
0CCC : 3005; -- | imoh
0CCD : A000; -- ' j_op
0CCE : 262D; -- . imov [imov! t0 .string_alloc_28]
0CCF : 3601; -- ' imoh
0CD0 : 5D60; -- . push [push! t0]
0CD1 : 264C; -- . imov [imov! t0 .string_alloc_29]
0CD2 : 3603; -- ' imoh
0CD3 : 5D60; -- . push [push! t0]
0CD4 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0CD5 : 3680; -- | imoh
0CD6 : 0660; -- ' load
0CD7 : 27E1; -- . imov [imov!   t1 .test_strlen_body_0_retaddr0]
0CD8 : 370C; -- ' imoh
0CD9 : 1670; --   str     t0 t1
0CDA : 9614; --   iadd    t0 1
0CDB : 2025; -- . imov [str!    .ret_stack_ptr t0]
0CDC : 3080; -- | imoh
0CDD : 1060; -- ' str
0CDE : 20DC; -- . imov [jmp!    .strlen]
0CDF : 3006; -- | imoh
0CE0 : A000; -- ' j_op
0CE1 : 2604; -- . imov [imov! t0 4]
0CE2 : 3600; -- ' imoh
0CE3 : 5D60; --   push t0
0CE4 : 67D0; -- . pop [pop! t1 t0]
0CE5 : 66D0; -- ' pop
0CE6 : 2801; --   imov t2 1  # default value
0CE7 : 8675; --   sub  t0 t1
0CE8 : 20EC; -- . imov [jz!  .test_strlen_body_0_0_operator_opskip]
0CE9 : 300C; -- | imoh
0CEA : A001; -- ' j_op
0CEB : 2800; --   imov t2 0
0CEC : 5D80; -- . push [push! t2]
0CED : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0CEE : 3680; -- | imoh
0CEF : 0660; -- ' load
0CF0 : 27FA; -- . imov [imov!   t1 .test_strlen_body_retaddr1]
0CF1 : 370C; -- ' imoh
0CF2 : 1670; --   str     t0 t1
0CF3 : 9614; --   iadd    t0 1
0CF4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0CF5 : 3080; -- | imoh
0CF6 : 1060; -- ' str
0CF7 : 20B5; -- . imov [jmp!    .assert]
0CF8 : 3007; -- | imoh
0CF9 : A000; -- ' j_op
0CFA : 26A4; -- . imov [imov! t0 .string_alloc_30]
0CFB : 3600; -- ' imoh
0CFC : 5D60; -- . push [push! t0]
0CFD : 269E; -- . imov [imov! t0 .string_alloc_31]
0CFE : 3602; -- ' imoh
0CFF : 5D60; -- . push [push! t0]
0D00 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D01 : 3680; -- | imoh
0D02 : 0660; -- ' load
0D03 : 270D; -- . imov [imov!   t1 .test_strlen_body_1_retaddr0]
0D04 : 370D; -- ' imoh
0D05 : 1670; --   str     t0 t1
0D06 : 9614; --   iadd    t0 1
0D07 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D08 : 3080; -- | imoh
0D09 : 1060; -- ' str
0D0A : 20DC; -- . imov [jmp!    .strlen]
0D0B : 3006; -- | imoh
0D0C : A000; -- ' j_op
0D0D : 2600; -- . imov [imov! t0 0]
0D0E : 3600; -- ' imoh
0D0F : 5D60; --   push t0
0D10 : 67D0; -- . pop [pop! t1 t0]
0D11 : 66D0; -- ' pop
0D12 : 2801; --   imov t2 1  # default value
0D13 : 8675; --   sub  t0 t1
0D14 : 2018; -- . imov [jz!  .test_strlen_body_1_0_operator_opskip]
0D15 : 300D; -- | imoh
0D16 : A001; -- ' j_op
0D17 : 2800; --   imov t2 0
0D18 : 5D80; -- . push [push! t2]
0D19 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D1A : 3680; -- | imoh
0D1B : 0660; -- ' load
0D1C : 2726; -- . imov [imov!   t1 .test_strlen_body_retaddr2]
0D1D : 370D; -- ' imoh
0D1E : 1670; --   str     t0 t1
0D1F : 9614; --   iadd    t0 1
0D20 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D21 : 3080; -- | imoh
0D22 : 1060; -- ' str
0D23 : 20B5; -- . imov [jmp!    .assert]
0D24 : 3007; -- | imoh
0D25 : A000; -- ' j_op
0D26 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D27 : 3680; -- | imoh
0D28 : 0660; -- ' load
0D29 : 9615; --   isub    t0 1
0D2A : 0760; --   load    t1 t0
0D2B : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D2C : 3080; -- | imoh
0D2D : 1060; -- ' str
0D2E : A700; --   jmp     t1
0D2F : 263C; -- . imov [imov! t0 .string_alloc_32]
0D30 : 3601; -- ' imoh
0D31 : 5D60; -- . push [push! t0]
0D32 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D33 : 3680; -- | imoh
0D34 : 0660; -- ' load
0D35 : 273F; -- . imov [imov!   t1 .test_streq_body_retaddr0]
0D36 : 370D; -- ' imoh
0D37 : 1670; --   str     t0 t1
0D38 : 9614; --   iadd    t0 1
0D39 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D3A : 3080; -- | imoh
0D3B : 1060; -- ' str
0D3C : 2018; -- . imov [jmp!    .print_string]
0D3D : 3005; -- | imoh
0D3E : A000; -- ' j_op
0D3F : 260B; -- . imov [imov! t0 .string_alloc_33]
0D40 : 3601; -- ' imoh
0D41 : 5D60; -- . push [push! t0]
0D42 : 269E; -- . imov [imov! t0 .string_alloc_31]
0D43 : 3602; -- ' imoh
0D44 : 5D60; -- . push [push! t0]
0D45 : 269E; -- . imov [imov! t0 .string_alloc_31]
0D46 : 3602; -- ' imoh
0D47 : 5D60; -- . push [push! t0]
0D48 : 2600; -- . imov [imov! t0 0]
0D49 : 3600; -- ' imoh
0D4A : 5D60; --   push t0
0D4B : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D4C : 3680; -- | imoh
0D4D : 0660; -- ' load
0D4E : 2758; -- . imov [imov!   t1 .test_streq_body_0_retaddr0]
0D4F : 370D; -- ' imoh
0D50 : 1670; --   str     t0 t1
0D51 : 9614; --   iadd    t0 1
0D52 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D53 : 3080; -- | imoh
0D54 : 1060; -- ' str
0D55 : 2005; -- . imov [jmp!    .streq]
0D56 : 3007; -- | imoh
0D57 : A000; -- ' j_op
0D58 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D59 : 3680; -- | imoh
0D5A : 0660; -- ' load
0D5B : 2765; -- . imov [imov!   t1 .test_streq_body_retaddr1]
0D5C : 370D; -- ' imoh
0D5D : 1670; --   str     t0 t1
0D5E : 9614; --   iadd    t0 1
0D5F : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D60 : 3080; -- | imoh
0D61 : 1060; -- ' str
0D62 : 20B5; -- . imov [jmp!    .assert]
0D63 : 3007; -- | imoh
0D64 : A000; -- ' j_op
0D65 : 2679; -- . imov [imov! t0 .string_alloc_36]
0D66 : 3601; -- ' imoh
0D67 : 5D60; -- . push [push! t0]
0D68 : 262B; -- . imov [imov! t0 .string_alloc_37]
0D69 : 3603; -- ' imoh
0D6A : 5D60; -- . push [push! t0]
0D6B : 269E; -- . imov [imov! t0 .string_alloc_31]
0D6C : 3602; -- ' imoh
0D6D : 5D60; -- . push [push! t0]
0D6E : 2600; -- . imov [imov! t0 0]
0D6F : 3600; -- ' imoh
0D70 : 5D60; --   push t0
0D71 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D72 : 3680; -- | imoh
0D73 : 0660; -- ' load
0D74 : 277E; -- . imov [imov!   t1 .test_streq_body_1_retaddr0]
0D75 : 370D; -- ' imoh
0D76 : 1670; --   str     t0 t1
0D77 : 9614; --   iadd    t0 1
0D78 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D79 : 3080; -- | imoh
0D7A : 1060; -- ' str
0D7B : 2005; -- . imov [jmp!    .streq]
0D7C : 3007; -- | imoh
0D7D : A000; -- ' j_op
0D7E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D7F : 3680; -- | imoh
0D80 : 0660; -- ' load
0D81 : 278B; -- . imov [imov!   t1 .test_streq_body_retaddr2]
0D82 : 370D; -- ' imoh
0D83 : 1670; --   str     t0 t1
0D84 : 9614; --   iadd    t0 1
0D85 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D86 : 3080; -- | imoh
0D87 : 1060; -- ' str
0D88 : 20B5; -- . imov [jmp!    .assert]
0D89 : 3007; -- | imoh
0D8A : A000; -- ' j_op
0D8B : 2666; -- . imov [imov! t0 .string_alloc_39]
0D8C : 3601; -- ' imoh
0D8D : 5D60; -- . push [push! t0]
0D8E : 262B; -- . imov [imov! t0 .string_alloc_37]
0D8F : 3603; -- ' imoh
0D90 : 5D60; -- . push [push! t0]
0D91 : 262B; -- . imov [imov! t0 .string_alloc_37]
0D92 : 3603; -- ' imoh
0D93 : 5D60; -- . push [push! t0]
0D94 : 2601; -- . imov [imov! t0 1]
0D95 : 3600; -- ' imoh
0D96 : 5D60; --   push t0
0D97 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0D98 : 3680; -- | imoh
0D99 : 0660; -- ' load
0D9A : 27A4; -- . imov [imov!   t1 .test_streq_body_2_retaddr0]
0D9B : 370D; -- ' imoh
0D9C : 1670; --   str     t0 t1
0D9D : 9614; --   iadd    t0 1
0D9E : 2025; -- . imov [str!    .ret_stack_ptr t0]
0D9F : 3080; -- | imoh
0DA0 : 1060; -- ' str
0DA1 : 2005; -- . imov [jmp!    .streq]
0DA2 : 3007; -- | imoh
0DA3 : A000; -- ' j_op
0DA4 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0DA5 : 3680; -- | imoh
0DA6 : 0660; -- ' load
0DA7 : 27B1; -- . imov [imov!   t1 .test_streq_body_retaddr3]
0DA8 : 370D; -- ' imoh
0DA9 : 1670; --   str     t0 t1
0DAA : 9614; --   iadd    t0 1
0DAB : 2025; -- . imov [str!    .ret_stack_ptr t0]
0DAC : 3080; -- | imoh
0DAD : 1060; -- ' str
0DAE : 20B5; -- . imov [jmp!    .assert]
0DAF : 3007; -- | imoh
0DB0 : A000; -- ' j_op
0DB1 : 262D; -- . imov [imov! t0 .string_alloc_42]
0DB2 : 3603; -- ' imoh
0DB3 : 5D60; -- . push [push! t0]
0DB4 : 262B; -- . imov [imov! t0 .string_alloc_37]
0DB5 : 3603; -- ' imoh
0DB6 : 5D60; -- . push [push! t0]
0DB7 : 2695; -- . imov [imov! t0 .string_alloc_44]
0DB8 : 3600; -- ' imoh
0DB9 : 5D60; -- . push [push! t0]
0DBA : 2601; -- . imov [imov! t0 1]
0DBB : 3600; -- ' imoh
0DBC : 5D60; --   push t0
0DBD : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0DBE : 3680; -- | imoh
0DBF : 0660; -- ' load
0DC0 : 27CA; -- . imov [imov!   t1 .test_streq_body_3_retaddr0]
0DC1 : 370D; -- ' imoh
0DC2 : 1670; --   str     t0 t1
0DC3 : 9614; --   iadd    t0 1
0DC4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0DC5 : 3080; -- | imoh
0DC6 : 1060; -- ' str
0DC7 : 2005; -- . imov [jmp!    .streq]
0DC8 : 3007; -- | imoh
0DC9 : A000; -- ' j_op
0DCA : 2600; -- . imov [imov! t0 0]
0DCB : 3600; -- ' imoh
0DCC : 5D60; --   push t0
0DCD : 67D0; -- . pop [pop! t1 t0]
0DCE : 66D0; -- ' pop
0DCF : 2801; --   imov t2 1  # default value
0DD0 : 8675; --   sub  t0 t1
0DD1 : 20D5; -- . imov [jz!  .test_streq_body_3_0_operator_opskip]
0DD2 : 300D; -- | imoh
0DD3 : A001; -- ' j_op
0DD4 : 2800; --   imov t2 0
0DD5 : 5D80; -- . push [push! t2]
0DD6 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0DD7 : 3680; -- | imoh
0DD8 : 0660; -- ' load
0DD9 : 27E3; -- . imov [imov!   t1 .test_streq_body_retaddr4]
0DDA : 370D; -- ' imoh
0DDB : 1670; --   str     t0 t1
0DDC : 9614; --   iadd    t0 1
0DDD : 2025; -- . imov [str!    .ret_stack_ptr t0]
0DDE : 3080; -- | imoh
0DDF : 1060; -- ' str
0DE0 : 20B5; -- . imov [jmp!    .assert]
0DE1 : 3007; -- | imoh
0DE2 : A000; -- ' j_op
0DE3 : 2636; -- . imov [imov! t0 .string_alloc_45]
0DE4 : 3600; -- ' imoh
0DE5 : 5D60; -- . push [push! t0]
0DE6 : 261C; -- . imov [imov! t0 .string_alloc_46]
0DE7 : 3601; -- ' imoh
0DE8 : 5D60; -- . push [push! t0]
0DE9 : 26F5; -- . imov [imov! t0 .string_alloc_47]
0DEA : 3602; -- ' imoh
0DEB : 5D60; -- . push [push! t0]
0DEC : 2603; -- . imov [imov! t0 3]
0DED : 3600; -- ' imoh
0DEE : 5D60; --   push t0
0DEF : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0DF0 : 3680; -- | imoh
0DF1 : 0660; -- ' load
0DF2 : 27FC; -- . imov [imov!   t1 .test_streq_body_4_retaddr0]
0DF3 : 370D; -- ' imoh
0DF4 : 1670; --   str     t0 t1
0DF5 : 9614; --   iadd    t0 1
0DF6 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0DF7 : 3080; -- | imoh
0DF8 : 1060; -- ' str
0DF9 : 2005; -- . imov [jmp!    .streq]
0DFA : 3007; -- | imoh
0DFB : A000; -- ' j_op
0DFC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0DFD : 3680; -- | imoh
0DFE : 0660; -- ' load
0DFF : 2709; -- . imov [imov!   t1 .test_streq_body_retaddr5]
0E00 : 370E; -- ' imoh
0E01 : 1670; --   str     t0 t1
0E02 : 9614; --   iadd    t0 1
0E03 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E04 : 3080; -- | imoh
0E05 : 1060; -- ' str
0E06 : 20B5; -- . imov [jmp!    .assert]
0E07 : 3007; -- | imoh
0E08 : A000; -- ' j_op
0E09 : 266C; -- . imov [imov! t0 .string_alloc_48]
0E0A : 3600; -- ' imoh
0E0B : 5D60; -- . push [push! t0]
0E0C : 2684; -- . imov [imov! t0 .string_alloc_49]
0E0D : 3600; -- ' imoh
0E0E : 5D60; -- . push [push! t0]
0E0F : 26F5; -- . imov [imov! t0 .string_alloc_47]
0E10 : 3602; -- ' imoh
0E11 : 5D60; -- . push [push! t0]
0E12 : 2604; -- . imov [imov! t0 4]
0E13 : 3600; -- ' imoh
0E14 : 5D60; --   push t0
0E15 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E16 : 3680; -- | imoh
0E17 : 0660; -- ' load
0E18 : 2722; -- . imov [imov!   t1 .test_streq_body_5_retaddr0]
0E19 : 370E; -- ' imoh
0E1A : 1670; --   str     t0 t1
0E1B : 9614; --   iadd    t0 1
0E1C : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E1D : 3080; -- | imoh
0E1E : 1060; -- ' str
0E1F : 2005; -- . imov [jmp!    .streq]
0E20 : 3007; -- | imoh
0E21 : A000; -- ' j_op
0E22 : 2600; -- . imov [imov! t0 0]
0E23 : 3600; -- ' imoh
0E24 : 5D60; --   push t0
0E25 : 67D0; -- . pop [pop! t1 t0]
0E26 : 66D0; -- ' pop
0E27 : 2801; --   imov t2 1  # default value
0E28 : 8675; --   sub  t0 t1
0E29 : 202D; -- . imov [jz!  .test_streq_body_5_0_operator_opskip]
0E2A : 300E; -- | imoh
0E2B : A001; -- ' j_op
0E2C : 2800; --   imov t2 0
0E2D : 5D80; -- . push [push! t2]
0E2E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E2F : 3680; -- | imoh
0E30 : 0660; -- ' load
0E31 : 273B; -- . imov [imov!   t1 .test_streq_body_retaddr6]
0E32 : 370E; -- ' imoh
0E33 : 1670; --   str     t0 t1
0E34 : 9614; --   iadd    t0 1
0E35 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E36 : 3080; -- | imoh
0E37 : 1060; -- ' str
0E38 : 20B5; -- . imov [jmp!    .assert]
0E39 : 3007; -- | imoh
0E3A : A000; -- ' j_op
0E3B : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E3C : 3680; -- | imoh
0E3D : 0660; -- ' load
0E3E : 9615; --   isub    t0 1
0E3F : 0760; --   load    t1 t0
0E40 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E41 : 3080; -- | imoh
0E42 : 1060; -- ' str
0E43 : A700; --   jmp     t1
0E44 : 2659; -- . imov [imov! t0 .string_alloc_51]
0E45 : 3601; -- ' imoh
0E46 : 5D60; -- . push [push! t0]
0E47 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E48 : 3680; -- | imoh
0E49 : 0660; -- ' load
0E4A : 2754; -- . imov [imov!   t1 .test_let_body_retaddr0]
0E4B : 370E; -- ' imoh
0E4C : 1670; --   str     t0 t1
0E4D : 9614; --   iadd    t0 1
0E4E : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E4F : 3080; -- | imoh
0E50 : 1060; -- ' str
0E51 : 2018; -- . imov [jmp!    .print_string]
0E52 : 3005; -- | imoh
0E53 : A000; -- ' j_op
0E54 : 260B; -- . imov [imov! t0 11]
0E55 : 3600; -- ' imoh
0E56 : 5D60; --   push t0
0E57 : 260A; -- . imov [imov! t0 10]
0E58 : 3600; -- ' imoh
0E59 : 5D60; --   push t0
0E5A : 260B; -- . imov [imov! t0 11]
0E5B : 3600; -- ' imoh
0E5C : 5D60; --   push t0
0E5D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E5E : 3680; -- | imoh
0E5F : 0660; -- ' load
0E60 : 67D0; -- . pop [pop!    t1]
0E61 : 1670; --   str     t0 t1
0E62 : 9614; --   iadd    t0 1
0E63 : 67D0; -- . pop [pop!    t1]
0E64 : 1670; --   str     t0 t1
0E65 : 9614; --   iadd    t0 1
0E66 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E67 : 3080; -- | imoh
0E68 : 1060; -- ' str
0E69 : 260B; -- . imov [imov! t0 11]
0E6A : 3600; -- ' imoh
0E6B : 5D60; --   push t0
0E6C : 67D0; -- . pop [pop! t1 t0]
0E6D : 66D0; -- ' pop
0E6E : 2801; --   imov t2 1  # default value
0E6F : 8675; --   sub  t0 t1
0E70 : 2074; -- . imov [jz!  .test_let_body_0_let_block_0_0_operator_opskip]
0E71 : 300E; -- | imoh
0E72 : A001; -- ' j_op
0E73 : 2800; --   imov t2 0
0E74 : 5D80; -- . push [push! t2]
0E75 : 269B; -- . imov [imov! t0 .string_alloc_52]
0E76 : 3602; -- ' imoh
0E77 : 5D60; -- . push [push! t0]
0E78 : 66D0; -- . pop [pop! t0 t1]
0E79 : 67D0; -- ' pop
0E7A : 5D60; -- . push [push! t0 t1]
0E7B : 5D70; -- ' push
0E7C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E7D : 3680; -- | imoh
0E7E : 0660; -- ' load
0E7F : 2789; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr0]
0E80 : 370E; -- ' imoh
0E81 : 1670; --   str     t0 t1
0E82 : 9614; --   iadd    t0 1
0E83 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0E84 : 3080; -- | imoh
0E85 : 1060; -- ' str
0E86 : 20B5; -- . imov [jmp!    .assert]
0E87 : 3007; -- | imoh
0E88 : A000; -- ' j_op
0E89 : 2692; -- . imov [imov! t0 .string_alloc_53]
0E8A : 3600; -- ' imoh
0E8B : 5D60; -- . push [push! t0]
0E8C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0E8D : 3680; -- | imoh
0E8E : 0660; -- ' load
0E8F : 2701; -- . imov [imov!   t1 1]
0E90 : 3700; -- ' imoh
0E91 : 8675; --   sub     t0 t1
0E92 : 5D60; -- . push [push!   t0]
0E93 : 66D0; -- . pop [pop! t0]
0E94 : 0660; --   load t0 t0
0E95 : 5D60; -- . push [push! t0]
0E96 : 260A; -- . imov [imov! t0 10]
0E97 : 3600; -- ' imoh
0E98 : 5D60; --   push t0
0E99 : 67D0; -- . pop [pop! t1 t0]
0E9A : 66D0; -- ' pop
0E9B : 2801; --   imov t2 1  # default value
0E9C : 8675; --   sub  t0 t1
0E9D : 20A1; -- . imov [jz!  .test_let_body_0_let_block_1_0_operator_opskip]
0E9E : 300E; -- | imoh
0E9F : A001; -- ' j_op
0EA0 : 2800; --   imov t2 0
0EA1 : 5D80; -- . push [push! t2]
0EA2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0EA3 : 3680; -- | imoh
0EA4 : 0660; -- ' load
0EA5 : 27AF; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr1]
0EA6 : 370E; -- ' imoh
0EA7 : 1670; --   str     t0 t1
0EA8 : 9614; --   iadd    t0 1
0EA9 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0EAA : 3080; -- | imoh
0EAB : 1060; -- ' str
0EAC : 20B5; -- . imov [jmp!    .assert]
0EAD : 3007; -- | imoh
0EAE : A000; -- ' j_op
0EAF : 26EC; -- . imov [imov! t0 .string_alloc_54]
0EB0 : 3600; -- ' imoh
0EB1 : 5D60; -- . push [push! t0]
0EB2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0EB3 : 3680; -- | imoh
0EB4 : 0660; -- ' load
0EB5 : 2702; -- . imov [imov!   t1 2]
0EB6 : 3700; -- ' imoh
0EB7 : 8675; --   sub     t0 t1
0EB8 : 5D60; -- . push [push!   t0]
0EB9 : 66D0; -- . pop [pop! t0]
0EBA : 0660; --   load t0 t0
0EBB : 5D60; -- . push [push! t0]
0EBC : 260B; -- . imov [imov! t0 11]
0EBD : 3600; -- ' imoh
0EBE : 5D60; --   push t0
0EBF : 67D0; -- . pop [pop! t1 t0]
0EC0 : 66D0; -- ' pop
0EC1 : 2801; --   imov t2 1  # default value
0EC2 : 8675; --   sub  t0 t1
0EC3 : 20C7; -- . imov [jz!  .test_let_body_0_let_block_2_0_operator_opskip]
0EC4 : 300E; -- | imoh
0EC5 : A001; -- ' j_op
0EC6 : 2800; --   imov t2 0
0EC7 : 5D80; -- . push [push! t2]
0EC8 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0EC9 : 3680; -- | imoh
0ECA : 0660; -- ' load
0ECB : 27D5; -- . imov [imov!   t1 .test_let_body_0_let_block_retaddr2]
0ECC : 370E; -- ' imoh
0ECD : 1670; --   str     t0 t1
0ECE : 9614; --   iadd    t0 1
0ECF : 2025; -- . imov [str!    .ret_stack_ptr t0]
0ED0 : 3080; -- | imoh
0ED1 : 1060; -- ' str
0ED2 : 20B5; -- . imov [jmp!    .assert]
0ED3 : 3007; -- | imoh
0ED4 : A000; -- ' j_op
0ED5 : 260C; -- . imov [imov! t0 12]
0ED6 : 3600; -- ' imoh
0ED7 : 5D60; --   push t0
0ED8 : 260D; -- . imov [imov! t0 13]
0ED9 : 3600; -- ' imoh
0EDA : 5D60; --   push t0
0EDB : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0EDC : 3680; -- | imoh
0EDD : 0660; -- ' load
0EDE : 67D0; -- . pop [pop!    t1]
0EDF : 1670; --   str     t0 t1
0EE0 : 9614; --   iadd    t0 1
0EE1 : 67D0; -- . pop [pop!    t1]
0EE2 : 1670; --   str     t0 t1
0EE3 : 9614; --   iadd    t0 1
0EE4 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0EE5 : 3080; -- | imoh
0EE6 : 1060; -- ' str
0EE7 : 2633; -- . imov [imov! t0 .string_alloc_55]
0EE8 : 3600; -- ' imoh
0EE9 : 5D60; -- . push [push! t0]
0EEA : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0EEB : 3680; -- | imoh
0EEC : 0660; -- ' load
0EED : 2703; -- . imov [imov!   t1 3]
0EEE : 3700; -- ' imoh
0EEF : 8675; --   sub     t0 t1
0EF0 : 5D60; -- . push [push!   t0]
0EF1 : 66D0; -- . pop [pop! t0]
0EF2 : 0660; --   load t0 t0
0EF3 : 5D60; -- . push [push! t0]
0EF4 : 260A; -- . imov [imov! t0 10]
0EF5 : 3600; -- ' imoh
0EF6 : 5D60; --   push t0
0EF7 : 67D0; -- . pop [pop! t1 t0]
0EF8 : 66D0; -- ' pop
0EF9 : 2801; --   imov t2 1  # default value
0EFA : 8675; --   sub  t0 t1
0EFB : 20FF; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_0_0_operator_opskip]
0EFC : 300E; -- | imoh
0EFD : A001; -- ' j_op
0EFE : 2800; --   imov t2 0
0EFF : 5D80; -- . push [push! t2]
0F00 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F01 : 3680; -- | imoh
0F02 : 0660; -- ' load
0F03 : 270D; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr0]
0F04 : 370F; -- ' imoh
0F05 : 1670; --   str     t0 t1
0F06 : 9614; --   iadd    t0 1
0F07 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F08 : 3080; -- | imoh
0F09 : 1060; -- ' str
0F0A : 20B5; -- . imov [jmp!    .assert]
0F0B : 3007; -- | imoh
0F0C : A000; -- ' j_op
0F0D : 2655; -- . imov [imov! t0 .string_alloc_56]
0F0E : 3603; -- ' imoh
0F0F : 5D60; -- . push [push! t0]
0F10 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F11 : 3680; -- | imoh
0F12 : 0660; -- ' load
0F13 : 2701; -- . imov [imov!   t1 1]
0F14 : 3700; -- ' imoh
0F15 : 8675; --   sub     t0 t1
0F16 : 5D60; -- . push [push!   t0]
0F17 : 66D0; -- . pop [pop! t0]
0F18 : 0660; --   load t0 t0
0F19 : 5D60; -- . push [push! t0]
0F1A : 260C; -- . imov [imov! t0 12]
0F1B : 3600; -- ' imoh
0F1C : 5D60; --   push t0
0F1D : 67D0; -- . pop [pop! t1 t0]
0F1E : 66D0; -- ' pop
0F1F : 2801; --   imov t2 1  # default value
0F20 : 8675; --   sub  t0 t1
0F21 : 2025; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_1_0_operator_opskip]
0F22 : 300F; -- | imoh
0F23 : A001; -- ' j_op
0F24 : 2800; --   imov t2 0
0F25 : 5D80; -- . push [push! t2]
0F26 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F27 : 3680; -- | imoh
0F28 : 0660; -- ' load
0F29 : 2733; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr1]
0F2A : 370F; -- ' imoh
0F2B : 1670; --   str     t0 t1
0F2C : 9614; --   iadd    t0 1
0F2D : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F2E : 3080; -- | imoh
0F2F : 1060; -- ' str
0F30 : 20B5; -- . imov [jmp!    .assert]
0F31 : 3007; -- | imoh
0F32 : A000; -- ' j_op
0F33 : 268F; -- . imov [imov! t0 .string_alloc_57]
0F34 : 3600; -- ' imoh
0F35 : 5D60; -- . push [push! t0]
0F36 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F37 : 3680; -- | imoh
0F38 : 0660; -- ' load
0F39 : 2702; -- . imov [imov!   t1 2]
0F3A : 3700; -- ' imoh
0F3B : 8675; --   sub     t0 t1
0F3C : 5D60; -- . push [push!   t0]
0F3D : 66D0; -- . pop [pop! t0]
0F3E : 0660; --   load t0 t0
0F3F : 5D60; -- . push [push! t0]
0F40 : 260D; -- . imov [imov! t0 13]
0F41 : 3600; -- ' imoh
0F42 : 5D60; --   push t0
0F43 : 67D0; -- . pop [pop! t1 t0]
0F44 : 66D0; -- ' pop
0F45 : 2801; --   imov t2 1  # default value
0F46 : 8675; --   sub  t0 t1
0F47 : 204B; -- . imov [jz!  .test_let_body_0_let_block_3_let_block_2_0_operator_opskip]
0F48 : 300F; -- | imoh
0F49 : A001; -- ' j_op
0F4A : 2800; --   imov t2 0
0F4B : 5D80; -- . push [push! t2]
0F4C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F4D : 3680; -- | imoh
0F4E : 0660; -- ' load
0F4F : 2759; -- . imov [imov!   t1 .test_let_body_0_let_block_3_let_block_retaddr2]
0F50 : 370F; -- ' imoh
0F51 : 1670; --   str     t0 t1
0F52 : 9614; --   iadd    t0 1
0F53 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F54 : 3080; -- | imoh
0F55 : 1060; -- ' str
0F56 : 20B5; -- . imov [jmp!    .assert]
0F57 : 3007; -- | imoh
0F58 : A000; -- ' j_op
0F59 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F5A : 3680; -- | imoh
0F5B : 0660; -- ' load
0F5C : 2702; -- . imov [imov!   t1 2]
0F5D : 3700; -- ' imoh
0F5E : 8675; --   sub     t0 t1
0F5F : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F60 : 3080; -- | imoh
0F61 : 1060; -- ' str
0F62 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F63 : 3680; -- | imoh
0F64 : 0660; -- ' load
0F65 : 2702; -- . imov [imov!   t1 2]
0F66 : 3700; -- ' imoh
0F67 : 8675; --   sub     t0 t1
0F68 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F69 : 3080; -- | imoh
0F6A : 1060; -- ' str
0F6B : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F6C : 3680; -- | imoh
0F6D : 0660; -- ' load
0F6E : 9615; --   isub    t0 1
0F6F : 0760; --   load    t1 t0
0F70 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F71 : 3080; -- | imoh
0F72 : 1060; -- ' str
0F73 : A700; --   jmp     t1
0F74 : 26E8; -- . imov [imov! t0 .string_alloc_58]
0F75 : 3602; -- ' imoh
0F76 : 5D60; -- . push [push! t0]
0F77 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F78 : 3680; -- | imoh
0F79 : 0660; -- ' load
0F7A : 2784; -- . imov [imov!   t1 .test_mul_body_retaddr0]
0F7B : 370F; -- ' imoh
0F7C : 1670; --   str     t0 t1
0F7D : 9614; --   iadd    t0 1
0F7E : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F7F : 3080; -- | imoh
0F80 : 1060; -- ' str
0F81 : 2018; -- . imov [jmp!    .print_string]
0F82 : 3005; -- | imoh
0F83 : A000; -- ' j_op
0F84 : 2640; -- . imov [imov! t0 .string_alloc_59]
0F85 : 3603; -- ' imoh
0F86 : 5D60; -- . push [push! t0]
0F87 : 2601; -- . imov [imov! t0 1]
0F88 : 3600; -- ' imoh
0F89 : 5D60; --   push t0
0F8A : 2602; -- . imov [imov! t0 2]
0F8B : 3600; -- ' imoh
0F8C : 5D60; --   push t0
0F8D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0F8E : 3680; -- | imoh
0F8F : 0660; -- ' load
0F90 : 279A; -- . imov [imov!   t1 .test_mul_body_0_retaddr0]
0F91 : 370F; -- ' imoh
0F92 : 1670; --   str     t0 t1
0F93 : 9614; --   iadd    t0 1
0F94 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0F95 : 3080; -- | imoh
0F96 : 1060; -- ' str
0F97 : 202C; -- . imov [jmp!    .mul]
0F98 : 3008; -- | imoh
0F99 : A000; -- ' j_op
0F9A : 2602; -- . imov [imov! t0 2]
0F9B : 3600; -- ' imoh
0F9C : 5D60; --   push t0
0F9D : 67D0; -- . pop [pop! t1 t0]
0F9E : 66D0; -- ' pop
0F9F : 2801; --   imov t2 1  # default value
0FA0 : 8675; --   sub  t0 t1
0FA1 : 20A5; -- . imov [jz!  .test_mul_body_0_0_operator_opskip]
0FA2 : 300F; -- | imoh
0FA3 : A001; -- ' j_op
0FA4 : 2800; --   imov t2 0
0FA5 : 5D80; -- . push [push! t2]
0FA6 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0FA7 : 3680; -- | imoh
0FA8 : 0660; -- ' load
0FA9 : 27B3; -- . imov [imov!   t1 .test_mul_body_retaddr1]
0FAA : 370F; -- ' imoh
0FAB : 1670; --   str     t0 t1
0FAC : 9614; --   iadd    t0 1
0FAD : 2025; -- . imov [str!    .ret_stack_ptr t0]
0FAE : 3080; -- | imoh
0FAF : 1060; -- ' str
0FB0 : 20B5; -- . imov [jmp!    .assert]
0FB1 : 3007; -- | imoh
0FB2 : A000; -- ' j_op
0FB3 : 26CB; -- . imov [imov! t0 .string_alloc_60]
0FB4 : 3602; -- ' imoh
0FB5 : 5D60; -- . push [push! t0]
0FB6 : 2602; -- . imov [imov! t0 2]
0FB7 : 3600; -- ' imoh
0FB8 : 5D60; --   push t0
0FB9 : 2605; -- . imov [imov! t0 5]
0FBA : 3600; -- ' imoh
0FBB : 5D60; --   push t0
0FBC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0FBD : 3680; -- | imoh
0FBE : 0660; -- ' load
0FBF : 27C9; -- . imov [imov!   t1 .test_mul_body_1_retaddr0]
0FC0 : 370F; -- ' imoh
0FC1 : 1670; --   str     t0 t1
0FC2 : 9614; --   iadd    t0 1
0FC3 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0FC4 : 3080; -- | imoh
0FC5 : 1060; -- ' str
0FC6 : 202C; -- . imov [jmp!    .mul]
0FC7 : 3008; -- | imoh
0FC8 : A000; -- ' j_op
0FC9 : 260A; -- . imov [imov! t0 10]
0FCA : 3600; -- ' imoh
0FCB : 5D60; --   push t0
0FCC : 67D0; -- . pop [pop! t1 t0]
0FCD : 66D0; -- ' pop
0FCE : 2801; --   imov t2 1  # default value
0FCF : 8675; --   sub  t0 t1
0FD0 : 20D4; -- . imov [jz!  .test_mul_body_1_0_operator_opskip]
0FD1 : 300F; -- | imoh
0FD2 : A001; -- ' j_op
0FD3 : 2800; --   imov t2 0
0FD4 : 5D80; -- . push [push! t2]
0FD5 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0FD6 : 3680; -- | imoh
0FD7 : 0660; -- ' load
0FD8 : 27E2; -- . imov [imov!   t1 .test_mul_body_retaddr2]
0FD9 : 370F; -- ' imoh
0FDA : 1670; --   str     t0 t1
0FDB : 9614; --   iadd    t0 1
0FDC : 2025; -- . imov [str!    .ret_stack_ptr t0]
0FDD : 3080; -- | imoh
0FDE : 1060; -- ' str
0FDF : 20B5; -- . imov [jmp!    .assert]
0FE0 : 3007; -- | imoh
0FE1 : A000; -- ' j_op
0FE2 : 26AE; -- . imov [imov! t0 .string_alloc_61]
0FE3 : 3602; -- ' imoh
0FE4 : 5D60; -- . push [push! t0]
0FE5 : 2600; -- . imov [imov! t0 0]
0FE6 : 3600; -- ' imoh
0FE7 : 5D60; --   push t0
0FE8 : 260A; -- . imov [imov! t0 10]
0FE9 : 3600; -- ' imoh
0FEA : 5D60; --   push t0
0FEB : 2625; -- . imov [load!   t0 .ret_stack_ptr]
0FEC : 3680; -- | imoh
0FED : 0660; -- ' load
0FEE : 27F8; -- . imov [imov!   t1 .test_mul_body_2_retaddr0]
0FEF : 370F; -- ' imoh
0FF0 : 1670; --   str     t0 t1
0FF1 : 9614; --   iadd    t0 1
0FF2 : 2025; -- . imov [str!    .ret_stack_ptr t0]
0FF3 : 3080; -- | imoh
0FF4 : 1060; -- ' str
0FF5 : 202C; -- . imov [jmp!    .mul]
0FF6 : 3008; -- | imoh
0FF7 : A000; -- ' j_op
0FF8 : 2600; -- . imov [imov! t0 0]
0FF9 : 3600; -- ' imoh
0FFA : 5D60; --   push t0
0FFB : 67D0; -- . pop [pop! t1 t0]
0FFC : 66D0; -- ' pop
0FFD : 2801; --   imov t2 1  # default value
0FFE : 8675; --   sub  t0 t1
0FFF : 2003; -- . imov [jz!  .test_mul_body_2_0_operator_opskip]
1000 : 3010; -- | imoh
1001 : A001; -- ' j_op
1002 : 2800; --   imov t2 0
1003 : 5D80; -- . push [push! t2]
1004 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
1005 : 3680; -- | imoh
1006 : 0660; -- ' load
1007 : 2711; -- . imov [imov!   t1 .test_mul_body_retaddr3]
1008 : 3710; -- ' imoh
1009 : 1670; --   str     t0 t1
100A : 9614; --   iadd    t0 1
100B : 2025; -- . imov [str!    .ret_stack_ptr t0]
100C : 3080; -- | imoh
100D : 1060; -- ' str
100E : 20B5; -- . imov [jmp!    .assert]
100F : 3007; -- | imoh
1010 : A000; -- ' j_op
1011 : 26D8; -- . imov [imov! t0 .string_alloc_62]
1012 : 3600; -- ' imoh
1013 : 5D60; -- . push [push! t0]
1014 : 260A; -- . imov [imov! t0 10]
1015 : 3600; -- ' imoh
1016 : 5D60; --   push t0
1017 : 2600; -- . imov [imov! t0 0]
1018 : 3600; -- ' imoh
1019 : 5D60; --   push t0
101A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
101B : 3680; -- | imoh
101C : 0660; -- ' load
101D : 2727; -- . imov [imov!   t1 .test_mul_body_3_retaddr0]
101E : 3710; -- ' imoh
101F : 1670; --   str     t0 t1
1020 : 9614; --   iadd    t0 1
1021 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1022 : 3080; -- | imoh
1023 : 1060; -- ' str
1024 : 202C; -- . imov [jmp!    .mul]
1025 : 3008; -- | imoh
1026 : A000; -- ' j_op
1027 : 2600; -- . imov [imov! t0 0]
1028 : 3600; -- ' imoh
1029 : 5D60; --   push t0
102A : 67D0; -- . pop [pop! t1 t0]
102B : 66D0; -- ' pop
102C : 2801; --   imov t2 1  # default value
102D : 8675; --   sub  t0 t1
102E : 2032; -- . imov [jz!  .test_mul_body_3_0_operator_opskip]
102F : 3010; -- | imoh
1030 : A001; -- ' j_op
1031 : 2800; --   imov t2 0
1032 : 5D80; -- . push [push! t2]
1033 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
1034 : 3680; -- | imoh
1035 : 0660; -- ' load
1036 : 2740; -- . imov [imov!   t1 .test_mul_body_retaddr4]
1037 : 3710; -- ' imoh
1038 : 1670; --   str     t0 t1
1039 : 9614; --   iadd    t0 1
103A : 2025; -- . imov [str!    .ret_stack_ptr t0]
103B : 3080; -- | imoh
103C : 1060; -- ' str
103D : 20B5; -- . imov [jmp!    .assert]
103E : 3007; -- | imoh
103F : A000; -- ' j_op
1040 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
1041 : 3680; -- | imoh
1042 : 0660; -- ' load
1043 : 9615; --   isub    t0 1
1044 : 0760; --   load    t1 t0
1045 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1046 : 3080; -- | imoh
1047 : 1060; -- ' str
1048 : A700; --   jmp     t1
1049 : 26C3; -- . imov [imov! t0 .string_alloc_63]
104A : 3600; -- ' imoh
104B : 5D60; -- . push [push! t0]
104C : 2625; -- . imov [load!   t0 .ret_stack_ptr]
104D : 3680; -- | imoh
104E : 0660; -- ' load
104F : 2759; -- . imov [imov!   t1 .test_global_body_retaddr0]
1050 : 3710; -- ' imoh
1051 : 1670; --   str     t0 t1
1052 : 9614; --   iadd    t0 1
1053 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1054 : 3080; -- | imoh
1055 : 1060; -- ' str
1056 : 2018; -- . imov [jmp!    .print_string]
1057 : 3005; -- | imoh
1058 : A000; -- ' j_op
1059 : 26FA; -- . imov [imov! t0 .string_alloc_64]
105A : 3602; -- ' imoh
105B : 5D60; -- . push [push! t0]
105C : 2624; -- . imov [imov! t0 .variable_alloc_var1]
105D : 3680; -- ' imoh
105E : 5D60; -- . push [push! t0]
105F : 66D0; -- . pop [pop! t0]
1060 : 0660; --   load t0 t0
1061 : 5D60; -- . push [push! t0]
1062 : 26AD; -- . imov [imov! t0 57005]
1063 : 36DE; -- ' imoh
1064 : 5D60; --   push t0
1065 : 67D0; -- . pop [pop! t1 t0]
1066 : 66D0; -- ' pop
1067 : 2801; --   imov t2 1  # default value
1068 : 8675; --   sub  t0 t1
1069 : 206D; -- . imov [jz!  .test_global_body_0_0_operator_opskip]
106A : 3010; -- | imoh
106B : A001; -- ' j_op
106C : 2800; --   imov t2 0
106D : 5D80; -- . push [push! t2]
106E : 2625; -- . imov [load!   t0 .ret_stack_ptr]
106F : 3680; -- | imoh
1070 : 0660; -- ' load
1071 : 277B; -- . imov [imov!   t1 .test_global_body_retaddr1]
1072 : 3710; -- ' imoh
1073 : 1670; --   str     t0 t1
1074 : 9614; --   iadd    t0 1
1075 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1076 : 3080; -- | imoh
1077 : 1060; -- ' str
1078 : 20B5; -- . imov [jmp!    .assert]
1079 : 3007; -- | imoh
107A : A000; -- ' j_op
107B : 26B5; -- . imov [imov! t0 .string_alloc_65]
107C : 3602; -- ' imoh
107D : 5D60; -- . push [push! t0]
107E : 260A; -- . imov [imov! t0 10]
107F : 3600; -- ' imoh
1080 : 5D60; --   push t0
1081 : 2624; -- . imov [imov! t0 .variable_alloc_var1]
1082 : 3680; -- ' imoh
1083 : 5D60; -- . push [push! t0]
1084 : 67D0; -- . pop [pop! t1 t0]
1085 : 66D0; -- ' pop
1086 : 1760; --   str  t1 t0
1087 : 2624; -- . imov [imov! t0 .variable_alloc_var1]
1088 : 3680; -- ' imoh
1089 : 5D60; -- . push [push! t0]
108A : 66D0; -- . pop [pop! t0]
108B : 0660; --   load t0 t0
108C : 5D60; -- . push [push! t0]
108D : 260A; -- . imov [imov! t0 10]
108E : 3600; -- ' imoh
108F : 5D60; --   push t0
1090 : 67D0; -- . pop [pop! t1 t0]
1091 : 66D0; -- ' pop
1092 : 2801; --   imov t2 1  # default value
1093 : 8675; --   sub  t0 t1
1094 : 2098; -- . imov [jz!  .test_global_body_1_0_operator_opskip]
1095 : 3010; -- | imoh
1096 : A001; -- ' j_op
1097 : 2800; --   imov t2 0
1098 : 5D80; -- . push [push! t2]
1099 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
109A : 3680; -- | imoh
109B : 0660; -- ' load
109C : 27A6; -- . imov [imov!   t1 .test_global_body_retaddr2]
109D : 3710; -- ' imoh
109E : 1670; --   str     t0 t1
109F : 9614; --   iadd    t0 1
10A0 : 2025; -- . imov [str!    .ret_stack_ptr t0]
10A1 : 3080; -- | imoh
10A2 : 1060; -- ' str
10A3 : 20B5; -- . imov [jmp!    .assert]
10A4 : 3007; -- | imoh
10A5 : A000; -- ' j_op
10A6 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10A7 : 3680; -- | imoh
10A8 : 0660; -- ' load
10A9 : 9615; --   isub    t0 1
10AA : 0760; --   load    t1 t0
10AB : 2025; -- . imov [str!    .ret_stack_ptr t0]
10AC : 3080; -- | imoh
10AD : 1060; -- ' str
10AE : A700; --   jmp     t1
10AF : 2658; -- . imov [imov! t0 .string_alloc_66]
10B0 : 3603; -- ' imoh
10B1 : 5D60; -- . push [push! t0]
10B2 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10B3 : 3680; -- | imoh
10B4 : 0660; -- ' load
10B5 : 27BF; -- . imov [imov!   t1 .main_body_retaddr0]
10B6 : 3710; -- ' imoh
10B7 : 1670; --   str     t0 t1
10B8 : 9614; --   iadd    t0 1
10B9 : 2025; -- . imov [str!    .ret_stack_ptr t0]
10BA : 3080; -- | imoh
10BB : 1060; -- ' str
10BC : 2018; -- . imov [jmp!    .print_string]
10BD : 3005; -- | imoh
10BE : A000; -- ' j_op
10BF : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10C0 : 3680; -- | imoh
10C1 : 0660; -- ' load
10C2 : 27CC; -- . imov [imov!   t1 .main_body_retaddr1]
10C3 : 3710; -- ' imoh
10C4 : 1670; --   str     t0 t1
10C5 : 9614; --   iadd    t0 1
10C6 : 2025; -- . imov [str!    .ret_stack_ptr t0]
10C7 : 3080; -- | imoh
10C8 : 1060; -- ' str
10C9 : 20A9; -- . imov [jmp!    .test_sum]
10CA : 3008; -- | imoh
10CB : A000; -- ' j_op
10CC : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10CD : 3680; -- | imoh
10CE : 0660; -- ' load
10CF : 27D9; -- . imov [imov!   t1 .main_body_retaddr2]
10D0 : 3710; -- ' imoh
10D1 : 1670; --   str     t0 t1
10D2 : 9614; --   iadd    t0 1
10D3 : 2025; -- . imov [str!    .ret_stack_ptr t0]
10D4 : 3080; -- | imoh
10D5 : 1060; -- ' str
10D6 : 2028; -- . imov [jmp!    .test_arith]
10D7 : 3009; -- | imoh
10D8 : A000; -- ' j_op
10D9 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10DA : 3680; -- | imoh
10DB : 0660; -- ' load
10DC : 27E6; -- . imov [imov!   t1 .main_body_retaddr3]
10DD : 3710; -- ' imoh
10DE : 1670; --   str     t0 t1
10DF : 9614; --   iadd    t0 1
10E0 : 2025; -- . imov [str!    .ret_stack_ptr t0]
10E1 : 3080; -- | imoh
10E2 : 1060; -- ' str
10E3 : 209B; -- . imov [jmp!    .test_logical]
10E4 : 300B; -- | imoh
10E5 : A000; -- ' j_op
10E6 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10E7 : 3680; -- | imoh
10E8 : 0660; -- ' load
10E9 : 27F3; -- . imov [imov!   t1 .main_body_retaddr4]
10EA : 3710; -- ' imoh
10EB : 1670; --   str     t0 t1
10EC : 9614; --   iadd    t0 1
10ED : 2025; -- . imov [str!    .ret_stack_ptr t0]
10EE : 3080; -- | imoh
10EF : 1060; -- ' str
10F0 : 20BE; -- . imov [jmp!    .test_strlen]
10F1 : 300C; -- | imoh
10F2 : A000; -- ' j_op
10F3 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
10F4 : 3680; -- | imoh
10F5 : 0660; -- ' load
10F6 : 2700; -- . imov [imov!   t1 .main_body_retaddr5]
10F7 : 3711; -- ' imoh
10F8 : 1670; --   str     t0 t1
10F9 : 9614; --   iadd    t0 1
10FA : 2025; -- . imov [str!    .ret_stack_ptr t0]
10FB : 3080; -- | imoh
10FC : 1060; -- ' str
10FD : 202F; -- . imov [jmp!    .test_streq]
10FE : 300D; -- | imoh
10FF : A000; -- ' j_op
1100 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
1101 : 3680; -- | imoh
1102 : 0660; -- ' load
1103 : 270D; -- . imov [imov!   t1 .main_body_retaddr6]
1104 : 3711; -- ' imoh
1105 : 1670; --   str     t0 t1
1106 : 9614; --   iadd    t0 1
1107 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1108 : 3080; -- | imoh
1109 : 1060; -- ' str
110A : 2044; -- . imov [jmp!    .test_let]
110B : 300E; -- | imoh
110C : A000; -- ' j_op
110D : 2625; -- . imov [load!   t0 .ret_stack_ptr]
110E : 3680; -- | imoh
110F : 0660; -- ' load
1110 : 271A; -- . imov [imov!   t1 .main_body_retaddr7]
1111 : 3711; -- ' imoh
1112 : 1670; --   str     t0 t1
1113 : 9614; --   iadd    t0 1
1114 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1115 : 3080; -- | imoh
1116 : 1060; -- ' str
1117 : 2074; -- . imov [jmp!    .test_mul]
1118 : 300F; -- | imoh
1119 : A000; -- ' j_op
111A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
111B : 3680; -- | imoh
111C : 0660; -- ' load
111D : 2727; -- . imov [imov!   t1 .main_body_retaddr8]
111E : 3711; -- ' imoh
111F : 1670; --   str     t0 t1
1120 : 9614; --   iadd    t0 1
1121 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1122 : 3080; -- | imoh
1123 : 1060; -- ' str
1124 : 2049; -- . imov [jmp!    .test_global]
1125 : 3010; -- | imoh
1126 : A000; -- ' j_op
1127 : 2610; -- . imov [imov! t0 .string_alloc_67]
1128 : 3603; -- ' imoh
1129 : 5D60; -- . push [push! t0]
112A : 2625; -- . imov [load!   t0 .ret_stack_ptr]
112B : 3680; -- | imoh
112C : 0660; -- ' load
112D : 2737; -- . imov [imov!   t1 .main_body_retaddr9]
112E : 3711; -- ' imoh
112F : 1670; --   str     t0 t1
1130 : 9614; --   iadd    t0 1
1131 : 2025; -- . imov [str!    .ret_stack_ptr t0]
1132 : 3080; -- | imoh
1133 : 1060; -- ' str
1134 : 2018; -- . imov [jmp!    .print_string]
1135 : 3005; -- | imoh
1136 : A000; -- ' j_op
1137 : 2625; -- . imov [load!   t0 .ret_stack_ptr]
1138 : 3680; -- | imoh
1139 : 0660; -- ' load
113A : 9615; --   isub    t0 1
113B : 0760; --   load    t1 t0
113C : 2025; -- . imov [str!    .ret_stack_ptr t0]
113D : 3080; -- | imoh
113E : 1060; -- ' str
113F : A700; --   jmp     t1
END;