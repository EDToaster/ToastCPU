DEPTH = 32768;                -- The size of memory in words
WIDTH = 16;                   -- The size of data in bits
ADDRESS_RADIX = HEX;          -- The radix for address values
DATA_RADIX = HEX;             -- The radix for data values
CONTENT                       -- start of (address : data pairs)
BEGIN
0000 : 2C26; -- . imov [imov!   isr .isr]
0001 : 3C03; -- ' imoh
0002 : 2603; -- . imov [imov!   t0 .ret_stack]
0003 : 3680; -- ' imoh
0004 : 2711; -- . imov [imov!   t1 .reset_ret]
0005 : 3700; -- ' imoh
0006 : 1670; --   str     t0 t1
0007 : 9614; --   iadd    t0 1
0008 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0009 : 3080; -- | imoh
000A : 1060; -- ' str
000B : 2012; -- . imov r0 .init_globals  [call!   .init_globals]
000C : 3000; -- | imoh r0 .init_globals
000D : A010; -- ' jmpl
000E : 2043; -- . imov [jmp!    .main]
000F : 3003; -- | imoh
0010 : A000; -- ' j_op
0011 : 7000; --   halt
0012 : 5D60; -- . push [push! t0]
0013 : 2664; -- . imov [imov!  t0 100]
0014 : 3600; -- ' imoh
0015 : 2000; -- . imov [str!   .variable_alloc_text_progress t0]
0016 : 3080; -- | imoh
0017 : 1060; -- ' str
0018 : 2600; -- . imov [imov!  t0 0]
0019 : 3600; -- ' imoh
001A : 2001; -- . imov [str!   .variable_alloc_text_ptr t0]
001B : 3080; -- | imoh
001C : 1060; -- ' str
001D : 66D0; -- . pop [pop! t0]
001E : A020; --   jmpr
001F : 5D00; -- Â· push r0 [isr!]
0020 : 60D0; -- . pop r0 [rti!]
0021 : C000; -- ' rti
0022 : 0020; -- 0x20
0023 : 0020; -- 0x20
0024 : 0020; -- 0x20
0025 : 0020; -- 0x20
0026 : 0020; -- 0x20
0027 : 0020; -- 0x20
0028 : 0020; -- 0x20
0029 : 0020; -- 0x20
002A : 0020; -- 0x20
002B : 0020; -- 0x20
002C : 0020; -- 0x20
002D : 0020; -- 0x20
002E : 0020; -- 0x20
002F : 0020; -- 0x20
0030 : 0060; -- 0x60
0031 : 0020; -- 0x20
0032 : 0020; -- 0x20
0033 : 0020; -- 0x20
0034 : 0020; -- 0x20
0035 : 0020; -- 0x20
0036 : 0020; -- 0x20
0037 : 0071; -- 0x71
0038 : 0031; -- 0x31
0039 : 0020; -- 0x20
003A : 0020; -- 0x20
003B : 0020; -- 0x20
003C : 007A; -- 0x7A
003D : 0073; -- 0x73
003E : 0061; -- 0x61
003F : 0077; -- 0x77
0040 : 0032; -- 0x32
0041 : 0020; -- 0x20
0042 : 0020; -- 0x20
0043 : 0063; -- 0x63
0044 : 0078; -- 0x78
0045 : 0064; -- 0x64
0046 : 0065; -- 0x65
0047 : 0034; -- 0x34
0048 : 0033; -- 0x33
0049 : 0020; -- 0x20
004A : 0020; -- 0x20
004B : 0020; -- 0x20
004C : 0076; -- 0x76
004D : 0066; -- 0x66
004E : 0074; -- 0x74
004F : 0072; -- 0x72
0050 : 0035; -- 0x35
0051 : 0020; -- 0x20
0052 : 0020; -- 0x20
0053 : 006E; -- 0x6E
0054 : 0062; -- 0x62
0055 : 0068; -- 0x68
0056 : 0067; -- 0x67
0057 : 0079; -- 0x79
0058 : 0036; -- 0x36
0059 : 0020; -- 0x20
005A : 0020; -- 0x20
005B : 0020; -- 0x20
005C : 006D; -- 0x6D
005D : 006A; -- 0x6A
005E : 0075; -- 0x75
005F : 0037; -- 0x37
0060 : 0038; -- 0x38
0061 : 0020; -- 0x20
0062 : 0020; -- 0x20
0063 : 002C; -- 0x2C
0064 : 006B; -- 0x6B
0065 : 0069; -- 0x69
0066 : 006F; -- 0x6F
0067 : 0030; -- 0x30
0068 : 0039; -- 0x39
0069 : 0020; -- 0x20
006A : 0020; -- 0x20
006B : 002E; -- 0x2E
006C : 002F; -- 0x2F
006D : 006C; -- 0x6C
006E : 003B; -- 0x3B
006F : 0070; -- 0x70
0070 : 002D; -- 0x2D
0071 : 0020; -- 0x20
0072 : 0020; -- 0x20
0073 : 0020; -- 0x20
0074 : 0020; -- 0x20
0075 : 0020; -- 0x20
0076 : 005B; -- 0x5B
0077 : 003D; -- 0x3D
0078 : 0020; -- 0x20
0079 : 0020; -- 0x20
007A : 0020; -- 0x20
007B : 0020; -- 0x20
007C : 000A; -- 0xA
007D : 005D; -- 0x5D
007E : 0020; -- 0x20
007F : 005C; -- 0x5C
0080 : 0020; -- 0x20
0081 : 0020; -- 0x20
0082 : 0020; -- 0x20
0083 : 0020; -- 0x20
0084 : 0020; -- 0x20
0085 : 0020; -- 0x20
0086 : 0020; -- 0x20
0087 : 0020; -- 0x20
0088 : 0020; -- 0x20
0089 : 0020; -- 0x20
008A : 0020; -- 0x20
008B : 0020; -- 0x20
008C : 0020; -- 0x20
008D : 0020; -- 0x20
008E : 0020; -- 0x20
008F : 0020; -- 0x20
0090 : 0020; -- 0x20
0091 : 0020; -- 0x20
0092 : 0020; -- 0x20
0093 : 0020; -- 0x20
0094 : 0020; -- 0x20
0095 : 0020; -- 0x20
0096 : 0020; -- 0x20
0097 : 0020; -- 0x20
0098 : 0020; -- 0x20
0099 : 0020; -- 0x20
009A : 0020; -- 0x20
009B : 0020; -- 0x20
009C : 0020; -- 0x20
009D : 0020; -- 0x20
009E : 0020; -- 0x20
009F : 0020; -- 0x20
00A0 : 0020; -- 0x20
00A1 : 0020; -- 0x20
00A2 : 0020; -- 0x20
00A3 : 0020; -- 0x20
00A4 : 0020; -- 0x20
00A5 : 0020; -- 0x20
00A6 : 0020; -- 0x20
00A7 : 0020; -- 0x20
00A8 : 0020; -- 0x20
00A9 : 0020; -- 0x20
00AA : 0020; -- 0x20
00AB : 0020; -- 0x20
00AC : 0020; -- 0x20
00AD : 0020; -- 0x20
00AE : 0020; -- 0x20
00AF : 0020; -- 0x20
00B0 : 0020; -- 0x20
00B1 : 0020; -- 0x20
00B2 : 0020; -- 0x20
00B3 : 0020; -- 0x20
00B4 : 0020; -- 0x20
00B5 : 0020; -- 0x20
00B6 : 0020; -- 0x20
00B7 : 0020; -- 0x20
00B8 : 0020; -- 0x20
00B9 : 0020; -- 0x20
00BA : 0020; -- 0x20
00BB : 0020; -- 0x20
00BC : 0020; -- 0x20
00BD : 0020; -- 0x20
00BE : 0020; -- 0x20
00BF : 0020; -- 0x20
00C0 : 0020; -- 0x20
00C1 : 0020; -- 0x20
00C2 : 0020; -- 0x20
00C3 : 0020; -- 0x20
00C4 : 0020; -- 0x20
00C5 : 0020; -- 0x20
00C6 : 0020; -- 0x20
00C7 : 0020; -- 0x20
00C8 : 0020; -- 0x20
00C9 : 0020; -- 0x20
00CA : 0020; -- 0x20
00CB : 0020; -- 0x20
00CC : 0020; -- 0x20
00CD : 0020; -- 0x20
00CE : 0020; -- 0x20
00CF : 0020; -- 0x20
00D0 : 0020; -- 0x20
00D1 : 0020; -- 0x20
00D2 : 0020; -- 0x20
00D3 : 0020; -- 0x20
00D4 : 0020; -- 0x20
00D5 : 0020; -- 0x20
00D6 : 0020; -- 0x20
00D7 : 0020; -- 0x20
00D8 : 0020; -- 0x20
00D9 : 0020; -- 0x20
00DA : 0020; -- 0x20
00DB : 0020; -- 0x20
00DC : 0020; -- 0x20
00DD : 0020; -- 0x20
00DE : 0020; -- 0x20
00DF : 0020; -- 0x20
00E0 : 0020; -- 0x20
00E1 : 0020; -- 0x20
00E2 : 0020; -- 0x20
00E3 : 0020; -- 0x20
00E4 : 0020; -- 0x20
00E5 : 0020; -- 0x20
00E6 : 0020; -- 0x20
00E7 : 0020; -- 0x20
00E8 : 0020; -- 0x20
00E9 : 0020; -- 0x20
00EA : 0020; -- 0x20
00EB : 0020; -- 0x20
00EC : 0020; -- 0x20
00ED : 0020; -- 0x20
00EE : 0020; -- 0x20
00EF : 0020; -- 0x20
00F0 : 0020; -- 0x20
00F1 : 0020; -- 0x20
00F2 : 0020; -- 0x20
00F3 : 0020; -- 0x20
00F4 : 0020; -- 0x20
00F5 : 0020; -- 0x20
00F6 : 0020; -- 0x20
00F7 : 0020; -- 0x20
00F8 : 0020; -- 0x20
00F9 : 0020; -- 0x20
00FA : 0020; -- 0x20
00FB : 0020; -- 0x20
00FC : 0020; -- 0x20
00FD : 0020; -- 0x20
00FE : 0020; -- 0x20
00FF : 0020; -- 0x20
0100 : 0020; -- 0x20
0101 : 0020; -- 0x20
0102 : 0020; -- 0x20
0103 : 0020; -- 0x20
0104 : 0020; -- 0x20
0105 : 0020; -- 0x20
0106 : 0020; -- 0x20
0107 : 0020; -- 0x20
0108 : 0020; -- 0x20
0109 : 0020; -- 0x20
010A : 0020; -- 0x20
010B : 0020; -- 0x20
010C : 0020; -- 0x20
010D : 0020; -- 0x20
010E : 0020; -- 0x20
010F : 0020; -- 0x20
0110 : 0020; -- 0x20
0111 : 0020; -- 0x20
0112 : 0020; -- 0x20
0113 : 0020; -- 0x20
0114 : 0020; -- 0x20
0115 : 0020; -- 0x20
0116 : 0020; -- 0x20
0117 : 0020; -- 0x20
0118 : 0020; -- 0x20
0119 : 0020; -- 0x20
011A : 0020; -- 0x20
011B : 0020; -- 0x20
011C : 0020; -- 0x20
011D : 0020; -- 0x20
011E : 0020; -- 0x20
011F : 0020; -- 0x20
0120 : 0020; -- 0x20
0121 : 0020; -- 0x20
0122 : 0000; -- 0x0
0123 : 66D0; -- . pop [pop! t0]
0124 : 5D60; -- . push [push! t0 t0]
0125 : 5D60; -- ' push
0126 : 260A; -- . imov [imov! t0 10]
0127 : 3600; -- ' imoh
0128 : 5D60; --   push t0
0129 : 67D0; -- . pop [pop! t1 t0]
012A : 66D0; -- ' pop
012B : 2801; --   imov t2 1  # default value
012C : 8675; --   sub  t0 t1
012D : 2031; -- . imov [jz!  .print_char_body_0_operator_opskip]
012E : 3001; -- | imoh
012F : A001; -- ' j_op
0130 : 2800; --   imov t2 0
0131 : 5D80; -- . push [push! t2]
0132 : 66D0; -- . pop [pop! t0]
0133 : 9607; --   tst  t0
0134 : 205A; -- . imov [jz!  .print_char_body_1_else]
0135 : 3001; -- | imoh
0136 : A001; -- ' j_op
0137 : 66D0; -- . pop [pop! t0]
0138 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0139 : 3680; -- ' imoh
013A : 5D60; -- . push [push! t0]
013B : 66D0; -- . pop [pop! t0]
013C : 0660; --   load t0 t0
013D : 5D60; -- . push [push! t0]
013E : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
013F : 3680; -- ' imoh
0140 : 5D60; -- . push [push! t0]
0141 : 66D0; -- . pop [pop! t0]
0142 : 0660; --   load t0 t0
0143 : 5D60; -- . push [push! t0]
0144 : 67D0; -- . pop [pop!  t1 t0]
0145 : 66D0; -- ' pop
0146 : 8674; --   add   t0 t1
0147 : 5D60; -- . push [push! t0]
0148 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
0149 : 3680; -- ' imoh
014A : 5D60; -- . push [push! t0]
014B : 67D0; -- . pop [pop! t1 t0]
014C : 66D0; -- ' pop
014D : 1760; --   str  t1 t0
014E : 2664; -- . imov [imov! t0 100]
014F : 3600; -- ' imoh
0150 : 5D60; --   push t0
0151 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
0152 : 3680; -- ' imoh
0153 : 5D60; -- . push [push! t0]
0154 : 67D0; -- . pop [pop! t1 t0]
0155 : 66D0; -- ' pop
0156 : 1760; --   str  t1 t0
0157 : 20AE; -- . imov [jmp! .print_char_body_1_if_exit]
0158 : 3001; -- | imoh
0159 : A000; -- ' j_op
015A : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
015B : 3680; -- ' imoh
015C : 5D60; -- . push [push! t0]
015D : 66D0; -- . pop [pop! t0]
015E : 0660; --   load t0 t0
015F : 5D60; -- . push [push! t0]
0160 : 66D0; -- . pop [pop! t0 t1]
0161 : 67D0; -- ' pop
0162 : 5D60; -- . push [push! t0 t1]
0163 : 5D70; -- ' push
0164 : 2600; -- . imov [imov! t0 14336]
0165 : 3638; -- ' imoh
0166 : 5D60; --   push t0
0167 : 67D0; -- . pop [pop!  t1 t0]
0168 : 66D0; -- ' pop
0169 : 8672; --   or    t0 t1
016A : 5D60; -- . push [push! t0]
016B : 66D0; -- . pop [pop! t0 t1]
016C : 67D0; -- ' pop
016D : 5D70; -- . push [push! t1 t0 t1]
016E : 5D60; -- | push
016F : 5D70; -- ' push
0170 : 67D0; -- . pop [pop! t1 t0]
0171 : 66D0; -- ' pop
0172 : 1760; --   str  t1 t0
0173 : 2601; -- . imov [imov! t0 1]
0174 : 3600; -- ' imoh
0175 : 5D60; --   push t0
0176 : 67D0; -- . pop [pop!  t1 t0]
0177 : 66D0; -- ' pop
0178 : 8674; --   add   t0 t1
0179 : 5D60; -- . push [push! t0]
017A : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
017B : 3680; -- ' imoh
017C : 5D60; -- . push [push! t0]
017D : 67D0; -- . pop [pop! t1 t0]
017E : 66D0; -- ' pop
017F : 1760; --   str  t1 t0
0180 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
0181 : 3680; -- ' imoh
0182 : 5D60; -- . push [push! t0]
0183 : 66D0; -- . pop [pop! t0]
0184 : 0660; --   load t0 t0
0185 : 5D60; -- . push [push! t0]
0186 : 2601; -- . imov [imov! t0 1]
0187 : 3600; -- ' imoh
0188 : 5D60; --   push t0
0189 : 67D0; -- . pop [pop!  t1 t0]
018A : 66D0; -- ' pop
018B : 8675; --   sub   t0 t1
018C : 5D60; -- . push [push! t0]
018D : 66D0; -- . pop [pop! t0]
018E : 5D60; -- . push [push! t0 t0]
018F : 5D60; -- ' push
0190 : 2600; -- . imov [imov! t0 0]
0191 : 3600; -- ' imoh
0192 : 5D60; --   push t0
0193 : 67D0; -- . pop [pop! t1 t0]
0194 : 66D0; -- ' pop
0195 : 2801; --   imov t2 1  # default value
0196 : 8675; --   sub  t0 t1
0197 : 209B; -- . imov [jz!  .print_char_body_1_else_3_operator_opskip]
0198 : 3001; -- | imoh
0199 : A001; -- ' j_op
019A : 2800; --   imov t2 0
019B : 5D80; -- . push [push! t2]
019C : 66D0; -- . pop [pop! t0]
019D : 9607; --   tst  t0
019E : 20A8; -- . imov [jz!  .print_char_body_1_else_4_else]
019F : 3001; -- | imoh
01A0 : A001; -- ' j_op
01A1 : 66D0; -- . pop [pop! t0]
01A2 : 2664; -- . imov [imov! t0 100]
01A3 : 3600; -- ' imoh
01A4 : 5D60; --   push t0
01A5 : 20A8; -- . imov [jmp! .print_char_body_1_else_4_if_exit]
01A6 : 3001; -- | imoh
01A7 : A000; -- ' j_op
01A8 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
01A9 : 3680; -- ' imoh
01AA : 5D60; -- . push [push! t0]
01AB : 67D0; -- . pop [pop! t1 t0]
01AC : 66D0; -- ' pop
01AD : 1760; --   str  t1 t0
01AE : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
01AF : 3680; -- ' imoh
01B0 : 5D60; -- . push [push! t0]
01B1 : 66D0; -- . pop [pop! t0]
01B2 : 0660; --   load t0 t0
01B3 : 5D60; -- . push [push! t0]
01B4 : 2670; -- . imov [imov! t0 6000]
01B5 : 3617; -- ' imoh
01B6 : 5D60; --   push t0
01B7 : 67D0; -- . pop [pop! t1 t0]
01B8 : 66D0; -- ' pop
01B9 : 2800; --   imov t2 0  # default value
01BA : 8675; --   sub  t0 t1
01BB : 20BF; -- . imov [jn!  .print_char_body_3_operator_opskip]
01BC : 3001; -- | imoh
01BD : A003; -- ' j_op
01BE : 2801; --   imov t2 1
01BF : 5D80; -- . push [push! t2]
01C0 : 66D0; -- . pop [pop! t0]
01C1 : 9607; --   tst  t0
01C2 : 20DB; -- . imov [jz!  .print_char_body_4_else]
01C3 : 3001; -- | imoh
01C4 : A001; -- ' j_op
01C5 : 7000; --   halt
01C6 : 2600; -- . imov [imov! t0 0]
01C7 : 3600; -- ' imoh
01C8 : 5D60; --   push t0
01C9 : 2601; -- . imov [imov! t0 .variable_alloc_text_ptr]
01CA : 3680; -- ' imoh
01CB : 5D60; -- . push [push! t0]
01CC : 67D0; -- . pop [pop! t1 t0]
01CD : 66D0; -- ' pop
01CE : 1760; --   str  t1 t0
01CF : 2664; -- . imov [imov! t0 100]
01D0 : 3600; -- ' imoh
01D1 : 5D60; --   push t0
01D2 : 2600; -- . imov [imov! t0 .variable_alloc_text_progress]
01D3 : 3680; -- ' imoh
01D4 : 5D60; -- . push [push! t0]
01D5 : 67D0; -- . pop [pop! t1 t0]
01D6 : 66D0; -- ' pop
01D7 : 1760; --   str  t1 t0
01D8 : 20DB; -- . imov [jmp! .print_char_body_4_if_exit]
01D9 : 3001; -- | imoh
01DA : A000; -- ' j_op
01DB : 2602; -- . imov [load!   t0 .ret_stack_ptr]
01DC : 3680; -- | imoh
01DD : 0660; -- ' load
01DE : 9615; --   isub    t0 1
01DF : 0760; --   load    t1 t0
01E0 : 2002; -- . imov [str!    .ret_stack_ptr t0]
01E1 : 3080; -- | imoh
01E2 : 1060; -- ' str
01E3 : A700; --   jmp     t1
01E4 : 66D0; -- . pop [pop! t0]
01E5 : 5D60; -- . push [push! t0 t0]
01E6 : 5D60; -- ' push
01E7 : 260A; -- . imov [imov! t0 10]
01E8 : 3600; -- ' imoh
01E9 : 5D60; --   push t0
01EA : 67D0; -- . pop [pop! t1 t0]
01EB : 66D0; -- ' pop
01EC : 2801; --   imov t2 1  # default value
01ED : 8675; --   sub  t0 t1
01EE : 20F2; -- . imov [jn!  .print_hex_body_0_operator_opskip]
01EF : 3001; -- | imoh
01F0 : A003; -- ' j_op
01F1 : 2800; --   imov t2 0
01F2 : 5D80; -- . push [push! t2]
01F3 : 66D0; -- . pop [pop! t0]
01F4 : 9607; --   tst  t0
01F5 : 200F; -- . imov [jz!  .print_hex_body_1_else]
01F6 : 3002; -- | imoh
01F7 : A001; -- ' j_op
01F8 : 2630; -- . imov [imov! t0 48]
01F9 : 3600; -- ' imoh
01FA : 5D60; --   push t0
01FB : 67D0; -- . pop [pop!  t1 t0]
01FC : 66D0; -- ' pop
01FD : 8674; --   add   t0 t1
01FE : 5D60; -- . push [push! t0]
01FF : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0200 : 3680; -- | imoh
0201 : 0660; -- ' load
0202 : 270C; -- . imov [imov!   t1 .print_hex_body_1_if_retaddr0]
0203 : 3702; -- ' imoh
0204 : 1670; --   str     t0 t1
0205 : 9614; --   iadd    t0 1
0206 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0207 : 3080; -- | imoh
0208 : 1060; -- ' str
0209 : 2023; -- . imov [jmp!    .print_char]
020A : 3001; -- | imoh
020B : A000; -- ' j_op
020C : 202A; -- . imov [jmp! .print_hex_body_1_if_exit]
020D : 3002; -- | imoh
020E : A000; -- ' j_op
020F : 260A; -- . imov [imov! t0 10]
0210 : 3600; -- ' imoh
0211 : 5D60; --   push t0
0212 : 67D0; -- . pop [pop!  t1 t0]
0213 : 66D0; -- ' pop
0214 : 8675; --   sub   t0 t1
0215 : 5D60; -- . push [push! t0]
0216 : 2641; -- . imov [imov! t0 65]
0217 : 3600; -- ' imoh
0218 : 5D60; --   push t0
0219 : 67D0; -- . pop [pop!  t1 t0]
021A : 66D0; -- ' pop
021B : 8674; --   add   t0 t1
021C : 5D60; -- . push [push! t0]
021D : 2602; -- . imov [load!   t0 .ret_stack_ptr]
021E : 3680; -- | imoh
021F : 0660; -- ' load
0220 : 272A; -- . imov [imov!   t1 .print_hex_body_1_else_retaddr0]
0221 : 3702; -- ' imoh
0222 : 1670; --   str     t0 t1
0223 : 9614; --   iadd    t0 1
0224 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0225 : 3080; -- | imoh
0226 : 1060; -- ' str
0227 : 2023; -- . imov [jmp!    .print_char]
0228 : 3001; -- | imoh
0229 : A000; -- ' j_op
022A : 2602; -- . imov [load!   t0 .ret_stack_ptr]
022B : 3680; -- | imoh
022C : 0660; -- ' load
022D : 9615; --   isub    t0 1
022E : 0760; --   load    t1 t0
022F : 2002; -- . imov [str!    .ret_stack_ptr t0]
0230 : 3080; -- | imoh
0231 : 1060; -- ' str
0232 : A700; --   jmp     t1
0233 : 66D0; -- . pop [pop! t0]
0234 : 5D60; -- . push [push! t0 t0]
0235 : 5D60; -- ' push
0236 : 2604; -- . imov [imov! t0 4]
0237 : 3600; -- ' imoh
0238 : 5D60; --   push t0
0239 : 67D0; -- . pop [pop!  t1 t0]
023A : 66D0; -- ' pop
023B : 8679; --   sshr  t0 t1
023C : 5D60; -- . push [push! t0]
023D : 260F; -- . imov [imov! t0 15]
023E : 3600; -- ' imoh
023F : 5D60; --   push t0
0240 : 67D0; -- . pop [pop!  t1 t0]
0241 : 66D0; -- ' pop
0242 : 8671; --   and   t0 t1
0243 : 5D60; -- . push [push! t0]
0244 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0245 : 3680; -- | imoh
0246 : 0660; -- ' load
0247 : 2751; -- . imov [imov!   t1 .print_nibble_body_retaddr0]
0248 : 3702; -- ' imoh
0249 : 1670; --   str     t0 t1
024A : 9614; --   iadd    t0 1
024B : 2002; -- . imov [str!    .ret_stack_ptr t0]
024C : 3080; -- | imoh
024D : 1060; -- ' str
024E : 20E4; -- . imov [jmp!    .print_hex]
024F : 3001; -- | imoh
0250 : A000; -- ' j_op
0251 : 66D0; -- . pop [pop! t0]
0252 : 5D60; -- . push [push! t0 t0]
0253 : 5D60; -- ' push
0254 : 260F; -- . imov [imov! t0 15]
0255 : 3600; -- ' imoh
0256 : 5D60; --   push t0
0257 : 67D0; -- . pop [pop!  t1 t0]
0258 : 66D0; -- ' pop
0259 : 8671; --   and   t0 t1
025A : 5D60; -- . push [push! t0]
025B : 2602; -- . imov [load!   t0 .ret_stack_ptr]
025C : 3680; -- | imoh
025D : 0660; -- ' load
025E : 2768; -- . imov [imov!   t1 .print_nibble_body_retaddr1]
025F : 3702; -- ' imoh
0260 : 1670; --   str     t0 t1
0261 : 9614; --   iadd    t0 1
0262 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0263 : 3080; -- | imoh
0264 : 1060; -- ' str
0265 : 20E4; -- . imov [jmp!    .print_hex]
0266 : 3001; -- | imoh
0267 : A000; -- ' j_op
0268 : 66D0; -- . pop [pop! t0]
0269 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
026A : 3680; -- | imoh
026B : 0660; -- ' load
026C : 9615; --   isub    t0 1
026D : 0760; --   load    t1 t0
026E : 2002; -- . imov [str!    .ret_stack_ptr t0]
026F : 3080; -- | imoh
0270 : 1060; -- ' str
0271 : A700; --   jmp     t1
0272 : 66D0; -- . pop [pop! t0]
0273 : 5D60; -- . push [push! t0 t0]
0274 : 5D60; -- ' push
0275 : 2608; -- . imov [imov! t0 8]
0276 : 3600; -- ' imoh
0277 : 5D60; --   push t0
0278 : 67D0; -- . pop [pop!  t1 t0]
0279 : 66D0; -- ' pop
027A : 8679; --   sshr  t0 t1
027B : 5D60; -- . push [push! t0]
027C : 26FF; -- . imov [imov! t0 255]
027D : 3600; -- ' imoh
027E : 5D60; --   push t0
027F : 67D0; -- . pop [pop!  t1 t0]
0280 : 66D0; -- ' pop
0281 : 8671; --   and   t0 t1
0282 : 5D60; -- . push [push! t0]
0283 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0284 : 3680; -- | imoh
0285 : 0660; -- ' load
0286 : 2790; -- . imov [imov!   t1 .print_word_body_retaddr0]
0287 : 3702; -- ' imoh
0288 : 1670; --   str     t0 t1
0289 : 9614; --   iadd    t0 1
028A : 2002; -- . imov [str!    .ret_stack_ptr t0]
028B : 3080; -- | imoh
028C : 1060; -- ' str
028D : 2033; -- . imov [jmp!    .print_nibble]
028E : 3002; -- | imoh
028F : A000; -- ' j_op
0290 : 66D0; -- . pop [pop! t0]
0291 : 5D60; -- . push [push! t0 t0]
0292 : 5D60; -- ' push
0293 : 26FF; -- . imov [imov! t0 255]
0294 : 3600; -- ' imoh
0295 : 5D60; --   push t0
0296 : 67D0; -- . pop [pop!  t1 t0]
0297 : 66D0; -- ' pop
0298 : 8671; --   and   t0 t1
0299 : 5D60; -- . push [push! t0]
029A : 2602; -- . imov [load!   t0 .ret_stack_ptr]
029B : 3680; -- | imoh
029C : 0660; -- ' load
029D : 27A7; -- . imov [imov!   t1 .print_word_body_retaddr1]
029E : 3702; -- ' imoh
029F : 1670; --   str     t0 t1
02A0 : 9614; --   iadd    t0 1
02A1 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02A2 : 3080; -- | imoh
02A3 : 1060; -- ' str
02A4 : 2033; -- . imov [jmp!    .print_nibble]
02A5 : 3002; -- | imoh
02A6 : A000; -- ' j_op
02A7 : 66D0; -- . pop [pop! t0]
02A8 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02A9 : 3680; -- | imoh
02AA : 0660; -- ' load
02AB : 9615; --   isub    t0 1
02AC : 0760; --   load    t1 t0
02AD : 2002; -- . imov [str!    .ret_stack_ptr t0]
02AE : 3080; -- | imoh
02AF : 1060; -- ' str
02B0 : A700; --   jmp     t1
02B1 : 66D0; -- . pop [pop! t0]
02B2 : 5D60; -- . push [push! t0 t0]
02B3 : 5D60; -- ' push
02B4 : 66D0; -- . pop [pop! t0]
02B5 : 0660; --   load t0 t0
02B6 : 5D60; -- . push [push! t0]
02B7 : 66D0; -- . pop [pop! t0]
02B8 : 5D60; -- . push [push! t0 t0]
02B9 : 5D60; -- ' push
02BA : 66D0; -- . pop [pop! t0]
02BB : 9607; --   tst  t0
02BC : 20D9; -- . imov [jz!  .print_string_body_0_while_exit]
02BD : 3002; -- | imoh
02BE : A001; -- ' j_op
02BF : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02C0 : 3680; -- | imoh
02C1 : 0660; -- ' load
02C2 : 27CC; -- . imov [imov!   t1 .print_string_body_0_while_block_retaddr0]
02C3 : 3702; -- ' imoh
02C4 : 1670; --   str     t0 t1
02C5 : 9614; --   iadd    t0 1
02C6 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02C7 : 3080; -- | imoh
02C8 : 1060; -- ' str
02C9 : 2023; -- . imov [jmp!    .print_char]
02CA : 3001; -- | imoh
02CB : A000; -- ' j_op
02CC : 2601; -- . imov [imov! t0 1]
02CD : 3600; -- ' imoh
02CE : 5D60; --   push t0
02CF : 67D0; -- . pop [pop!  t1 t0]
02D0 : 66D0; -- ' pop
02D1 : 8674; --   add   t0 t1
02D2 : 5D60; -- . push [push! t0]
02D3 : 66D0; -- . pop [pop! t0]
02D4 : 5D60; -- . push [push! t0 t0]
02D5 : 5D60; -- ' push
02D6 : 20B4; -- . imov [jmp! .print_string_body_0_while_eval]
02D7 : 3002; -- | imoh
02D8 : A000; -- ' j_op
02D9 : 66D0; -- . pop [pop! t0]
02DA : 66D0; -- . pop [pop! t0]
02DB : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02DC : 3680; -- | imoh
02DD : 0660; -- ' load
02DE : 9615; --   isub    t0 1
02DF : 0760; --   load    t1 t0
02E0 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02E1 : 3080; -- | imoh
02E2 : 1060; -- ' str
02E3 : A700; --   jmp     t1
02E4 : 2622; -- . imov [imov! t0 .string_alloc_0]
02E5 : 3600; -- ' imoh
02E6 : 5D60; -- . push [push! t0]
02E7 : 26FF; -- . imov [imov! t0 65535]
02E8 : 36FF; -- ' imoh
02E9 : 5D60; --   push t0
02EA : 66D0; -- . pop [pop! t0]
02EB : 0660; --   load t0 t0
02EC : 5D60; -- . push [push! t0]
02ED : 67D0; -- . pop [pop!  t1 t0]
02EE : 66D0; -- ' pop
02EF : 8674; --   add   t0 t1
02F0 : 5D60; -- . push [push! t0]
02F1 : 66D0; -- . pop [pop! t0]
02F2 : 0660; --   load t0 t0
02F3 : 5D60; -- . push [push! t0]
02F4 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
02F5 : 3680; -- | imoh
02F6 : 0660; -- ' load
02F7 : 9615; --   isub    t0 1
02F8 : 0760; --   load    t1 t0
02F9 : 2002; -- . imov [str!    .ret_stack_ptr t0]
02FA : 3080; -- | imoh
02FB : 1060; -- ' str
02FC : A700; --   jmp     t1
02FD : 66D0; -- . pop [pop! t0]
02FE : 5D60; -- . push [push! t0 t0]
02FF : 5D60; -- ' push
0300 : 66D0; -- . pop [pop! t0]
0301 : 5D60; -- . push [push! t0 t0]
0302 : 5D60; -- ' push
0303 : 66D0; -- . pop [pop! t0]
0304 : 0660; --   load t0 t0
0305 : 5D60; -- . push [push! t0]
0306 : 66D0; -- . pop [pop! t0]
0307 : 9607; --   tst  t0
0308 : 2015; -- . imov [jz!  .strlen_body_0_while_exit]
0309 : 3003; -- | imoh
030A : A001; -- ' j_op
030B : 2601; -- . imov [imov! t0 1]
030C : 3600; -- ' imoh
030D : 5D60; --   push t0
030E : 67D0; -- . pop [pop!  t1 t0]
030F : 66D0; -- ' pop
0310 : 8674; --   add   t0 t1
0311 : 5D60; -- . push [push! t0]
0312 : 2000; -- . imov [jmp! .strlen_body_0_while_eval]
0313 : 3003; -- | imoh
0314 : A000; -- ' j_op
0315 : 66D0; -- . pop [pop! t0 t1]
0316 : 67D0; -- ' pop
0317 : 5D60; -- . push [push! t0 t1]
0318 : 5D70; -- ' push
0319 : 67D0; -- . pop [pop!  t1 t0]
031A : 66D0; -- ' pop
031B : 8675; --   sub   t0 t1
031C : 5D60; -- . push [push! t0]
031D : 2602; -- . imov [load!   t0 .ret_stack_ptr]
031E : 3680; -- | imoh
031F : 0660; -- ' load
0320 : 9615; --   isub    t0 1
0321 : 0760; --   load    t1 t0
0322 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0323 : 3080; -- | imoh
0324 : 1060; -- ' str
0325 : A700; --   jmp     t1
0326 : 5D00; -- Â· push r0 [isr!]
0327 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0328 : 3680; -- | imoh
0329 : 0660; -- ' load
032A : 2734; -- . imov [imov!   t1 .isr_body_retaddr0]
032B : 3703; -- ' imoh
032C : 1670; --   str     t0 t1
032D : 9614; --   iadd    t0 1
032E : 2002; -- . imov [str!    .ret_stack_ptr t0]
032F : 3080; -- | imoh
0330 : 1060; -- ' str
0331 : 20E4; -- . imov [jmp!    .get_keyboard_ascii]
0332 : 3002; -- | imoh
0333 : A000; -- ' j_op
0334 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0335 : 3680; -- | imoh
0336 : 0660; -- ' load
0337 : 2741; -- . imov [imov!   t1 .isr_body_retaddr1]
0338 : 3703; -- ' imoh
0339 : 1670; --   str     t0 t1
033A : 9614; --   iadd    t0 1
033B : 2002; -- . imov [str!    .ret_stack_ptr t0]
033C : 3080; -- | imoh
033D : 1060; -- ' str
033E : 2023; -- . imov [jmp!    .print_char]
033F : 3001; -- | imoh
0340 : A000; -- ' j_op
0341 : 60D0; -- . pop r0 [rti!]
0342 : C000; -- ' rti
0343 : 2601; -- . imov [imov! t0 1]
0344 : 3600; -- ' imoh
0345 : 5D60; --   push t0
0346 : 66D0; -- . pop [pop! t0]
0347 : 5D60; -- . push [push! t0 t0]
0348 : 5D60; -- ' push
0349 : 66D0; -- . pop [pop! t0]
034A : 9607; --   tst  t0
034B : 2051; -- . imov [jz!  .main_body_0_while_exit]
034C : 3003; -- | imoh
034D : A001; -- ' j_op
034E : 2046; -- . imov [jmp! .main_body_0_while_eval]
034F : 3003; -- | imoh
0350 : A000; -- ' j_op
0351 : 66D0; -- . pop [pop! t0]
0352 : 2602; -- . imov [load!   t0 .ret_stack_ptr]
0353 : 3680; -- | imoh
0354 : 0660; -- ' load
0355 : 9615; --   isub    t0 1
0356 : 0760; --   load    t1 t0
0357 : 2002; -- . imov [str!    .ret_stack_ptr t0]
0358 : 3080; -- | imoh
0359 : 1060; -- ' str
035A : A700; --   jmp     t1
END;